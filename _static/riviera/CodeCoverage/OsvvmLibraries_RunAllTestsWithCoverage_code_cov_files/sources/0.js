Report.sources['./../../../SynthWorks/Dev/_osvvm/OsvvmLibraries/osvvm/ResolutionPkg.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ResolutionPkg.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;ResolutionPkg\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@SynthWorks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@SynthWorks.com\n--\n--&nbsp;&nbsp;Package&nbsp;Defines\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolved&nbsp;resolution&nbsp;functions&nbsp;for&nbsp;integer,&nbsp;real,&nbsp;and&nbsp;time\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;types&nbsp;resolved_integer,&nbsp;resolved_real,&nbsp;resolved_time\n--\n--&nbsp;&nbsp;Developed&nbsp;for:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11898&nbsp;SW&nbsp;128th&nbsp;Ave.&nbsp;&nbsp;Tigard,&nbsp;Or&nbsp;&nbsp;97223\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;06/2021&nbsp;&nbsp;&nbsp;2021.06&nbsp;&nbsp;&nbsp;&nbsp;Moved&nbsp;To/FromTransaction&nbsp;and&nbsp;SafeResize&nbsp;to&nbsp;Resize&nbsp;package\n--&nbsp;&nbsp;&nbsp;&nbsp;12/2020&nbsp;&nbsp;&nbsp;2020.12&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;ToTransaction&nbsp;and&nbsp;FromTransaction&nbsp;with&nbsp;length&nbsp;parameter.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Downsizing&nbsp;now&nbsp;permitted&nbsp;when&nbsp;it&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;value.\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2020&nbsp;&nbsp;&nbsp;2020.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;Licenses&nbsp;to&nbsp;Apache\n--&nbsp;&nbsp;&nbsp;&nbsp;11/2016&nbsp;&nbsp;&nbsp;2016.11&nbsp;&nbsp;&nbsp;&nbsp;Removed&nbsp;Asserts&nbsp;as&nbsp;they&nbsp;are&nbsp;not&nbsp;working&nbsp;as&nbsp;intended.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;See&nbsp;ResolutionPkg_debug&nbsp;as&nbsp;it&nbsp;uses&nbsp;Alerts&nbsp;to&nbsp;correctly&nbsp;detect&nbsp;errors\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2015&nbsp;&nbsp;&nbsp;2015.05&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;Alerts\n--&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaced&nbsp;Alerts&nbsp;with&nbsp;asserts&nbsp;as&nbsp;alerts&nbsp;are&nbsp;illegal&nbsp;in&nbsp;pure&nbsp;functions\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2009&nbsp;&nbsp;&nbsp;1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL-2008&nbsp;STANDARD&nbsp;VERSION\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2006&nbsp;&nbsp;&nbsp;0.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initial&nbsp;revision\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Numerous&nbsp;revisions&nbsp;for&nbsp;VHDL&nbsp;Testbenches&nbsp;and&nbsp;Verification\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2005&nbsp;-&nbsp;2021&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;\nuse&nbsp;ieee.std_logic_1164.all&nbsp;;\nuse&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;\npackage&nbsp;ResolutionPkg&nbsp;is\n&nbsp;&nbsp;constant&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;:&nbsp;severity_level&nbsp;:=&nbsp;ERROR&nbsp;;\n&nbsp;\n--\n--&nbsp;Note&nbsp;that&nbsp;not&nbsp;all&nbsp;simulators&nbsp;support&nbsp;resolution&nbsp;functions&nbsp;of&nbsp;the&nbsp;form:\n--&nbsp;&nbsp;&nbsp;&nbsp;subtype&nbsp;&nbsp;std_logic_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;std_ulogic_vector&nbsp;;\n--\n--&nbsp;Hence,&nbsp;types&nbsp;of&nbsp;the&nbsp;form&nbsp;are&nbsp;offered&nbsp;as&nbsp;a&nbsp;temporary&nbsp;workaround&nbsp;until&nbsp;they&nbsp;do:\n--&nbsp;&nbsp;&nbsp;&nbsp;std_logic_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;std_logic_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n--\n&nbsp;\n&nbsp;&nbsp;--&nbsp;resolved_max\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;return&nbsp;maximum&nbsp;value.\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;std_ulogic_vector)&nbsp;return&nbsp;std_ulogic&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;std_logic_max&nbsp;is&nbsp;resolved_max&nbsp;std_ulogic&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;std_logic_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;std_ulogic_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std_logic_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;std_logic_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;unsigned_max&nbsp;is&nbsp;(resolved_max)&nbsp;unresolved_unsigned&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;std_logic_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;&nbsp;subtype&nbsp;&nbsp;signed_max&nbsp;&nbsp;&nbsp;is&nbsp;(resolved_max)&nbsp;unresolved_signed&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signed_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;std_logic_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;bit_vector)&nbsp;return&nbsp;bit&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;bit_max&nbsp;is&nbsp;resolved_max&nbsp;bit&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;bit_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;bit_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bit_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;bit_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;integer_max&nbsp;is&nbsp;resolved_max&nbsp;integer&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;integer_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;integer_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;integer_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;time_max&nbsp;is&nbsp;resolved_max&nbsp;time&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;time_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;time_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;time_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;real_max&nbsp;is&nbsp;resolved_max&nbsp;real&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;real_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;real_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;real_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;real_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;string)&nbsp;return&nbsp;character&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;character_max&nbsp;is&nbsp;resolved_max&nbsp;character&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;string_max&nbsp;is&nbsp;(resolved_max)&nbsp;string&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string_max_c&nbsp;is&nbsp;array&nbsp;(positive&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;character_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;boolean_vector)&nbsp;return&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;boolean_max&nbsp;is&nbsp;resolved_max&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;boolean_vector_max&nbsp;is&nbsp;(resolved_max)&nbsp;boolean_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean_vector_max_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;boolean_max&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;--&nbsp;return&nbsp;sum&nbsp;of&nbsp;values&nbsp;that&nbsp;/=&nbsp;type&apos;left\n&nbsp;&nbsp;--&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;integer_sum&nbsp;is&nbsp;resolved_sum&nbsp;integer&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;integer_vector_sum&nbsp;is&nbsp;(resolved_sum)&nbsp;integer_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer_vector_sum_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;integer_sum&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;time_sum&nbsp;is&nbsp;resolved_sum&nbsp;time&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;time_vector_sum&nbsp;is&nbsp;(resolved_sum)&nbsp;time_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time_vector_sum_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;time_sum&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;real_sum&nbsp;is&nbsp;resolved_sum&nbsp;real&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;real_vector_sum&nbsp;is&nbsp;(resolved_sum)&nbsp;real_vector&nbsp;;\n&nbsp;&nbsp;type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;real_vector_sum_c&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;real_sum&nbsp;;&nbsp;--&nbsp;for&nbsp;non&nbsp;VHDL-2008\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;resolved_weak\n&nbsp;&nbsp;--&nbsp;Special&nbsp;just&nbsp;for&nbsp;std_ulogic\n&nbsp;&nbsp;--&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;&nbsp;function&nbsp;resolved_weak&nbsp;(s&nbsp;:&nbsp;std_ulogic_vector)&nbsp;return&nbsp;std_ulogic&nbsp;;&nbsp;&nbsp;--&nbsp;no&nbsp;init,&nbsp;type&apos;left\n&nbsp;&nbsp;subtype&nbsp;&nbsp;std_logic_weak&nbsp;is&nbsp;resolved_weak&nbsp;std_ulogic&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;std_logic_vector_weak&nbsp;is&nbsp;(resolved_weak)&nbsp;std_ulogic_vector&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;legacy&nbsp;stuff\n&nbsp;&nbsp;--&nbsp;requires&nbsp;ports&nbsp;to&nbsp;be&nbsp;initialized&nbsp;to&nbsp;0&nbsp;in&nbsp;the&nbsp;appropriate&nbsp;type.\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;resolved_integer&nbsp;is&nbsp;resolved&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;resolved_time&nbsp;is&nbsp;resolved&nbsp;time&nbsp;;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;subtype&nbsp;&nbsp;resolved_real&nbsp;is&nbsp;resolved&nbsp;real&nbsp;;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(s&nbsp;:&nbsp;string)&nbsp;return&nbsp;character&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;same&nbsp;as&nbsp;resolved_max\n&nbsp;&nbsp;subtype&nbsp;&nbsp;resolved_character&nbsp;is&nbsp;resolved&nbsp;character&nbsp;;\n&nbsp;&nbsp;--&nbsp;subtype&nbsp;&nbsp;resolved_string&nbsp;is&nbsp;(resolved)&nbsp;string&nbsp;;&nbsp;&nbsp;--&nbsp;subtype&nbsp;will&nbsp;replace&nbsp;type&nbsp;later\n&nbsp;&nbsp;type&nbsp;resolved_string&nbsp;is&nbsp;array&nbsp;(positive&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;resolved_character;&nbsp;&nbsp;--&nbsp;will&nbsp;change&nbsp;to&nbsp;subtype&nbsp;--&nbsp;assert&nbsp;but&nbsp;no&nbsp;init\n&nbsp;\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;boolean_vector)&nbsp;return&nbsp;boolean&nbsp;;&nbsp;&nbsp;--same&nbsp;as&nbsp;resolved_max\n&nbsp;&nbsp;subtype&nbsp;&nbsp;resolved_boolean&nbsp;is&nbsp;resolved&nbsp;boolean&nbsp;;\n&nbsp;\nend&nbsp;package&nbsp;ResolutionPkg&nbsp;;\npackage&nbsp;body&nbsp;ResolutionPkg&nbsp;is\n&nbsp;\n&nbsp;&nbsp;--&nbsp;resolved_max\n&nbsp;&nbsp;--&nbsp;return&nbsp;maximum&nbsp;value.&nbsp;&nbsp;Assert&nbsp;FAILURE&nbsp;if&nbsp;more&nbsp;than&nbsp;1&nbsp;/=&nbsp;type&apos;left\n&nbsp;&nbsp;--&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Optimized&nbsp;version&nbsp;is&nbsp;just&nbsp;the&nbsp;following:\n&nbsp;&nbsp;--&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;&lt;array_type&gt;&nbsp;)&nbsp;return&nbsp;&lt;element_type&gt;&nbsp;is\n&nbsp;&nbsp;--&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;begin\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(s&nbsp;:&nbsp;std_ulogic_vector)&nbsp;return&nbsp;std_ulogic&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;bit_vector&nbsp;)&nbsp;return&nbsp;bit&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;string&nbsp;)&nbsp;return&nbsp;character&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_max&nbsp;(&nbsp;s&nbsp;:&nbsp;boolean_vector)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;maximum(s)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_max&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;resolved_sum&nbsp;-&nbsp;appropriate&nbsp;for&nbsp;numeric&nbsp;types\n&nbsp;&nbsp;--&nbsp;return&nbsp;sum&nbsp;of&nbsp;values&nbsp;that&nbsp;/=&nbsp;type&apos;left\n&nbsp;&nbsp;--&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;integer&apos;left&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;s(i)&nbsp;+&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_sum&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;time&nbsp;:=&nbsp;0&nbsp;sec&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;time&apos;left&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;s(i)&nbsp;+&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_sum&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_sum&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;real&nbsp;:=&nbsp;0.0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;real&apos;left&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;s(i)&nbsp;+&nbsp;result;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_sum&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;resolved_weak\n&nbsp;&nbsp;--&nbsp;Special&nbsp;just&nbsp;for&nbsp;std_ulogic\n&nbsp;&nbsp;--&nbsp;No&nbsp;initializations&nbsp;required&nbsp;on&nbsp;ports,&nbsp;default&nbsp;of&nbsp;type&apos;left&nbsp;is&nbsp;ok\n&nbsp;&nbsp;type&nbsp;stdlogic_table&nbsp;is&nbsp;array(STD_ULOGIC,&nbsp;STD_ULOGIC)&nbsp;of&nbsp;STD_ULOGIC;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;weak_resolution_table&nbsp;:&nbsp;stdlogic_table&nbsp;:=&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;Resolution&nbsp;order:&nbsp;&nbsp;Z&nbsp;&lt;&nbsp;U&nbsp;&lt;&nbsp;W&nbsp;&lt;&nbsp;X&nbsp;&lt;&nbsp;-&nbsp;&lt;&nbsp;L&nbsp;&lt;&nbsp;H&nbsp;&lt;&nbsp;0&nbsp;&lt;&nbsp;1\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;U&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;Z&nbsp;&nbsp;&nbsp;&nbsp;W&nbsp;&nbsp;&nbsp;&nbsp;L&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;U&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;U&apos;,&nbsp;&apos;W&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;-&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;U&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;X&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;-&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;X&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;0&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;0&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;0&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;1&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;1&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;U&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;Z&apos;,&nbsp;&apos;W&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;-&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;Z&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;W&apos;,&nbsp;&apos;X&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;W&apos;,&nbsp;&apos;W&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;-&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;W&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;L&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;L&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;L&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;H&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;W&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;H&apos;),&nbsp;&nbsp;--&nbsp;|&nbsp;H&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&apos;-&apos;,&nbsp;&apos;-&apos;,&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;,&nbsp;&apos;-&apos;,&nbsp;&apos;-&apos;,&nbsp;&apos;L&apos;,&nbsp;&apos;H&apos;,&nbsp;&apos;-&apos;)&nbsp;&nbsp;&nbsp;--&nbsp;|&nbsp;-&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved_weak&nbsp;(s&nbsp;:&nbsp;std_ulogic_vector)&nbsp;return&nbsp;std_ulogic&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;std_ulogic&nbsp;:=&nbsp;&apos;Z&apos;&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;weak_resolution_table(result,&nbsp;s(i))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved_weak&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;legacy&nbsp;stuff.\n&nbsp;&nbsp;--&nbsp;requires&nbsp;ports&nbsp;to&nbsp;be&nbsp;initialized&nbsp;to&nbsp;0&nbsp;in&nbsp;the&nbsp;appropriate&nbsp;type.\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;integer_vector&nbsp;)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;--&nbsp;requires&nbsp;interface&nbsp;to&nbsp;be&nbsp;initialized&nbsp;to&nbsp;0\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;failed&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;0&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failed&nbsp;:=&nbsp;failed&nbsp;or&nbsp;(result&nbsp;/=&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;maximum(s(i),result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;not&nbsp;failed&nbsp;report&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;integer&quot;&nbsp;severity&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(OSVVM_ALERTLOG_ID,&nbsp;failed,&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;integer&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;time_vector&nbsp;)&nbsp;return&nbsp;time&nbsp;is\n&nbsp;&nbsp;--&nbsp;requires&nbsp;interface&nbsp;to&nbsp;be&nbsp;initialized&nbsp;to&nbsp;0&nbsp;ns\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;time&nbsp;:=&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;failed&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;&gt;&nbsp;0&nbsp;ns&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failed&nbsp;:=&nbsp;failed&nbsp;or&nbsp;(result&nbsp;/=&nbsp;0&nbsp;ns)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;maximum(s(i),result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;not&nbsp;failed&nbsp;report&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;time&quot;&nbsp;severity&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(OSVVM_ALERTLOG_ID,&nbsp;failed,&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;time&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;real_vector&nbsp;)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;--&nbsp;requires&nbsp;interface&nbsp;to&nbsp;be&nbsp;initialized&nbsp;to&nbsp;0.0\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;real&nbsp;:=&nbsp;0.0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;failed&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;0.0&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failed&nbsp;:=&nbsp;failed&nbsp;or&nbsp;(result&nbsp;/=&nbsp;0.0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;maximum(s(i),result);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;not&nbsp;failed&nbsp;report&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;real&quot;&nbsp;severity&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(OSVVM_ALERTLOG_ID,&nbsp;failed,&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;real&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(s&nbsp;:&nbsp;string)&nbsp;return&nbsp;character&nbsp;is\n&nbsp;&nbsp;--&nbsp;same&nbsp;as&nbsp;resolved_max\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;character&nbsp;:=&nbsp;NUL&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;failed&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;/=&nbsp;NUL&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failed&nbsp;:=&nbsp;failed&nbsp;or&nbsp;(result&nbsp;/=&nbsp;NUL)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;maximum(result,&nbsp;s(i))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;not&nbsp;failed&nbsp;report&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;character&quot;&nbsp;severity&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(OSVVM_ALERTLOG_ID,&nbsp;failed,&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;character&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;resolved&nbsp;(&nbsp;s&nbsp;:&nbsp;boolean_vector)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;--&nbsp;same&nbsp;as&nbsp;resolved_max\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;failed&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;s&apos;RANGE&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;s(i)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failed&nbsp;:=&nbsp;failed&nbsp;or&nbsp;result&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;not&nbsp;failed&nbsp;report&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;boolean&quot;&nbsp;severity&nbsp;MULTIPLE_DRIVER_SEVERITY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(OSVVM_ALERTLOG_ID,&nbsp;failed,&nbsp;&quot;ResolutionPkg.resolved:&nbsp;multiple&nbsp;drivers&nbsp;on&nbsp;boolean&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;resolved&nbsp;;\n&nbsp;\nend&nbsp;package&nbsp;body&nbsp;ResolutionPkg&nbsp;;\n';
Report.brushes['./../../../SynthWorks/Dev/_osvvm/OsvvmLibraries/osvvm/ResolutionPkg.vhd'] = 'vhdl'
