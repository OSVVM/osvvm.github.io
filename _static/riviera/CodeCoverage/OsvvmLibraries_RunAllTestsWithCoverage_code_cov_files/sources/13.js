Report.sources['./../../../OsvvmLibraries/osvvm/RandomBasePkg.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RandomBasePkg.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;RandomBasePkg\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines&nbsp;Base&nbsp;randomization,&nbsp;seed&nbsp;definition,&nbsp;seed&nbsp;generation,\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;seed&nbsp;IO&nbsp;functionality&nbsp;for&nbsp;RandomPkg.vhd\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Procedure&nbsp;Uniform&nbsp;-&nbsp;baseline&nbsp;randomization&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;RandomSeedType&nbsp;-&nbsp;the&nbsp;seed&nbsp;as&nbsp;a&nbsp;single&nbsp;object\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;GenRandSeed&nbsp;from&nbsp;integer_vector,&nbsp;integer,&nbsp;or&nbsp;string\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IO&nbsp;function&nbsp;to_string,&nbsp;&amp;&nbsp;procedures&nbsp;write,&nbsp;read\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;revision&nbsp;2.0&nbsp;these&nbsp;types&nbsp;and&nbsp;functions&nbsp;are&nbsp;included&nbsp;by&nbsp;package&nbsp;reference.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Long&nbsp;term&nbsp;these&nbsp;will&nbsp;be&nbsp;passed&nbsp;as&nbsp;generics&nbsp;to&nbsp;RandomGenericPkg\n--\n--\n--&nbsp;&nbsp;Developed&nbsp;for:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11898&nbsp;SW&nbsp;128th&nbsp;Ave.&nbsp;&nbsp;Tigard,&nbsp;Or&nbsp;&nbsp;97223\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2023&nbsp;&nbsp;&nbsp;&nbsp;2023.01&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;functions&nbsp;for&nbsp;SetRandomSalt&nbsp;to&nbsp;support&nbsp;setting&nbsp;in&nbsp;declaration&nbsp;regions\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2022&nbsp;&nbsp;&nbsp;&nbsp;2022.10&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;SetRandomSalt(string&nbsp;or&nbsp;integer),&nbsp;GetRandomSalt&nbsp;(integer),&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RandomSalt&nbsp;is&nbsp;added&nbsp;to&nbsp;all&nbsp;versions&nbsp;of&nbsp;GenRandSeed\n--&nbsp;&nbsp;&nbsp;&nbsp;06/2021&nbsp;&nbsp;&nbsp;&nbsp;2021.06&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;GenRandSeed&nbsp;hash&nbsp;to&nbsp;DJBX33A&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2020&nbsp;&nbsp;&nbsp;&nbsp;2020.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;Licenses&nbsp;to&nbsp;Apache\n--&nbsp;&nbsp;&nbsp;&nbsp;6/2015&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2015.06&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;GenRandSeed&nbsp;to&nbsp;impure\n--&nbsp;&nbsp;&nbsp;&nbsp;1/2015&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2015.01&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;Assert/Report&nbsp;to&nbsp;Alert\n--&nbsp;&nbsp;&nbsp;&nbsp;5/2013&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2013.05&nbsp;&nbsp;&nbsp;&nbsp;No&nbsp;Changes\n--&nbsp;&nbsp;&nbsp;&nbsp;4/2013&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2013.04&nbsp;&nbsp;&nbsp;&nbsp;No&nbsp;Changes\n--&nbsp;&nbsp;&nbsp;&nbsp;03/01/2011&nbsp;2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STANDARD&nbsp;VERSION\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fixed&nbsp;abstraction&nbsp;by&nbsp;moving&nbsp;RandomParmType&nbsp;to&nbsp;RandomPkg.vhd&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;02/25/2009&nbsp;1.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaced&nbsp;reference&nbsp;to&nbsp;std_2008&nbsp;with&nbsp;a&nbsp;reference&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;ieee_proposed.standard_additions.all&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2009:&nbsp;&nbsp;&nbsp;1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;First&nbsp;Public&nbsp;Released&nbsp;Version\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2008:&nbsp;&nbsp;&nbsp;0.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initial&nbsp;revision\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Numerous&nbsp;revisions&nbsp;for&nbsp;VHDL&nbsp;Testbenches&nbsp;and&nbsp;Verification\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2008&nbsp;-&nbsp;2023&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.&nbsp;&nbsp;\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;\nuse&nbsp;ieee.math_real.all&nbsp;;\nuse&nbsp;std.textio.all&nbsp;;\n&nbsp;\nuse&nbsp;work.OsvvmGlobalPkg.all&nbsp;;&nbsp;\nuse&nbsp;work.AlertLogPkg.all&nbsp;;&nbsp;\nuse&nbsp;work.SortListPkg_int.all&nbsp;;\n&nbsp;\n--&nbsp;comment&nbsp;out&nbsp;following&nbsp;2&nbsp;lines&nbsp;with&nbsp;VHDL-2008.&nbsp;&nbsp;Leave&nbsp;in&nbsp;for&nbsp;VHDL-2002&nbsp;\n--&nbsp;library&nbsp;ieee_proposed&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;remove&nbsp;with&nbsp;VHDL-2008\n--&nbsp;use&nbsp;ieee_proposed.standard_additions.all&nbsp;;&nbsp;&nbsp;&nbsp;--&nbsp;remove&nbsp;with&nbsp;VHDL-2008\n&nbsp;\n&nbsp;\npackage&nbsp;RandomBasePkg&nbsp;is\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;OSVVM_RANDOM_ALERTLOG_ID&nbsp;:&nbsp;AlertLogIDType&nbsp;:=&nbsp;OSVVM_ALERTLOG_ID&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;note&nbsp;NULL_RANGE_TYPE&nbsp;should&nbsp;probably&nbsp;be&nbsp;in&nbsp;std.standard\n&nbsp;&nbsp;subtype&nbsp;NULL_RANGE_TYPE&nbsp;is&nbsp;integer&nbsp;range&nbsp;0&nbsp;downto&nbsp;1&nbsp;;\n&nbsp;&nbsp;constant&nbsp;NULL_INTV&nbsp;:&nbsp;integer_vector&nbsp;(NULL_RANGE_TYPE)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;0)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;RandomSeedType&nbsp;-&nbsp;Abstract&nbsp;the&nbsp;type&nbsp;for&nbsp;randomization\n&nbsp;&nbsp;type&nbsp;RandomSeedType&nbsp;is&nbsp;array&nbsp;(1&nbsp;to&nbsp;2)&nbsp;of&nbsp;integer&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Uniform\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Generate&nbsp;a&nbsp;random&nbsp;number&nbsp;with&nbsp;a&nbsp;Uniform&nbsp;distribution\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Required&nbsp;by&nbsp;RandomPkg.&nbsp;&nbsp;All&nbsp;randomization&nbsp;is&nbsp;derived&nbsp;from&nbsp;here.\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Value&nbsp;produced&nbsp;must&nbsp;be&nbsp;either:&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&lt;=&nbsp;Value&nbsp;&lt;&nbsp;1&nbsp;&nbsp;or&nbsp;&nbsp;0&nbsp;&lt;&nbsp;Value&nbsp;&lt;&nbsp;1\n&nbsp;&nbsp;--\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Current&nbsp;version&nbsp;uses&nbsp;ieee.math_real.Uniform\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;This&nbsp;abstraction&nbsp;allows&nbsp;higher&nbsp;precision&nbsp;version&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;of&nbsp;a&nbsp;uniform&nbsp;distribution&nbsp;to&nbsp;be&nbsp;used&nbsp;provided\n&nbsp;&nbsp;--\n&nbsp;&nbsp;procedure&nbsp;Uniform&nbsp;(Result&nbsp;:&nbsp;out&nbsp;real&nbsp;;&nbsp;&nbsp;Seed&nbsp;:&nbsp;inout&nbsp;RandomSeedType)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;GenRandSeed\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Generate&nbsp;/&nbsp;hash&nbsp;a&nbsp;seed&nbsp;from&nbsp;a&nbsp;value&nbsp;that&nbsp;is&nbsp;integer_vector,&nbsp;String,&nbsp;Time,&nbsp;or&nbsp;Integer&nbsp;to&nbsp;RandomSeedType\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Used&nbsp;by&nbsp;RandomPkg.InitSeed\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;GenRandSeed&nbsp;makes&nbsp;sure&nbsp;all&nbsp;values&nbsp;are&nbsp;in&nbsp;a&nbsp;valid&nbsp;range\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;GenRandSeed&nbsp;&nbsp;&nbsp;(IV&nbsp;:&nbsp;integer_vector)&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;OldGenRandSeed(IV&nbsp;:&nbsp;integer_vector)&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;GenRandSeed&nbsp;&nbsp;&nbsp;(I&nbsp;&nbsp;:&nbsp;integer)&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;OldGenRandSeed(I&nbsp;&nbsp;:&nbsp;integer)&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;GenRandSeed&nbsp;&nbsp;&nbsp;(S&nbsp;&nbsp;:&nbsp;string)&nbsp;&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;OldGenRandSeed(S&nbsp;&nbsp;:&nbsp;string)&nbsp;&nbsp;return&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;;&nbsp;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;boolean&nbsp;;&nbsp;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;procedure&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;;&nbsp;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;string&nbsp;;\n&nbsp;&nbsp;impure&nbsp;function&nbsp;GetRandomSalt&nbsp;return&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;---&nbsp;RandomSeedType&nbsp;IO\n&nbsp;&nbsp;function&nbsp;&nbsp;to_string(A&nbsp;:&nbsp;RandomSeedType;&nbsp;Separator&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&nbsp;&quot;)&nbsp;return&nbsp;string&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomSeedType&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomSeedType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomSeedType&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;---&nbsp;Distribution&nbsp;Types&nbsp;and&nbsp;read/write&nbsp;procedures\n&nbsp;&nbsp;type&nbsp;RandomDistType&nbsp;is&nbsp;(NONE,&nbsp;UNIFORM,&nbsp;FAVOR_SMALL,&nbsp;FAVOR_BIG,&nbsp;NORMAL,&nbsp;POISSON)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;type&nbsp;RandomParmType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;Distribution&nbsp;:&nbsp;RandomDistType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Mean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Real&nbsp;;&nbsp;--&nbsp;also&nbsp;used&nbsp;as&nbsp;probability&nbsp;of&nbsp;success\n&nbsp;&nbsp;&nbsp;&nbsp;StdDeviation&nbsp;:&nbsp;Real&nbsp;;&nbsp;--&nbsp;also&nbsp;used&nbsp;as&nbsp;number&nbsp;of&nbsp;trials&nbsp;for&nbsp;binomial\n&nbsp;&nbsp;end&nbsp;record&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;RandomParm&nbsp;IO\n&nbsp;&nbsp;function&nbsp;to_string(A&nbsp;:&nbsp;RandomDistType)&nbsp;return&nbsp;string&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomDistType&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomDistType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomDistType&nbsp;)&nbsp;;\n&nbsp;&nbsp;function&nbsp;to_string(A&nbsp;:&nbsp;RandomParmType)&nbsp;return&nbsp;string&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomParmType&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomParmType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;read&nbsp;(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomParmType&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;---&nbsp;&nbsp;Randomization&nbsp;Support\n&nbsp;&nbsp;---&nbsp;&nbsp;&nbsp;&nbsp;Scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Scale&nbsp;a&nbsp;value&nbsp;to&nbsp;be&nbsp;within&nbsp;a&nbsp;given&nbsp;range\n&nbsp;&nbsp;---&nbsp;&nbsp;&nbsp;&nbsp;FavorSmall,&nbsp;FavorBig&nbsp;-&nbsp;Distribution&nbsp;Support\n&nbsp;&nbsp;---&nbsp;&nbsp;&nbsp;&nbsp;RemoveExclude&nbsp;\n&nbsp;&nbsp;function&nbsp;Scale&nbsp;(A,&nbsp;Min,&nbsp;Max&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;function&nbsp;Scale&nbsp;(A&nbsp;:&nbsp;real&nbsp;;&nbsp;Min,&nbsp;Max&nbsp;:&nbsp;integer)&nbsp;return&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;FavorSmall&nbsp;(A&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;function&nbsp;FavorBig&nbsp;&nbsp;&nbsp;(A&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;to_time_vector&nbsp;&nbsp;&nbsp;&nbsp;(A&nbsp;:&nbsp;integer_vector&nbsp;;&nbsp;Unit&nbsp;:&nbsp;time)&nbsp;return&nbsp;time_vector&nbsp;;\n&nbsp;&nbsp;function&nbsp;to_integer_vector&nbsp;(A&nbsp;:&nbsp;time_vector&nbsp;;&nbsp;Unit&nbsp;:&nbsp;time)&nbsp;return&nbsp;integer_vector&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude&nbsp;&nbsp;&nbsp;&nbsp;(A,&nbsp;Exclude&nbsp;:&nbsp;integer_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;integer_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;;\n&nbsp;&nbsp;function&nbsp;inside&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(A&nbsp;:&nbsp;real&nbsp;;&nbsp;Exclude&nbsp;:&nbsp;real_vector)&nbsp;return&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude&nbsp;&nbsp;&nbsp;&nbsp;(A,&nbsp;Exclude&nbsp;:&nbsp;real_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;real_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;;\n&nbsp;&nbsp;function&nbsp;inside&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(A&nbsp;:&nbsp;time&nbsp;;&nbsp;Exclude&nbsp;:&nbsp;time_vector)&nbsp;return&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude&nbsp;&nbsp;&nbsp;&nbsp;(A,&nbsp;Exclude&nbsp;:&nbsp;time_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;time_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;;\nend&nbsp;RandomBasePkg&nbsp;;\n&nbsp;\n---&nbsp;///////////////////////////////////////////////////////////////////////////\n---&nbsp;///////////////////////////////////////////////////////////////////////////\n---&nbsp;///////////////////////////////////////////////////////////////////////////\n&nbsp;\npackage&nbsp;body&nbsp;RandomBasePkg&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Uniform\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Generate&nbsp;a&nbsp;random&nbsp;number&nbsp;with&nbsp;a&nbsp;Uniform&nbsp;distribution\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Required&nbsp;by&nbsp;RandomPkg.&nbsp;&nbsp;All&nbsp;randomization&nbsp;is&nbsp;derived&nbsp;from&nbsp;here.\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Value&nbsp;produced&nbsp;must&nbsp;be&nbsp;either:&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&lt;=&nbsp;Value&nbsp;&lt;&nbsp;1&nbsp;&nbsp;or&nbsp;&nbsp;0&nbsp;&lt;&nbsp;Value&nbsp;&lt;&nbsp;1\n&nbsp;&nbsp;--\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Current&nbsp;version&nbsp;uses&nbsp;ieee.math_real.Uniform\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;This&nbsp;abstraction&nbsp;allows&nbsp;higher&nbsp;precision&nbsp;version&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;of&nbsp;a&nbsp;uniform&nbsp;distribution&nbsp;to&nbsp;be&nbsp;used&nbsp;provided\n&nbsp;&nbsp;--\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;Uniform&nbsp;(\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;:&nbsp;out&nbsp;&nbsp;&nbsp;real&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Seed&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;RandomSeedType&nbsp;\n&nbsp;&nbsp;)&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;ieee.math_real.Uniform&nbsp;(Seed(Seed&apos;left),&nbsp;Seed(Seed&apos;right),&nbsp;Result)&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;Uniform&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;GenRandSeed\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Convert&nbsp;integer_vector&nbsp;to&nbsp;RandomSeedType\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Uniform&nbsp;requires&nbsp;two&nbsp;seed&nbsp;values&nbsp;of&nbsp;the&nbsp;form:\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&lt;=&nbsp;SEED1&nbsp;&lt;=&nbsp;2147483562;&nbsp;1&nbsp;&lt;=&nbsp;SEED2&nbsp;&lt;=&nbsp;2147483398\n&nbsp;&nbsp;--\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;2&nbsp;seed&nbsp;values&nbsp;are&nbsp;passed&nbsp;to&nbsp;GenRandSeed&nbsp;and&nbsp;they&nbsp;are&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;above&nbsp;range,&nbsp;then&nbsp;they&nbsp;must&nbsp;remain&nbsp;unmodified.\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;GenRandSeed(IV&nbsp;:&nbsp;integer_vector)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;iIV&nbsp;:&nbsp;integer_vector(1&nbsp;to&nbsp;IV&apos;length)&nbsp;is&nbsp;IV&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Seed1&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Seed2&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;SEED1_MAX&nbsp;:&nbsp;integer&nbsp;:=&nbsp;2147483562&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;SEED2_MAX&nbsp;:&nbsp;integer&nbsp;:=&nbsp;2147483398&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iIV&apos;Length&nbsp;&lt;=&nbsp;0&nbsp;then&nbsp;&nbsp;--&nbsp;no&nbsp;seed\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(OSVVM_ALERTLOG_ID,&nbsp;&quot;RandomBasePkg.GenRandSeed&nbsp;received&nbsp;NULL&nbsp;integer_vector&quot;,&nbsp;FAILURE)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GenRandSeed(integer_vector&apos;(3,&nbsp;17))&nbsp;;&nbsp;&nbsp;--&nbsp;if&nbsp;continue&nbsp;seed&nbsp;=&nbsp;(3,&nbsp;17)\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;iIV&apos;Length&nbsp;=&nbsp;1&nbsp;then&nbsp;&nbsp;--&nbsp;one&nbsp;seed&nbsp;value\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;inefficient&nbsp;handling,&nbsp;but&nbsp;condition&nbsp;is&nbsp;unlikely\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GenRandSeed(iIV(1))&nbsp;;&nbsp;&nbsp;--&nbsp;generate&nbsp;a&nbsp;seed\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;&nbsp;--&nbsp;only&nbsp;use&nbsp;the&nbsp;left&nbsp;two&nbsp;values\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;mod&nbsp;returns&nbsp;0&nbsp;to&nbsp;MAX-1,&nbsp;the&nbsp;-1&nbsp;adjusts&nbsp;legal&nbsp;values,&nbsp;+1&nbsp;adjusts&nbsp;them&nbsp;back\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;1&nbsp;&lt;=&nbsp;SEED1&nbsp;&lt;=&nbsp;2147483562\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seed1&nbsp;:=&nbsp;((iIV(1)-1&nbsp;+&nbsp;GetRandomSalt)&nbsp;mod&nbsp;SEED1_MAX)&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;1&nbsp;&lt;=&nbsp;SEED2&nbsp;&lt;=&nbsp;2147483398\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seed2&nbsp;:=&nbsp;((iIV(2)-1)&nbsp;mod&nbsp;SEED2_MAX)&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(Seed1,&nbsp;Seed2)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;GenRandSeed&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;OldGenRandSeed(IV&nbsp;:&nbsp;integer_vector)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;iIV&nbsp;:&nbsp;integer_vector(1&nbsp;to&nbsp;IV&apos;length)&nbsp;is&nbsp;IV&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Seed1&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Seed2&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;SEED1_MAX&nbsp;:&nbsp;integer&nbsp;:=&nbsp;2147483562&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;SEED2_MAX&nbsp;:&nbsp;integer&nbsp;:=&nbsp;2147483398&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iIV&apos;Length&nbsp;&lt;=&nbsp;0&nbsp;then&nbsp;&nbsp;--&nbsp;no&nbsp;seed\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(OSVVM_ALERTLOG_ID,&nbsp;&quot;RandomBasePkg.GenRandSeed&nbsp;received&nbsp;NULL&nbsp;integer_vector&quot;,&nbsp;FAILURE)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;OldGenRandSeed(integer_vector&apos;(3,&nbsp;17))&nbsp;;&nbsp;&nbsp;--&nbsp;if&nbsp;continue&nbsp;seed&nbsp;=&nbsp;(3,&nbsp;17)\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;iIV&apos;Length&nbsp;=&nbsp;1&nbsp;then&nbsp;&nbsp;--&nbsp;one&nbsp;seed&nbsp;value\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;inefficient&nbsp;handling,&nbsp;but&nbsp;condition&nbsp;is&nbsp;unlikely\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;OldGenRandSeed(iIV(1))&nbsp;;&nbsp;&nbsp;--&nbsp;generate&nbsp;a&nbsp;seed\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;&nbsp;--&nbsp;only&nbsp;use&nbsp;the&nbsp;left&nbsp;two&nbsp;values\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;mod&nbsp;returns&nbsp;0&nbsp;to&nbsp;MAX-1,&nbsp;the&nbsp;-1&nbsp;adjusts&nbsp;legal&nbsp;values,&nbsp;+1&nbsp;adjusts&nbsp;them&nbsp;back\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;1&nbsp;&lt;=&nbsp;SEED1&nbsp;&lt;=&nbsp;2147483562\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seed1&nbsp;:=&nbsp;((iIV(1)-1&nbsp;+&nbsp;GetRandomSalt)&nbsp;mod&nbsp;SEED1_MAX)&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;1&nbsp;&lt;=&nbsp;SEED2&nbsp;&lt;=&nbsp;2147483398\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seed2&nbsp;:=&nbsp;((iIV(2)-1)&nbsp;mod&nbsp;SEED2_MAX)&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(Seed1,&nbsp;Seed2)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;OldGenRandSeed&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;GenRandSeed&nbsp;-&nbsp;Integer\n&nbsp;&nbsp;impure&nbsp;function&nbsp;GenRandSeed(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;result(1)&nbsp;:=&nbsp;integer((real(I&nbsp;+&nbsp;GetRandomSalt)&nbsp;*&nbsp;5381.0&nbsp;+&nbsp;313.0)&nbsp;mod&nbsp;2.0&nbsp;**&nbsp;30)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(2)&nbsp;:=&nbsp;integer((real(I)&nbsp;*&nbsp;313.0&nbsp;+&nbsp;5381.0)&nbsp;mod&nbsp;2.0&nbsp;**&nbsp;30)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;&nbsp;--&nbsp;make&nbsp;value&nbsp;ranges&nbsp;legal\n&nbsp;&nbsp;end&nbsp;function&nbsp;GenRandSeed&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;OldGenRandSeed(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;integer_vector(1&nbsp;to&nbsp;2)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;result(1)&nbsp;:=&nbsp;I&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(2)&nbsp;:=&nbsp;I/3&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;OldGenRandSeed(result)&nbsp;;&nbsp;--&nbsp;make&nbsp;value&nbsp;ranges&nbsp;legal\n&nbsp;&nbsp;end&nbsp;function&nbsp;OldGenRandSeed&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;GenRandSeed&nbsp;-&nbsp;String\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;usage:&nbsp;&nbsp;RV.GenRandSeed(RV&apos;instance_path));\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;hash&nbsp;based&nbsp;on&nbsp;DJBX33A\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;GenRandSeed(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;LEN&nbsp;:&nbsp;integer&nbsp;:=&nbsp;S&apos;length&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;HALF_LEN&nbsp;:&nbsp;integer&nbsp;:=&nbsp;LEN/2&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;revS&nbsp;:&nbsp;string(LEN&nbsp;downto&nbsp;1)&nbsp;is&nbsp;S&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;RandomSeedType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;temp&nbsp;:&nbsp;real&nbsp;:=&nbsp;5381.0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;1&nbsp;to&nbsp;HALF_LEN&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;:=&nbsp;(temp*33.0&nbsp;+&nbsp;real(character&apos;pos(revS(i))))&nbsp;mod&nbsp;(2.0**30)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(1)&nbsp;:=&nbsp;(integer(temp)&nbsp;+&nbsp;GetRandomSalt)&nbsp;mod&nbsp;(2**30)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;HALF_LEN&nbsp;+&nbsp;1&nbsp;to&nbsp;LEN&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;:=&nbsp;(temp*33.0&nbsp;+&nbsp;real(character&apos;pos(revS(i))))&nbsp;mod&nbsp;(2.0**30)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(2)&nbsp;:=&nbsp;integer(temp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;GenRandSeed&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;OldGenRandSeed(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;RandomSeedType&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;LEN&nbsp;:&nbsp;integer&nbsp;:=&nbsp;S&apos;length&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;HALF_LEN&nbsp;:&nbsp;integer&nbsp;:=&nbsp;LEN/2&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;revS&nbsp;:&nbsp;string(LEN&nbsp;downto&nbsp;1)&nbsp;is&nbsp;S&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;integer_vector(1&nbsp;to&nbsp;2)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;temp&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;1&nbsp;to&nbsp;HALF_LEN&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;:=&nbsp;(temp&nbsp;+&nbsp;character&apos;pos(revS(i)))&nbsp;mod&nbsp;(integer&apos;right&nbsp;-&nbsp;2**8)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(1)&nbsp;:=&nbsp;(temp&nbsp;+&nbsp;GetRandomSalt)&nbsp;mod&nbsp;(integer&apos;right&nbsp;-&nbsp;2**8)&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;HALF_LEN&nbsp;+&nbsp;1&nbsp;to&nbsp;LEN&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;:=&nbsp;(temp&nbsp;+&nbsp;character&apos;pos(revS(i)))&nbsp;mod&nbsp;(integer&apos;right&nbsp;-&nbsp;2**8)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;result(2)&nbsp;:=&nbsp;temp&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;OldGenRandSeed(result)&nbsp;;&nbsp;&nbsp;--&nbsp;make&nbsp;value&nbsp;ranges&nbsp;legal\n&nbsp;&nbsp;end&nbsp;function&nbsp;OldGenRandSeed&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;type&nbsp;LocalIntegerPType&nbsp;is&nbsp;protected&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set&nbsp;(A&nbsp;:&nbsp;Integer)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;get&nbsp;return&nbsp;Integer&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;protected&nbsp;LocalIntegerPType&nbsp;;&nbsp;\n&nbsp;&nbsp;type&nbsp;LocalIntegerPType&nbsp;is&nbsp;protected&nbsp;body\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;SettingsVar&nbsp;:&nbsp;Integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set&nbsp;(A&nbsp;:&nbsp;Integer)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SettingsVar&nbsp;:=&nbsp;A&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;get&nbsp;return&nbsp;Integer&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;SettingsVar&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;get&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;protected&nbsp;body&nbsp;LocalIntegerPType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;shared&nbsp;variable&nbsp;RandomSalt&nbsp;:&nbsp;LocalIntegerPType&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;RandomSalt.Set(I)&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;SetRandomSalt(I)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;SetRandomSalt&nbsp;(I&nbsp;:&nbsp;integer)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;SetRandomSalt(I)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;I&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;temp&nbsp;:&nbsp;real&nbsp;:=&nbsp;5381.0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;S&apos;reverse_range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;:=&nbsp;(temp*33.0&nbsp;+&nbsp;real(character&apos;pos(S(i))))&nbsp;mod&nbsp;(2.0**31&nbsp;-&nbsp;2.0**8&nbsp;-&nbsp;1.0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RandomSalt.Set(integer(temp))&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;SetRandomSalt(S)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;&nbsp;SetRandomSalt&nbsp;(S&nbsp;:&nbsp;string)&nbsp;return&nbsp;string&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;SetRandomSalt(S)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;S&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;SetRandomSalt&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;impure&nbsp;function&nbsp;GetRandomSalt&nbsp;return&nbsp;integer&nbsp;is&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;RandomSalt.Get&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;function&nbsp;GetRandomSalt&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;RandomSeedType&nbsp;IO\n&nbsp;&nbsp;--&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;to_string(A&nbsp;:&nbsp;RandomSeedType;&nbsp;Separator&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&nbsp;&quot;)&nbsp;return&nbsp;string&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;to_string(A(A&apos;left))&nbsp;&amp;&nbsp;Separator&nbsp;&amp;&nbsp;to_string(A(A&apos;right))&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;to_string&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomSeedType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;write(L,&nbsp;to_string(A))&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomSeedType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;iReadValid&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A(i),&nbsp;iReadValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;not&nbsp;iReadValid&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;good&nbsp;:=&nbsp;iReadValid&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomSeedType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadValid&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A,&nbsp;ReadValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIfNot(ReadValid,&nbsp;OSVVM_ALERTLOG_ID,&nbsp;&quot;RandomBasePkg.read[line,&nbsp;RandomSeedType]&nbsp;failed&quot;,&nbsp;FAILURE)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;RandomParmType&nbsp;IO\n&nbsp;&nbsp;--&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;to_string(A&nbsp;:&nbsp;RandomDistType)&nbsp;return&nbsp;string&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;RandomDistType&apos;image(A)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;to_string&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomDistType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;write(L,&nbsp;to_string(A))&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;write&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomDistType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;strval&nbsp;:&nbsp;string(1&nbsp;to&nbsp;40)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;len&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;natural&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;procedure&nbsp;SREAD&nbsp;(L&nbsp;:&nbsp;inout&nbsp;LINE&nbsp;;&nbsp;VALUE&nbsp;:&nbsp;out&nbsp;STRING&nbsp;;&nbsp;STRLEN&nbsp;:&nbsp;out&nbsp;NATURAL)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;sread(L,&nbsp;strval,&nbsp;len)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;:=&nbsp;RandomDistType&apos;value(strval(1&nbsp;to&nbsp;len))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;good&nbsp;:=&nbsp;len&nbsp;&gt;&nbsp;0&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomDistType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadValid&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A,&nbsp;ReadValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIfNot(&nbsp;OSVVM_ALERTLOG_ID,&nbsp;ReadValid,&nbsp;&quot;RandomPkg.read[line,&nbsp;RandomDistType]&nbsp;failed&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;to_string(A&nbsp;:&nbsp;RandomParmType)&nbsp;return&nbsp;string&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;RandomDistType&apos;image(A.Distribution)&nbsp;&amp;&nbsp;&quot;&nbsp;&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to_string(A.Mean,&nbsp;2)&nbsp;&amp;&nbsp;&quot;&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(A.StdDeviation,&nbsp;2)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;to_string&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;write(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;RandomParmType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;write(L,&nbsp;to_string(A))&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;write&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomParmType&nbsp;;&nbsp;good&nbsp;:&nbsp;out&nbsp;boolean&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;strval&nbsp;:&nbsp;string(1&nbsp;to&nbsp;40)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;len&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;natural&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;igood&nbsp;&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;procedure&nbsp;SREAD&nbsp;(L&nbsp;:&nbsp;inout&nbsp;LINE&nbsp;;&nbsp;VALUE&nbsp;:&nbsp;out&nbsp;STRING&nbsp;;&nbsp;STRLEN&nbsp;:&nbsp;out&nbsp;NATURAL)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sread(L,&nbsp;strval,&nbsp;len)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.Distribution&nbsp;:=&nbsp;RandomDistType&apos;value(strval(1&nbsp;to&nbsp;len))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;igood&nbsp;:=&nbsp;len&nbsp;&gt;&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;not&nbsp;igood&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A.Mean,&nbsp;igood)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;not&nbsp;igood&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A.StdDeviation,&nbsp;igood)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;good&nbsp;:=&nbsp;igood&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;procedure&nbsp;read(variable&nbsp;L&nbsp;:&nbsp;inout&nbsp;line&nbsp;;&nbsp;A&nbsp;:&nbsp;out&nbsp;RandomParmType&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadValid&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(L,&nbsp;A,&nbsp;ReadValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIfNot(&nbsp;OSVVM_ALERTLOG_ID,&nbsp;ReadValid,&nbsp;&quot;RandomPkg.read[line,&nbsp;RandomParmType]&nbsp;failed&quot;,&nbsp;FAILURE)&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;read&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Randomization&nbsp;Support\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Scale&nbsp;a&nbsp;value&nbsp;to&nbsp;be&nbsp;within&nbsp;a&nbsp;given&nbsp;range\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;FavorSmall,&nbsp;FavorBig&nbsp;-&nbsp;Distribution&nbsp;Support\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;RemoveExclude&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Scale&nbsp;-&nbsp;Scale&nbsp;a&nbsp;value&nbsp;to&nbsp;be&nbsp;within&nbsp;a&nbsp;given&nbsp;range\n&nbsp;&nbsp;function&nbsp;Scale&nbsp;(A,&nbsp;Min,&nbsp;Max&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ValRange&nbsp;:&nbsp;Real&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;ValRange&nbsp;:=&nbsp;Max&nbsp;-&nbsp;Min&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;A&nbsp;*&nbsp;ValRange&nbsp;+&nbsp;Min&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Already&nbsp;done&nbsp;checked&nbsp;and&nbsp;failed&nbsp;if&nbsp;error.\n--!!&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;If&nbsp;continuing&nbsp;this&nbsp;calculation&nbsp;is&nbsp;no&nbsp;worse&nbsp;than&nbsp;returning&nbsp;real&apos;left\n--!!&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Max&nbsp;&gt;=&nbsp;Min&nbsp;then\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValRange&nbsp;:=&nbsp;Max&nbsp;-&nbsp;Min&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;A&nbsp;*&nbsp;ValRange&nbsp;+&nbsp;Min&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;else\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;real&apos;left&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;Scale&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;function&nbsp;Scale&nbsp;(A&nbsp;:&nbsp;real&nbsp;;&nbsp;Min,&nbsp;Max&nbsp;:&nbsp;integer)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ValRange&nbsp;:&nbsp;real&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;rMin,&nbsp;rMax&nbsp;:&nbsp;real&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;rMin&nbsp;:=&nbsp;real(Min)&nbsp;-&nbsp;0.5&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;rMax&nbsp;:=&nbsp;real(Max)&nbsp;+&nbsp;0.5&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ValRange&nbsp;:=&nbsp;rMax&nbsp;-&nbsp;rMin&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;integer(round(A&nbsp;*&nbsp;ValRange&nbsp;+&nbsp;rMin))&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Already&nbsp;done&nbsp;checked&nbsp;and&nbsp;failed&nbsp;if&nbsp;error.\n--!!&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;If&nbsp;continuing&nbsp;this&nbsp;calculation&nbsp;is&nbsp;no&nbsp;worse&nbsp;than&nbsp;returning&nbsp;real&apos;left\n--!!&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Max&nbsp;&gt;=&nbsp;Min&nbsp;then\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rMin&nbsp;:=&nbsp;real(Min)&nbsp;-&nbsp;0.5&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rMax&nbsp;:=&nbsp;real(Max)&nbsp;+&nbsp;0.5&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValRange&nbsp;:=&nbsp;rMax&nbsp;-&nbsp;rMin&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;integer(round(A&nbsp;*&nbsp;ValRange&nbsp;+&nbsp;rMin))&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;else\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;integer&apos;left&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;Scale&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;FavorSmall&nbsp;-&nbsp;create&nbsp;more&nbsp;smaller&nbsp;values\n&nbsp;&nbsp;function&nbsp;FavorSmall&nbsp;(A&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1.0&nbsp;-&nbsp;sqrt(A)&nbsp;;\n&nbsp;&nbsp;end&nbsp;FavorSmall&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;FavorBig&nbsp;-&nbsp;create&nbsp;more&nbsp;larger&nbsp;values\n&nbsp;&nbsp;--&nbsp;alias&nbsp;FavorBig&nbsp;is&nbsp;sqrt[real&nbsp;return&nbsp;real]&nbsp;;\n&nbsp;&nbsp;function&nbsp;FavorBig&nbsp;&nbsp;&nbsp;(A&nbsp;:&nbsp;real)&nbsp;return&nbsp;real&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;sqrt(A)&nbsp;;\n&nbsp;&nbsp;end&nbsp;FavorBig&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;local.\n&nbsp;&nbsp;function&nbsp;to_time_vector&nbsp;(A&nbsp;:&nbsp;integer_vector&nbsp;;&nbsp;Unit&nbsp;:&nbsp;time)&nbsp;return&nbsp;time_vector&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;time_vector(A&apos;range)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result(i)&nbsp;:=&nbsp;A(i)&nbsp;*&nbsp;Unit&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;to_time_vector&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;local\n&nbsp;&nbsp;function&nbsp;to_integer_vector&nbsp;(A&nbsp;:&nbsp;time_vector&nbsp;;&nbsp;Unit&nbsp;:&nbsp;time)&nbsp;return&nbsp;integer_vector&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;result&nbsp;:&nbsp;integer_vector(A&apos;range)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result(i)&nbsp;:=&nbsp;A(i)&nbsp;/&nbsp;Unit&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;to_integer_vector&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Remove&nbsp;the&nbsp;exclude&nbsp;list&nbsp;from&nbsp;the&nbsp;list&nbsp;-&nbsp;integer_vector\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude(A,&nbsp;Exclude&nbsp;:&nbsp;integer_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;integer_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;norm_NewA&nbsp;:&nbsp;integer_vector(1&nbsp;to&nbsp;NewA&apos;length)&nbsp;is&nbsp;NewA&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;inside(A(i),&nbsp;Exclude)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;NewALength&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm_NewA(NewALength)&nbsp;:=&nbsp;A(i)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;RemoveExclude&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Inside&nbsp;-&nbsp;real_vector\n&nbsp;&nbsp;function&nbsp;inside(A&nbsp;:&nbsp;real&nbsp;;&nbsp;Exclude&nbsp;:&nbsp;real_vector)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;Exclude&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;A&nbsp;=&nbsp;Exclude(i)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;inside&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Remove&nbsp;the&nbsp;exclude&nbsp;list&nbsp;from&nbsp;the&nbsp;list&nbsp;-&nbsp;real_vector\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude(A,&nbsp;Exclude&nbsp;:&nbsp;real_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;real_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;norm_NewA&nbsp;:&nbsp;real_vector(1&nbsp;to&nbsp;NewA&apos;length)&nbsp;is&nbsp;NewA&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;inside(A(i),&nbsp;Exclude)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;NewALength&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm_NewA(NewALength)&nbsp;:=&nbsp;A(i)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;RemoveExclude&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Inside&nbsp;-&nbsp;time_vector\n&nbsp;&nbsp;function&nbsp;inside(A&nbsp;:&nbsp;time&nbsp;;&nbsp;Exclude&nbsp;:&nbsp;time_vector)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;Exclude&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;A&nbsp;=&nbsp;Exclude(i)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;inside&nbsp;;\n&nbsp;\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Remove&nbsp;the&nbsp;exclude&nbsp;list&nbsp;from&nbsp;the&nbsp;list&nbsp;-&nbsp;time_vector\n&nbsp;&nbsp;procedure&nbsp;RemoveExclude(A,&nbsp;Exclude&nbsp;:&nbsp;time_vector&nbsp;;&nbsp;variable&nbsp;NewA&nbsp;:&nbsp;out&nbsp;time_vector&nbsp;;&nbsp;variable&nbsp;NewALength&nbsp;:&nbsp;inout&nbsp;natural&nbsp;)&nbsp;is\n&nbsp;&nbsp;-----------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;norm_NewA&nbsp;:&nbsp;time_vector(1&nbsp;to&nbsp;NewA&apos;length)&nbsp;is&nbsp;NewA&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;A&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;inside(A(i),&nbsp;Exclude)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewALength&nbsp;:=&nbsp;NewALength&nbsp;+&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm_NewA(NewALength)&nbsp;:=&nbsp;A(i)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;RemoveExclude&nbsp;;\n&nbsp;\nend&nbsp;RandomBasePkg&nbsp;;';
Report.brushes['./../../../OsvvmLibraries/osvvm/RandomBasePkg.vhd'] = 'vhdl'
