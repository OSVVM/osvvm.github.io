Report.sources['./../../../OsvvmLibraries/Common/src/ModelParametersPtPkg.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelParametersPkg.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;ModelParametersPkg\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rob&nbsp;Gaddi&nbsp;&nbsp;&lt;rgaddi@highlandtechnology.com&gt;\n--&nbsp;&nbsp;Company&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Highland&nbsp;Technology,&nbsp;Inc.\n--\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines&nbsp;ModelParametersPType\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2020&nbsp;&nbsp;&nbsp;NONE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Refactored&nbsp;from&nbsp;AbstractMmPkg.vhd\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2020&nbsp;&nbsp;&nbsp;2020.05&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;handling&nbsp;to&nbsp;also&nbsp;store&nbsp;std_logic_vector&nbsp;values\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;AlertLogID&nbsp;for&nbsp;error&nbsp;handling\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2020&nbsp;by&nbsp;Highland&nbsp;Technology\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2020&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\n&nbsp;\nlibrary&nbsp;ieee;\nuse&nbsp;ieee.std_logic_1164.all;\nuse&nbsp;ieee.numeric_std.all;\nuse&nbsp;ieee.numeric_std_unsigned.all;\n&nbsp;\nlibrary&nbsp;osvvm;\ncontext&nbsp;osvvm.OsvvmContext&nbsp;;&nbsp;\n&nbsp;\n&nbsp;\npackage&nbsp;ModelParametersPkg&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ModelParametersPType&nbsp;is&nbsp;protected\n--&nbsp;Add&nbsp;SetAlertLogID(string,&nbsp;ID),&nbsp;SetAlertLogID(ID),&nbsp;GetAlertLogID\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Init(nparams&nbsp;:&nbsp;in&nbsp;positive);\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Init(initvals&nbsp;:&nbsp;in&nbsp;integer_vector);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;integer);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Data:&nbsp;&nbsp;in&nbsp;integer_vector);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;integer;&nbsp;len:&nbsp;positive);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;boolean);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;std_logic_vector);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;integer;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;boolean;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;std_logic_vector;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural;&nbsp;len:&nbsp;positive)&nbsp;return&nbsp;std_logic_vector;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;SetAlertLogID&nbsp;(A&nbsp;:&nbsp;AlertLogIDType)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;SetAlertLogID&nbsp;(Name&nbsp;:&nbsp;string&nbsp;;&nbsp;ParentID&nbsp;:&nbsp;AlertLogIDType&nbsp;:=&nbsp;ALERTLOG_BASE_ID&nbsp;;&nbsp;CreateHierarchy&nbsp;:&nbsp;Boolean&nbsp;:=&nbsp;TRUE)&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;GetAlertLogID&nbsp;return&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;protected&nbsp;ModelParametersPType;\n&nbsp;\nend&nbsp;package&nbsp;ModelParametersPkg;\n&nbsp;\npackage&nbsp;body&nbsp;ModelParametersPkg&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ModelParametersPType&nbsp;is&nbsp;protected&nbsp;body\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;SlvPtrType&nbsp;is&nbsp;access&nbsp;std_logic_vector;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ParmTypeType&nbsp;is&nbsp;(NONE,&nbsp;eSLV,&nbsp;eINT)&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ParameterRecType&nbsp;is&nbsp;record&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmType&nbsp;:&nbsp;ParmTypeType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IParm&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SParm&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;SlvPtrType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;record&nbsp;ParameterRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ParameterRecArrayType&nbsp;is&nbsp;array&nbsp;(natural&nbsp;range&nbsp;&lt;&gt;)&nbsp;of&nbsp;ParameterRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;ParamPtrType&nbsp;is&nbsp;access&nbsp;ParameterRecArrayType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ParmPtrVar&nbsp;:&nbsp;ParamPtrType&nbsp;:=&nbsp;NULL;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;AlertLogIDVar&nbsp;:&nbsp;AlertLogIDType&nbsp;:=&nbsp;OSVVM_ALERTLOG_ID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Deallocate&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;ParmPtrVar&apos;range&nbsp;loop&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ParmPtrVar(i).SParm&nbsp;/=&nbsp;NULL&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deallocate(ParmPtrVar(i).SParm)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deallocate(ParmPtrVar);\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Deallocate&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Create&nbsp;storage&nbsp;for&nbsp;nParams&nbsp;parameters\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Init(nparams&nbsp;:&nbsp;in&nbsp;positive)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ParmPtrVar&nbsp;/=&nbsp;NULL&nbsp;then\n--&nbsp;probably&nbsp;a&nbsp;mistake&nbsp;to&nbsp;do&nbsp;this\n--&nbsp;Should&nbsp;instead&nbsp;do&nbsp;a&nbsp;resize&nbsp;of&nbsp;the&nbsp;structure&nbsp;like&nbsp;in&nbsp;ScoreboardPkg.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Deallocate;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar&nbsp;:=&nbsp;new&nbsp;ParameterRecArrayType(0&nbsp;to&nbsp;nparams-1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;ParmPtrVar&apos;range&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(i).IParm&nbsp;:=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Init;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Initialize&nbsp;the&nbsp;parameters&nbsp;array&nbsp;from&nbsp;initvals.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Init(InitVals&nbsp;:&nbsp;in&nbsp;integer_vector)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;aInitVals&nbsp;:&nbsp;integer_vector(0&nbsp;to&nbsp;InitVals&apos;length-1)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Deallocate&nbsp;;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar&nbsp;:=&nbsp;new&nbsp;ParameterRecArrayType(0&nbsp;to&nbsp;InitVals&apos;length-1);\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;aInitVals&apos;range&nbsp;loop&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(i).IsInit&nbsp;:=&nbsp;TRUE&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(i).IParm&nbsp;&nbsp;:=&nbsp;aInitVals(i)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Init;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;integer)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;|&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).IParm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;Data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;&nbsp;:=&nbsp;eINT;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm.all&nbsp;:=&nbsp;std_logic_vector(to_signed(Data,&nbsp;ParmPtrVar(Index).SParm&apos;length));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;&nbsp;:=&nbsp;eSLV;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Data:&nbsp;in&nbsp;integer_vector)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;Data&apos;range&nbsp;loop&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(i,&nbsp;Data(i))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;boolean)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;|&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).IParm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;1&nbsp;when&nbsp;Data&nbsp;else&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;&nbsp;:=&nbsp;eINT;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm.all&nbsp;:=&nbsp;(ParmPtrVar(Index).SParm&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm(0)&nbsp;:=&nbsp;&apos;1&apos;&nbsp;when&nbsp;Data&nbsp;else&nbsp;&apos;0&apos;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;&nbsp;:=&nbsp;eSLV;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;integer;&nbsp;len:&nbsp;positive)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;to_signed&nbsp;correctly&nbsp;handles&nbsp;non-negative&nbsp;integers&nbsp;up&nbsp;len&nbsp;in&nbsp;length\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;SlvVal&nbsp;:&nbsp;std_logic_vector(len-1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;std_logic_vector(to_signed(Data,&nbsp;len));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;new&nbsp;std_logic_vector&apos;(SlvVal);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;:=&nbsp;eSLV;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;&nbsp;=&gt;\n--?&nbsp;What&nbsp;if&nbsp;parameters&nbsp;do&nbsp;not&nbsp;match&nbsp;in&nbsp;size?\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm.all&nbsp;:=&nbsp;resize(SlvVal,&nbsp;ParmPtrVar(Index).SParm&apos;length);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).IParm&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;Data;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;:=&nbsp;eINT;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;Set(Index:&nbsp;in&nbsp;natural;&nbsp;Data:&nbsp;in&nbsp;std_logic_vector)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;aData&nbsp;:&nbsp;std_logic_vector(Data&apos;length-1&nbsp;downto&nbsp;0)&nbsp;is&nbsp;Data&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;new&nbsp;std_logic_vector&apos;(aData)&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;:=&nbsp;eSLV;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;&nbsp;=&gt;\n--?&nbsp;What&nbsp;if&nbsp;parameters&nbsp;do&nbsp;not&nbsp;match&nbsp;in&nbsp;size?\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).SParm.all&nbsp;:=&nbsp;resize(aData,&nbsp;ParmPtrVar(Index).SParm&apos;length);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).IParm&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;to_integer(signed(Data));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParmPtrVar(Index).ParmType&nbsp;:=&nbsp;eINT;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;Set;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;integer&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(AlertLogIDVar,&nbsp;&quot;ModelParametersPType.Get[natural,&nbsp;return&nbsp;integer]&nbsp;No&nbsp;value&nbsp;set&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;integer&apos;left;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ParmPtrVar(Index).IParm;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n--&nbsp;std_logic_vector&nbsp;values&nbsp;are&nbsp;unsigned\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;to_integer(unsigned(ParmPtrVar(Index).SParm.all));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;Get;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;boolean&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(AlertLogIDVar,&nbsp;&quot;ModelParametersPType.Get[natural,&nbsp;return&nbsp;boolean]&nbsp;No&nbsp;value&nbsp;set&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;boolean&apos;left;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(ParmPtrVar(Index).IParm&nbsp;/=&nbsp;0);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(ParmPtrVar(Index).SParm(0)&nbsp;/=&nbsp;&apos;0&apos;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;Get;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural)&nbsp;return&nbsp;std_logic_vector&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(AlertLogIDVar,&nbsp;&quot;ModelParametersPType.Get[natural,&nbsp;return&nbsp;std_logic_vector]&nbsp;No&nbsp;value&nbsp;set&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;32SB&quot;U&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;std_logic_vector(to_signed(ParmPtrVar(Index).IParm,&nbsp;32));\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ParmPtrVar(Index).SParm.all;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;Get;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;Get(Index:&nbsp;natural;&nbsp;len:&nbsp;positive)&nbsp;return&nbsp;std_logic_vector&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;AllU&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(len-1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;U&apos;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Result&nbsp;:&nbsp;signed(31&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;ParmPtrVar(Index).ParmType&nbsp;is&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;NONE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(AlertLogIDVar,&nbsp;&quot;ModelParametersPType.Get[natural,&nbsp;positive&nbsp;return&nbsp;std_logic_vector]&nbsp;No&nbsp;value&nbsp;set&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;AllU;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eINT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;:=&nbsp;to_signed(ParmPtrVar(Index).IParm,&nbsp;32)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;std_logic_vector(Result(len-1&nbsp;downto&nbsp;0));\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;eSLV&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;resize(ParmPtrVar(Index).SParm.all,&nbsp;len);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;Get;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;SetAlertLogID&nbsp;(A&nbsp;:&nbsp;AlertLogIDType)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogIDVar&nbsp;:=&nbsp;A&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;SetAlertLogID&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;procedure&nbsp;SetAlertLogID(Name&nbsp;:&nbsp;string&nbsp;;&nbsp;ParentID&nbsp;:&nbsp;AlertLogIDType&nbsp;:=&nbsp;ALERTLOG_BASE_ID&nbsp;;&nbsp;CreateHierarchy&nbsp;:&nbsp;Boolean&nbsp;:=&nbsp;TRUE)&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogIDVar&nbsp;:=&nbsp;GetAlertLogID(Name,&nbsp;ParentID,&nbsp;CreateHierarchy)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;procedure&nbsp;SetAlertLogID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;impure&nbsp;function&nbsp;GetAlertLogID&nbsp;return&nbsp;AlertLogIDType&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;AlertLogIDVar&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;function&nbsp;GetAlertLogID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;protected&nbsp;body&nbsp;ModelParametersPType;\n&nbsp;&nbsp;&nbsp;&nbsp;\nend&nbsp;package&nbsp;body&nbsp;ModelParametersPkg;\n';
Report.brushes['./../../../OsvvmLibraries/Common/src/ModelParametersPtPkg.vhd'] = 'vhdl'
