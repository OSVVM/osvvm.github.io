Report.sources['./../../../OsvvmLibraries/AXI4/Axi4/src/Axi4SubordinateVti.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4SubordinateVti_Transactor.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;Axi4SubordinateVti\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simple&nbsp;AXI&nbsp;Full&nbsp;Subordinate&nbsp;Transactor&nbsp;Model\n--\n--\n--&nbsp;&nbsp;Developed&nbsp;by:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2024&nbsp;&nbsp;&nbsp;2024.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;SafeResize&nbsp;to&nbsp;use&nbsp;ModelID\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2024&nbsp;&nbsp;&nbsp;2024.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;Params&nbsp;to&nbsp;use&nbsp;singleton&nbsp;data&nbsp;structure\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2023&nbsp;&nbsp;&nbsp;2023.09&nbsp;&nbsp;&nbsp;&nbsp;Unimplemented&nbsp;transactions&nbsp;handled&nbsp;with&nbsp;ClassifyUnimplementedOperation\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2023&nbsp;&nbsp;&nbsp;2023.05&nbsp;&nbsp;&nbsp;&nbsp;Adding&nbsp;Randomization&nbsp;of&nbsp;Valid&nbsp;and&nbsp;Ready&nbsp;timing&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2022&nbsp;&nbsp;&nbsp;2022.10&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;enum&nbsp;value&nbsp;PRIVATE&nbsp;to&nbsp;PRIVATE_NAME&nbsp;due&nbsp;to&nbsp;VHDL-2019&nbsp;keyword&nbsp;conflict.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2022&nbsp;&nbsp;&nbsp;2022.05&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;FIFOs&nbsp;so&nbsp;they&nbsp;are&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2022&nbsp;&nbsp;&nbsp;2022.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;calls&nbsp;to&nbsp;NewID&nbsp;for&nbsp;AlertLogID&nbsp;and&nbsp;FIFOs\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2022&nbsp;&nbsp;&nbsp;2022.02&nbsp;&nbsp;&nbsp;&nbsp;Replaced&nbsp;to_hstring&nbsp;with&nbsp;to_hxstring\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2022&nbsp;&nbsp;&nbsp;2022.01&nbsp;&nbsp;&nbsp;&nbsp;Moved&nbsp;MODEL_INSTANCE_NAME&nbsp;and&nbsp;MODEL_NAME&nbsp;to&nbsp;entity&nbsp;declarative&nbsp;region\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2021&nbsp;&nbsp;&nbsp;2021.09&nbsp;&nbsp;&nbsp;&nbsp;Minor&nbsp;fix&nbsp;to&nbsp;push&nbsp;WriteDataFifo&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;07/2021&nbsp;&nbsp;&nbsp;2021.07&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;FIFOs&nbsp;and&nbsp;Scoreboards&nbsp;now&nbsp;use&nbsp;the&nbsp;New&nbsp;Scoreboard/FIFO&nbsp;capability&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;06/2021&nbsp;&nbsp;&nbsp;2021.06&nbsp;&nbsp;&nbsp;&nbsp;Updates&nbsp;for&nbsp;GHDL.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2021&nbsp;&nbsp;&nbsp;2021.02&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;MultiDriver&nbsp;Detect.&nbsp;&nbsp;Updated&nbsp;Generics.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;12/2020&nbsp;&nbsp;&nbsp;2020.12&nbsp;&nbsp;&nbsp;&nbsp;Derived&nbsp;VTI.\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2017&nbsp;&nbsp;&nbsp;2017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initial&nbsp;revision\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2017&nbsp;-&nbsp;2023&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.std_logic_1164.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std_unsigned.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.math_real.all&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm&nbsp;;\n&nbsp;&nbsp;context&nbsp;osvvm.OsvvmContext&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.all&nbsp;;\n&nbsp;\nlibrary&nbsp;OSVVM_Common&nbsp;;\n&nbsp;&nbsp;context&nbsp;OSVVM_Common.OsvvmCommonContext&nbsp;;\n&nbsp;\n&nbsp;&nbsp;use&nbsp;work.Axi4OptionsPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4InterfaceCommonPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4InterfacePkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4ModelPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4CommonPkg.all&nbsp;;\n&nbsp;\nentity&nbsp;Axi4SubordinateVti&nbsp;is\ngeneric&nbsp;(\n&nbsp;&nbsp;MODEL_ID_NAME&nbsp;&nbsp;&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&quot;&nbsp;;\n&nbsp;&nbsp;tperiod_Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;10&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;DEFAULT_DELAY&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;1&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_AWReady&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_WReady&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_BValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_BResp&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_BID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_BUser&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_ARReady&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_RValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RData&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RResp&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RUser&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;\n)&nbsp;;\nport&nbsp;(\n&nbsp;&nbsp;--&nbsp;Globals\n&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;nReset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Manager&nbsp;Functional&nbsp;Interface\n&nbsp;&nbsp;AxiBus&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;Axi4RecType&nbsp;\n)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;AXI&nbsp;interface&nbsp;properties&nbsp;from&nbsp;the&nbsp;AxiBus\n&nbsp;&nbsp;constant&nbsp;AXI_ADDR_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteAddress.Addr&apos;length&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteData.Data&apos;length&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Testbench&nbsp;Transaction&nbsp;Interface\n&nbsp;&nbsp;--&nbsp;Access&nbsp;via&nbsp;external&nbsp;names\n&nbsp;&nbsp;signal&nbsp;TransRec&nbsp;:&nbsp;AddressBusRecType&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(AXI_ADDR_WIDTH-1&nbsp;downto&nbsp;0),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataToModel&nbsp;&nbsp;(AXI_DATA_WIDTH-1&nbsp;downto&nbsp;0),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataFromModel(AXI_DATA_WIDTH-1&nbsp;downto&nbsp;0)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;ModelInstance&nbsp;label&nbsp;from&nbsp;path_name\n&nbsp;&nbsp;constant&nbsp;MODEL_INSTANCE_NAME&nbsp;:&nbsp;string&nbsp;:=\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;use&nbsp;MODEL_ID_NAME&nbsp;Generic&nbsp;if&nbsp;set,&nbsp;otherwise&nbsp;use&nbsp;instance&nbsp;label&nbsp;(preferred&nbsp;if&nbsp;set&nbsp;as&nbsp;entityname_1)\n&nbsp;&nbsp;&nbsp;&nbsp;IfElse(MODEL_ID_NAME&nbsp;/=&nbsp;&quot;&quot;,&nbsp;MODEL_ID_NAME,&nbsp;PathTail(to_lower(Axi4SubordinateVti&apos;PATH_NAME)))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;MODEL_NAME&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;Axi4SubordinateVti&quot;&nbsp;;\n&nbsp;\nend&nbsp;entity&nbsp;Axi4SubordinateVti&nbsp;;\n&nbsp;\narchitecture&nbsp;Transactor&nbsp;of&nbsp;Axi4SubordinateVti&nbsp;is\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelID,&nbsp;ProtocolID,&nbsp;DataCheckID,&nbsp;BusFailedID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteAddressDelayCov,&nbsp;WriteDataDelayCov,&nbsp;WriteResponseDelayCov&nbsp;:&nbsp;DelayCoverageIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressDelayCov,&nbsp;&nbsp;ReadDataDelayCov&nbsp;:&nbsp;DelayCoverageIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;UseCoverageDelays&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AXI_DATA_WIDTH&nbsp;/&nbsp;8&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_BYTE_ADDR_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;integer(ceil(log2(real(AXI_DATA_BYTE_WIDTH))))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;Params&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;ModelParametersIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteTransactionFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteResponseFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressTransactionFifo&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Setup&nbsp;so&nbsp;that&nbsp;if&nbsp;no&nbsp;configuration&nbsp;is&nbsp;done,&nbsp;accept&nbsp;transactions\n&nbsp;&nbsp;signal&nbsp;WriteAddressExpectCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataExpectCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteAddressReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteResponseDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadAddressReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadDataRequestCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;A&nbsp;hack&nbsp;of&nbsp;a&nbsp;way&nbsp;to&nbsp;set&nbsp;the&nbsp;parameters&nbsp;for&nbsp;now.\n&nbsp;&nbsp;signal&nbsp;ModelBResp&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;:=&nbsp;to_Axi4RespType(OKAY)&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ModelRResp&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;:=&nbsp;to_Axi4RespType(OKAY)&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelBUSER&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.WriteResponse.User&apos;length&nbsp;-&nbsp;1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ModelBID&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.WriteResponse.ID&apos;length&nbsp;-&nbsp;1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelRUSER&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.ReadData.User&apos;length&nbsp;-&nbsp;1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ModelRID&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.ReadData.ID&apos;length&nbsp;-&nbsp;1&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\nbegin\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Turn&nbsp;off&nbsp;drivers&nbsp;not&nbsp;being&nbsp;driven&nbsp;by&nbsp;this&nbsp;model\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitAxi4Rec&nbsp;(AxiBusRec&nbsp;=&gt;&nbsp;AxiBus&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Initialize&nbsp;AlertLogIDs\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;Initalize&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;vParams&nbsp;:&nbsp;ModelParametersIDType&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Alerts\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(MODEL_INSTANCE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ModelID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ID&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;TransRec.AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Transaction&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ProtocolID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Protocol&nbsp;Error&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;DataCheckID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Data&nbsp;Check&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;BusFailedID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;No&nbsp;response&quot;,&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;vParams&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(&quot;Axi4Memory&nbsp;Parameters&quot;,&nbsp;to_integer(OPTIONS_MARKER),&nbsp;ID)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;InitAxiOptions(vParams)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Params&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;vParams&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;FIFOs&nbsp;get&nbsp;an&nbsp;AlertLogID&nbsp;with&nbsp;NewID,&nbsp;however,&nbsp;it&nbsp;does&nbsp;not&nbsp;print&nbsp;in&nbsp;ReportAlerts&nbsp;(due&nbsp;to&nbsp;DoNotReport)\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;FIFOS&nbsp;only&nbsp;generate&nbsp;usage&nbsp;type&nbsp;errors&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteAddressFIFO&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteTransactionFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteTransactionFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteResponseFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressTransactionFifo&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressTransactionFifo&quot;,&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;Initalize&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Transaction&nbsp;Dispatcher\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Handles&nbsp;transactions&nbsp;between&nbsp;TestCtrl&nbsp;and&nbsp;Model\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;TransactionDispatcher&nbsp;:&nbsp;process\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Formulate&nbsp;local&nbsp;copies&nbsp;of&nbsp;values&nbsp;for&nbsp;AXI&nbsp;Interface\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LocalAW&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LocalWD&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LocalWR&nbsp;:&nbsp;AxiBus.WriteResponse&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LocalAR&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LocalRD&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteAvailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteByteCount&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteByteAddr&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadByteAddr&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadAvailable&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4Option&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4OptionsType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4OptionVal&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;FilterUndrivenWriteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;UndrivenWriteDataValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;TransactionCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteAddressTransactionCount&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteDataTransactionCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteResponseTransactionCount&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ModelID&nbsp;to&nbsp;become&nbsp;valid\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteAddressDelayCov&quot;,&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteDataDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseDelayCov&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteResponseDelayCov&quot;,&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadDataDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;DispatchLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForTransaction(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rdy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Rdy,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Ack\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransactionCount&nbsp;:=&nbsp;TransactionCount&nbsp;+&nbsp;1&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Operation&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;wait&nbsp;for&nbsp;write&nbsp;or&nbsp;read&nbsp;transaction&nbsp;to&nbsp;be&nbsp;available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;not&nbsp;empty(WriteAddressFifo)&nbsp;and&nbsp;not&nbsp;empty(WriteDataFifo)&nbsp;;&nbsp;--&nbsp;Write&nbsp;Available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;not&nbsp;empty(ReadAddressFifo)&nbsp;;&nbsp;--&nbsp;Read&nbsp;Available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;on&nbsp;WriteAddressReceiveCount,&nbsp;WriteDataReceiveCount,&nbsp;ReadAddressReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_WRITE_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;wait&nbsp;for&nbsp;write&nbsp;transaction&nbsp;to&nbsp;be&nbsp;available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_READ_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;wait&nbsp;for&nbsp;read&nbsp;transaction&nbsp;to&nbsp;be&nbsp;available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(ReadAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;Alternate&nbsp;interpretation&nbsp;of&nbsp;wait&nbsp;for&nbsp;transaction\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_WRITE_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;next&nbsp;write&nbsp;to&nbsp;memory&nbsp;to&nbsp;complete\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(WriteAddressReceiveCount&nbsp;/=&nbsp;WriteReceiveCount)&nbsp;or&nbsp;(WriteReceiveCount&nbsp;/=&nbsp;WriteResponseDoneCount)&nbsp;then\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;(WriteAddressReceiveCount&nbsp;=&nbsp;WriteReceiveCount)&nbsp;and&nbsp;(WriteReceiveCount&nbsp;=&nbsp;WriteResponseDoneCount)&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;--\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_READ_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;a&nbsp;requested&nbsp;Read&nbsp;Data&nbsp;Transaction&nbsp;to&nbsp;complete\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadDataRequestCount&nbsp;/=&nbsp;ReadDataDoneCount&nbsp;then\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadDataRequestCount&nbsp;=&nbsp;ReadDataDoneCount&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;--\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_CLOCK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_ALERTLOG_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(ModelID)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_USE_RANDOM_DELAYS&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;TransRec.BoolToModel&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_USE_RANDOM_DELAYS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;UseCoverageDelays&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_DELAYCOV_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Options&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_ADDRESS_ID&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteAddressDelayCov&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_RESPONSE_ID&nbsp;=&gt;&nbsp;&nbsp;WriteResponseDelayCov&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_ADDRESS_ID&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadAddressDelayCov&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;SetDelayCoverageID,&nbsp;Invalid&nbsp;ID&nbsp;requested&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.IntToModel),&nbsp;FAILURE)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&lt;=&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_DELAYCOV_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Options&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_ADDRESS_ID&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteAddressDelayCov.ID&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteDataDelayCov.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_RESPONSE_ID&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteResponseDelayCov.ID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_ADDRESS_ID&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadAddressDelayCov.ID&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadDataDelayCov.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;GetDelayCoverageID,&nbsp;Invalid&nbsp;ID&nbsp;requested&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.IntToModel),&nbsp;FAILURE)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&lt;=&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(TransRec.Rdy)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_WRITE_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteAddressReceiveCount&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_READ_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadAddressReceiveCount&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_OP&nbsp;|&nbsp;WRITE_ADDRESS&nbsp;|&nbsp;WRITE_DATA&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ASYNC_WRITE&nbsp;|&nbsp;ASYNC_WRITE_ADDRESS&nbsp;|&nbsp;ASYNC_WRITE_DATA&nbsp;=&gt;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(IsTryWriteAddress(TransRec.Operation)&nbsp;and&nbsp;empty(WriteAddressFifo))&nbsp;or\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(IsTryWriteData(TransRec.Operation)&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;empty(WriteDataFifo))&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAvailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&lt;=&nbsp;(TransRec.DataFromModel&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAvailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;WriteAvailable&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAvailable&nbsp;and&nbsp;IsWriteAddress(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Write&nbsp;Address&nbsp;transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LocalAW.Addr,&nbsp;LocalAW.Prot)&nbsp;:=&nbsp;pop(WriteAddressFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;LocalAW.Addr,&nbsp;TransRec.Address&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressTransactionCount&nbsp;:=&nbsp;Increment(WriteAddressTransactionCount)&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;--!!&nbsp;Address&nbsp;checks&nbsp;intentionally&nbsp;removed&nbsp;-&nbsp;only&nbsp;want&nbsp;an&nbsp;error&nbsp;if&nbsp;the&nbsp;value&nbsp;changes.&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;SlaveGetWrite,&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;--!!&nbsp;Add&nbsp;checking&nbsp;for&nbsp;AWProt?\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suppress&nbsp;signaling&nbsp;of&nbsp;error&nbsp;during&nbsp;timeout?&nbsp;&nbsp;return&nbsp;&quot;----&quot;&nbsp;on&nbsp;timeout\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIfNotEqual(ModelID,&nbsp;LocalAW.Prot,&nbsp;ModelWProt,&nbsp;&quot;SlaveGetWrite,&nbsp;WProt&quot;,&nbsp;ERROR)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAvailable&nbsp;and&nbsp;IsWriteData(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Write&nbsp;Data&nbsp;transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LocalWD.Data,&nbsp;LocalWD.Strb,&nbsp;LocalWD.Last,&nbsp;LocalWD.User,&nbsp;LocalWD.ID)&nbsp;:=&nbsp;pop(WriteDataFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsWriteAddress(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteByteAddr&nbsp;:=&nbsp;CalculateByteAddress(LocalAW.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Calculate&nbsp;byte&nbsp;address&nbsp;based&nbsp;on&nbsp;strobes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteByteAddr&nbsp;:=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;LocalWD.Strb&apos;reverse_range&nbsp;loop&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit&nbsp;when&nbsp;LocalWD.Strb(i)&nbsp;=&nbsp;&apos;1&apos;&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteByteAddr&nbsp;:=&nbsp;WriteByteAddr&nbsp;+&nbsp;1&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FilterUndrivenWriteData&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_DATA_FILTER_UNDRIVEN))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UndrivenWriteDataValue&nbsp;&nbsp;:=&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_UNDRIVEN_VALUE)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_FILTER_UNDRIVEN,&nbsp;FilterUndrivenWriteData)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_UNDRIVEN_VALUE,&nbsp;&nbsp;UndrivenWriteDataValue)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;FilterUndrivenWriteData&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FilterUndrivenData(LocalWD.Data,&nbsp;LocalWD.Strb,&nbsp;UndrivenWriteDataValue)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LocalWD.Data&nbsp;:=&nbsp;AlignDataBusToBytes(LocalWD.Data,&nbsp;TransRec.DataWidth,&nbsp;WriteByteAddr)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;LocalWD.Data,&nbsp;TransRec.DataFromModel&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;LocalWD.Last&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataTransactionCount&nbsp;:=&nbsp;Increment(WriteDataTransactionCount)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Check&nbsp;Data&nbsp;Size\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataIsBytes(ModelID,&nbsp;TransRec.DataWidth,&nbsp;&quot;GetWrite&quot;,&nbsp;WriteDataTransactionCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataWidth(ModelID,&nbsp;TransRec.DataWidth,&nbsp;WriteByteAddr,&nbsp;AXI_DATA_WIDTH,&nbsp;&quot;GetWrite&quot;,&nbsp;WriteDataTransactionCount)&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;--!!&nbsp;???&nbsp;Add&nbsp;Checking&nbsp;for&nbsp;WSTRB?\n&nbsp;&nbsp;--&nbsp;Works&nbsp;for&nbsp;SlaveGetWriteData&nbsp;-&nbsp;but&nbsp;only&nbsp;if&nbsp;access&nbsp;is&nbsp;correct&nbsp;sized,&nbsp;but&nbsp;not&nbsp;SlaveGetWrite\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Check&nbsp;WStrb\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteCount&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;/&nbsp;8&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExpectedWStrb&nbsp;:=&nbsp;CalculateWriteStrobe(WriteByteAddr,&nbsp;ByteCount,&nbsp;AXI_DATA_BYTE_WIDTH)&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIfNotEqual(ModelID,&nbsp;LocalWD.Strb,&nbsp;ExpectedWStrb,&nbsp;&quot;SlaveGetWrite,&nbsp;WStrb&quot;,&nbsp;ERROR)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAddressTransactionCount&nbsp;/=&nbsp;WriteResponseTransactionCount&nbsp;and&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataTransactionCount&nbsp;/=&nbsp;WriteResponseTransactionCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteResponseFifo,&nbsp;ModelBResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseTransactionCount&nbsp;:=&nbsp;Increment(WriteResponseTransactionCount)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Log&nbsp;this&nbsp;operation\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Operation.&quot;&nbsp;&amp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWAddr:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LocalAW.Addr)&nbsp;&amp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWProt:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string(LocalAW.Prot)&nbsp;&amp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WData:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LocalWD.Data)&nbsp;&amp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WStrb:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string(LocalWD.Strb)&nbsp;&amp;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteReceiveCount),\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_OP&nbsp;|&nbsp;READ_ADDRESS&nbsp;|&nbsp;READ_DATA&nbsp;|\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ASYNC_READ&nbsp;|&nbsp;ASYNC_READ_ADDRESS&nbsp;|&nbsp;ASYNC_READ_DATA&nbsp;=&gt;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(IsTryReadAddress(TransRec.Operation)&nbsp;and&nbsp;empty(ReadAddressFifo))&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadAvailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadAvailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;ReadAvailable&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadAvailable&nbsp;and&nbsp;IsReadAddress(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Expect&nbsp;Read&nbsp;Address&nbsp;Cycle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(ReadAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LocalAR.Addr,&nbsp;LocalAR.Prot)&nbsp;&nbsp;:=&nbsp;pop(ReadAddressFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;LocalAR.Addr,&nbsp;TransRec.Address&apos;length)&nbsp;;\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;Slave&nbsp;Read,&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;--!TODO&nbsp;Add&nbsp;Check&nbsp;here&nbsp;for&nbsp;actual&nbsp;PROT&nbsp;vs&nbsp;expected&nbsp;(ModelRProt)\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.Prot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;to_integer(LocalAR.Prot)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadAvailable&nbsp;and&nbsp;IsReadData(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LocalAR.Addr&nbsp;:=&nbsp;pop(ReadAddressTransactionFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;&nbsp;:=&nbsp;&nbsp;CalculateByteAddress(LocalAR.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Data&nbsp;Sizing&nbsp;Checks\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataIsBytes(ModelID,&nbsp;TransRec.DataWidth,&nbsp;&quot;Read&nbsp;Data&quot;,&nbsp;ReadDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataWidth&nbsp;&nbsp;(ModelID,&nbsp;TransRec.DataWidth,&nbsp;ReadByteAddr,&nbsp;AXI_DATA_WIDTH,&nbsp;&quot;Read&nbsp;Data&quot;,&nbsp;ReadDataRequestCount)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Get&nbsp;Read&nbsp;Data&nbsp;Response&nbsp;Values\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LocalRD.Data&nbsp;&nbsp;:=&nbsp;AlignBytesToDataBus(SafeResize(ModelID,&nbsp;TransRec.DataToModel,&nbsp;LocalRD.Data&apos;length),&nbsp;TransRec.DataWidth,&nbsp;ReadByteAddr)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadDataFifo,&nbsp;LocalRD.Data&nbsp;&amp;&nbsp;ModelRResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadDataRequestCount)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Currently&nbsp;all&nbsp;ReadData&nbsp;Operations&nbsp;are&nbsp;Async\n&nbsp;&nbsp;--&nbsp;Add&nbsp;blocking&nbsp;until&nbsp;completion&nbsp;here\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Set&nbsp;Model&nbsp;Options\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiParameter(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(Params,&nbsp;TransRec.Options,&nbsp;TransRec.IntToModel)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetAxi4Parameter(Params,&nbsp;Axi4Option,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Axi4Option&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;RESP&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelBResp&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelBResp&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelRResp&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelRResp&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;ID&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BID&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelBID&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelBID&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RID&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelRID&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelRID&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;User&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BUSER&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelBUser&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelBUser&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RUSER&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelRUser&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelRUser&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;SetOptions,&nbsp;Unimplemented&nbsp;Option:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(Axi4OptionsType&apos;val(TransRec.Options)),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiParameter(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;Get(Params,&nbsp;TransRec.Options)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;Axi4Option,&nbsp;Axi4OptionVal)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;Axi4OptionVal&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Axi4Option&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;RESP&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelBResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelRResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;ID&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BID&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelBID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RID&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelRID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;User&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BUSER&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelBUser)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RUSER&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelRUser)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;GetOptions,&nbsp;Unimplemented&nbsp;Option:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(Axi4OptionsType&apos;val(TransRec.Options)),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;ClassifyUnimplementedOperation(TransRec.Operation,&nbsp;TransRec.Rdy),&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;1&nbsp;delta&nbsp;cycle,&nbsp;required&nbsp;if&nbsp;a&nbsp;wait&nbsp;is&nbsp;not&nbsp;in&nbsp;all&nbsp;case&nbsp;branches&nbsp;above\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;DispatchLoop&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;end&nbsp;process&nbsp;TransactionDispatcher&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AW&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;is&nbsp;AxiBus.WriteAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;intReadyBeforeValid&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteAddressDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Delays&nbsp;for&nbsp;Ready\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteAddressDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(0,1,1),&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteAddressDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;&nbsp;&nbsp;--&nbsp;No&nbsp;beat&nbsp;delay\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(intReadyBeforeValid,&nbsp;ReadyDelayCycles)&nbsp;&nbsp;:=&nbsp;GetRandDelay(WriteAddressDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;intReadyBeforeValid&nbsp;=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;static&nbsp;settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_ADDRESS_READY_BEFORE_VALID))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_ADDRESS_READY_DELAY_CYCLES))&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_ADDRESS_READY_BEFORE_VALID,&nbsp;ReadyBeforeValid)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_ADDRESS_READY_DELAY_CYCLES,&nbsp;ReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteAddress.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteAddress.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_AWReady,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;BusFailedID&nbsp;--&nbsp;,\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&quot;Write&nbsp;Address&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteAddressReceiveCount&nbsp;+&nbsp;1)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;capture&nbsp;address,&nbsp;prot\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteAddressFifo,&nbsp;AW.Addr&nbsp;&amp;&nbsp;AW.Prot)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Log&nbsp;this&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWAddr:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(AW.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWProt:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(AW.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteAddressReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteAddressOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteAddressHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WD&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;is&nbsp;AxiBus.WriteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;intReadyBeforeValid&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteDataDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Delays&nbsp;for&nbsp;Ready\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteDataDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(0,1,1),&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteDataDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;&nbsp;&nbsp;--&nbsp;No&nbsp;beat&nbsp;delay\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(intReadyBeforeValid,&nbsp;ReadyDelayCycles)&nbsp;&nbsp;:=&nbsp;GetRandDelay(WriteDataDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;intReadyBeforeValid&nbsp;=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;static&nbsp;delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_DATA_READY_BEFORE_VALID))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_DATA_READY_DELAY_CYCLES))&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_READY_BEFORE_VALID,&nbsp;ReadyBeforeValid)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_READY_DELAY_CYCLES,&nbsp;ReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteData.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteData.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_WReady,&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;BusFailedID&nbsp;&nbsp;--&nbsp;,\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&quot;Write&nbsp;Data&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteDataReceiveCount&nbsp;+&nbsp;1)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;capture&nbsp;Data,&nbsp;wstrb\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WD.Valid&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteDataFifo,&nbsp;WD.Data&nbsp;&amp;&nbsp;WD.Strb&nbsp;&amp;&nbsp;WD.Last&nbsp;&amp;&nbsp;WD.User&nbsp;&amp;&nbsp;WD.ID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;On&nbsp;failure&nbsp;to&nbsp;receive&nbsp;Valid,&nbsp;assert&nbsp;LAST\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteDataFifo,&nbsp;WD.Data&nbsp;&amp;&nbsp;WD.Strb&nbsp;&amp;&nbsp;&apos;1&apos;&nbsp;&amp;&nbsp;WD.User&nbsp;&amp;&nbsp;WD.ID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Log&nbsp;this&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Data.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WData:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(WD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WStrb:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(WD.Strb)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteDataReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteDataOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteDataHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;WriteResponseHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Receive&nbsp;and&nbsp;Check&nbsp;Write&nbsp;Responses\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteResponseHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WR&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus.WriteResponse&apos;subtype&nbsp;is&nbsp;AxiBus.WriteResponse&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.WriteResponse&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteResponseReadyTimeOut:&nbsp;integer&nbsp;:=&nbsp;25&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DelayCycles&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;WR.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;(WR.Resp&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WR.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(WR.ID&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WR.User&nbsp;&nbsp;&lt;=&nbsp;(WR.User&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteResponseFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteResponseDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteResponseDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteResponseDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Transaction\n--!&nbsp;Done&nbsp;always&nbsp;less&nbsp;than&nbsp;Receive,&nbsp;change&nbsp;to&nbsp;just&nbsp;&quot;=&quot;\n--!&nbsp;&quot;&gt;&quot;&nbsp;will&nbsp;break&nbsp;due&nbsp;to&nbsp;roll&nbsp;over&nbsp;if&nbsp;there&nbsp;are&nbsp;more&nbsp;than&nbsp;2**30&nbsp;transfers\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteResponseDoneCount&nbsp;&gt;=&nbsp;WriteReceiveCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;empty(WriteResponseFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Local.Resp&nbsp;:=&nbsp;pop(WriteResponseFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Local.Resp&nbsp;:=&nbsp;AXI4_RESP_OKAY&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelayCycles&nbsp;:=&nbsp;GetRandDelay(WriteResponseDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;DelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(WRITE_RESPONSE_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Params.Get(Axi4OptionsType&apos;POS(WRITE_RESPONSE_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_BResp&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ModelBID&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_BID&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.User&nbsp;&nbsp;&lt;=&nbsp;ModelBUser&nbsp;&nbsp;after&nbsp;tpd_Clk_BUser&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Response.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;BResp:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseReadyTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_RESPONSE_READY_TIME_OUT))&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_RESPONSE_READY_TIME_OUT,&nbsp;WriteResponseReadyTimeOut)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteResponse.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteResponse.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_BValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Write&nbsp;Response&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteResponseReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Resp&nbsp;after&nbsp;tpd_Clk_BResp&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;ModelBID&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_BID&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.User&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;ModelBUser&nbsp;&nbsp;after&nbsp;tpd_Clk_BUser&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteResponseDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteResponseLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteResponseHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Read&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AR&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;is&nbsp;AxiBus.ReadAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;intReadyBeforeValid&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadAddressDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Delays&nbsp;for&nbsp;Ready\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(ReadAddressDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(0,1,1),&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(ReadAddressDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;&nbsp;&nbsp;--&nbsp;No&nbsp;beat&nbsp;delay\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(intReadyBeforeValid,&nbsp;ReadyDelayCycles)&nbsp;&nbsp;:=&nbsp;GetRandDelay(ReadAddressDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;intReadyBeforeValid&nbsp;=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;static&nbsp;settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_ADDRESS_READY_BEFORE_VALID))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_ADDRESS_READY_DELAY_CYCLES))&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_ADDRESS_READY_BEFORE_VALID,&nbsp;ReadyBeforeValid)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_ADDRESS_READY_DELAY_CYCLES,&nbsp;ReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadAddress.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadAddress.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_ARReady,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;BusFailedID&nbsp;&nbsp;--,\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&quot;Read&nbsp;Address&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadAddressReceiveCount&nbsp;+&nbsp;1)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;capture&nbsp;address,&nbsp;prot\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadAddressFifo,&nbsp;AR.Addr&nbsp;&amp;&nbsp;AR.Prot)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadAddressTransactionFifo,&nbsp;AR.Addr)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReadAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARAddr:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(AR.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARProt:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(AR.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadAddressReceiveCount),&nbsp;--&nbsp;adjusted&nbsp;for&nbsp;delay&nbsp;of&nbsp;ReadAddressReceiveCount\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadAddressOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadAddressHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Receive&nbsp;Read&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;RD&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;is&nbsp;AxiBus.ReadData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadDataReadyTimeOut:&nbsp;integer&nbsp;:=&nbsp;25&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DelayCycles&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;(RD.Data&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;(RD.Resp&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(RD.ID&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.User&nbsp;&nbsp;&lt;=&nbsp;(RD.User&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ReadDataFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadDataDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadDataDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadDataDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Start&nbsp;a&nbsp;Read&nbsp;Data&nbsp;Response&nbsp;Transaction&nbsp;after&nbsp;receiving&nbsp;a&nbsp;read&nbsp;address\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadAddressReceiveCount&nbsp;&lt;=&nbsp;ReadDataDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelayCycles&nbsp;:=&nbsp;GetRandDelay(ReadDataDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;DelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(READ_DATA_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Params.Get(Axi4OptionsType&apos;POS(READ_DATA_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Local.Data,&nbsp;Local.Resp)&nbsp;:=&nbsp;pop(ReadDataFifo)&nbsp;;\n&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Response&nbsp;if&nbsp;available\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;empty(ReadDataFifo)&nbsp;then\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Local.Data,&nbsp;Local.Resp)&nbsp;:=&nbsp;pop(ReadDataFifo)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Local.Data&nbsp;:=&nbsp;to_slv(ReadAddressReceiveCount,&nbsp;RData&apos;length)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Local.Resp&nbsp;:=&nbsp;AXI4_RESP_OKAY&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Transaction&nbsp;Values\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;Local.Data&nbsp;&nbsp;after&nbsp;tpd_Clk_RDATA&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_RResp&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ModelRID&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_RID&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.User&nbsp;&nbsp;&lt;=&nbsp;ModelRUser&nbsp;&nbsp;after&nbsp;tpd_Clk_RUser&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Data.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;RData:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;RResp:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataReadyTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_DATA_READY_TIME_OUT))&nbsp;;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_DATA_READY_TIME_OUT,&nbsp;ReadDataReadyTimeOut)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadData.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadData.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_RValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Read&nbsp;Data&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadDataReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;after&nbsp;tpd_Clk_RValid&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Data&nbsp;after&nbsp;tpd_clk_RData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Resp&nbsp;after&nbsp;tpd_Clk_RResp&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;ModelRID&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_RID&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.User&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;ModelRUser&nbsp;&nbsp;after&nbsp;tpd_Clk_RUser&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadDataDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadDataLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadDataHandler&nbsp;;\nend&nbsp;architecture&nbsp;Transactor&nbsp;;\n';
Report.brushes['./../../../OsvvmLibraries/AXI4/Axi4/src/Axi4SubordinateVti.vhd'] = 'vhdl'
