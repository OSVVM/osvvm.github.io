Report.sources['./../../../OsvvmLibraries/AXI4/Axi4/src/Axi4Manager.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Manager.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;Axi4Manager\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AXI&nbsp;Full&nbsp;Manager&nbsp;Model\n--\n--\n--&nbsp;&nbsp;Developed&nbsp;by:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2024&nbsp;&nbsp;&nbsp;2024.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;SafeResize&nbsp;to&nbsp;use&nbsp;ModelID\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2024&nbsp;&nbsp;&nbsp;2024.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;Params&nbsp;to&nbsp;use&nbsp;singleton&nbsp;data&nbsp;structure\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2023&nbsp;&nbsp;&nbsp;2023.09&nbsp;&nbsp;&nbsp;&nbsp;Unimplemented&nbsp;transactions&nbsp;handled&nbsp;with&nbsp;ClassifyUnimplementedOperation\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2023&nbsp;&nbsp;&nbsp;2023.05&nbsp;&nbsp;&nbsp;&nbsp;Adding&nbsp;Randomization&nbsp;of&nbsp;Valid&nbsp;and&nbsp;Ready&nbsp;timing&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;12/2022&nbsp;&nbsp;&nbsp;2022.12&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;read&nbsp;check&nbsp;to&nbsp;use&nbsp;MetaMatch.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2022&nbsp;&nbsp;&nbsp;2022.10&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;enum&nbsp;value&nbsp;PRIVATE&nbsp;to&nbsp;PRIVATE_NAME&nbsp;due&nbsp;to&nbsp;VHDL-2019&nbsp;keyword&nbsp;conflict.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2022&nbsp;&nbsp;&nbsp;2022.05&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;FIFOs&nbsp;so&nbsp;they&nbsp;are&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2022&nbsp;&nbsp;&nbsp;2022.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;calls&nbsp;to&nbsp;NewID&nbsp;for&nbsp;AlertLogID&nbsp;and&nbsp;FIFOs\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2022&nbsp;&nbsp;&nbsp;2022.02&nbsp;&nbsp;&nbsp;&nbsp;Replaced&nbsp;to_hstring&nbsp;with&nbsp;to_hxstring\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2022&nbsp;&nbsp;&nbsp;2022.01&nbsp;&nbsp;&nbsp;&nbsp;Moved&nbsp;MODEL_INSTANCE_NAME&nbsp;and&nbsp;MODEL_NAME&nbsp;to&nbsp;entity&nbsp;declarative&nbsp;region\n--&nbsp;&nbsp;&nbsp;&nbsp;07/2021&nbsp;&nbsp;&nbsp;2021.07&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;FIFOs&nbsp;and&nbsp;Scoreboards&nbsp;now&nbsp;use&nbsp;the&nbsp;New&nbsp;Scoreboard/FIFO&nbsp;capability\n--&nbsp;&nbsp;&nbsp;&nbsp;06/2021&nbsp;&nbsp;&nbsp;2021.06&nbsp;&nbsp;&nbsp;&nbsp;GHDL&nbsp;support&nbsp;+&nbsp;New&nbsp;Burst&nbsp;FIFOs&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2021&nbsp;&nbsp;&nbsp;2021.02&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;MultiDriver&nbsp;Detect.&nbsp;&nbsp;Added&nbsp;Valid&nbsp;Delays.&nbsp;&nbsp;Updated&nbsp;Generics.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;12/2020&nbsp;&nbsp;&nbsp;2020.12&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;Burst&nbsp;Word&nbsp;Mode.&nbsp;&nbsp;Refactored&nbsp;code.&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;07/2020&nbsp;&nbsp;&nbsp;2020.07&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;Axi4&nbsp;FULL&nbsp;from&nbsp;Axi4Lite\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2020&nbsp;&nbsp;&nbsp;2020.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;license&nbsp;notice\n--&nbsp;&nbsp;&nbsp;&nbsp;04/2018&nbsp;&nbsp;&nbsp;2018.04&nbsp;&nbsp;&nbsp;&nbsp;First&nbsp;Release\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2017&nbsp;&nbsp;&nbsp;2017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initial&nbsp;revision\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2017&nbsp;-&nbsp;2024&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\nlibrary&nbsp;ieee&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.std_logic_1164.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std_unsigned.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.math_real.all&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm&nbsp;;\n&nbsp;&nbsp;context&nbsp;osvvm.OsvvmContext&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.all&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm_common&nbsp;;\n&nbsp;&nbsp;context&nbsp;osvvm_common.OsvvmCommonContext&nbsp;;\n&nbsp;\n&nbsp;&nbsp;use&nbsp;work.Axi4OptionsPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4ModelPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4InterfaceCommonPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4InterfacePkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4CommonPkg.all&nbsp;;\n&nbsp;\nentity&nbsp;Axi4Manager&nbsp;is\ngeneric&nbsp;(\n&nbsp;&nbsp;MODEL_ID_NAME&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&quot;&nbsp;;\n&nbsp;&nbsp;tperiod_Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;10&nbsp;ns&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;DEFAULT_DELAY&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;1&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_AWAddr&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_AWProt&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_AWValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;tpd_clk_AWLen&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWSize&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWBurst&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWLock&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWCache&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWQOS&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWRegion&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_AWUser&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_WValid&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_WData&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_WStrb&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;tpd_Clk_WLast&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_WUser&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;tpd_Clk_WID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_BReady&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_ARValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_ARProt&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_ARAddr&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;tpd_clk_ARLen&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARSize&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARBurst&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARLock&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARCache&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARQOS&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARRegion&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_clk_ARUser&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_RReady&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY\n)&nbsp;;\nport&nbsp;(\n&nbsp;&nbsp;--&nbsp;Globals\n&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;nReset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Manager&nbsp;Functional&nbsp;Interface\n&nbsp;&nbsp;AxiBus&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;Axi4RecType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Testbench&nbsp;Transaction&nbsp;Interface\n&nbsp;&nbsp;TransRec&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;AddressBusRecType&nbsp;\n)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;AXI&nbsp;interface&nbsp;properties&nbsp;from&nbsp;the&nbsp;AxiBus\n&nbsp;&nbsp;constant&nbsp;AXI_ADDR_WIDTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteAddress.Addr&apos;length&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_WIDTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteData.Data&apos;length&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;ModelInstance&nbsp;label&nbsp;from&nbsp;path_name\n&nbsp;&nbsp;constant&nbsp;MODEL_INSTANCE_NAME&nbsp;:&nbsp;string&nbsp;:=\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;use&nbsp;MODEL_ID_NAME&nbsp;Generic&nbsp;if&nbsp;set,&nbsp;otherwise&nbsp;use&nbsp;instance&nbsp;label&nbsp;(preferred&nbsp;if&nbsp;set&nbsp;as&nbsp;entityname_1)\n&nbsp;&nbsp;&nbsp;&nbsp;IfElse(MODEL_ID_NAME&nbsp;/=&nbsp;&quot;&quot;,&nbsp;MODEL_ID_NAME,&nbsp;to_lower(PathTail(Axi4Manager&apos;PATH_NAME)))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;MODEL_NAME&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;Axi4Manager&quot;&nbsp;;\n&nbsp;&nbsp;\nend&nbsp;entity&nbsp;Axi4Manager&nbsp;;\narchitecture&nbsp;AxiFull&nbsp;of&nbsp;Axi4Manager&nbsp;is\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelID,&nbsp;ProtocolID,&nbsp;DataCheckID,&nbsp;BusFailedID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteAddressDelayCov,&nbsp;WriteDataDelayCov,&nbsp;WriteResponseDelayCov&nbsp;:&nbsp;DelayCoverageIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressDelayCov,&nbsp;&nbsp;ReadDataDelayCov&nbsp;:&nbsp;DelayCoverageIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;UseCoverageDelays&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;FALSE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AXI_DATA_WIDTH&nbsp;/&nbsp;8&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_BYTE_ADDR_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;integer(ceil(log2(real(AXI_DATA_BYTE_WIDTH))))&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_STRB_WIDTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AXI_DATA_WIDTH/8&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;signal&nbsp;Params&nbsp;:&nbsp;ModelParametersIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Internal&nbsp;Resources\n&nbsp;&nbsp;signal&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressTransactionFifo&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteResponseScoreboard&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadResponseScoreboard&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteAddressRequestCount,&nbsp;WriteAddressDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataRequestCount,&nbsp;&nbsp;&nbsp;&nbsp;WriteDataDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteResponseExpectCount,&nbsp;WriteResponseReceiveCount&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadAddressRequestCount,&nbsp;&nbsp;ReadAddressDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataExpectCount,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteResponseActive,&nbsp;ReadDataActive&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;constant&nbsp;DEFAULT_BURST_MODE&nbsp;:&nbsp;AddressBusFifoBurstModeType&nbsp;:=&nbsp;ADDRESS_BUS_BURST_WORD_MODE&nbsp;;\n&nbsp;&nbsp;signal&nbsp;&nbsp;&nbsp;BurstFifoMode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AddressBusFifoBurstModeType&nbsp;:=&nbsp;DEFAULT_BURST_MODE&nbsp;;\n&nbsp;&nbsp;signal&nbsp;&nbsp;&nbsp;BurstFifoByteMode&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;(DEFAULT_BURST_MODE&nbsp;=&nbsp;ADDRESS_BUS_BURST_BYTE_MODE)&nbsp;;&nbsp;\nbegin\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Turn&nbsp;off&nbsp;drivers&nbsp;not&nbsp;being&nbsp;driven&nbsp;by&nbsp;this&nbsp;model\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitAxi4Rec&nbsp;(AxiBusRec&nbsp;=&gt;&nbsp;AxiBus)&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Initialize&nbsp;alerts\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;Initialize&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;vParams&nbsp;:&nbsp;ModelParametersIDType&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Alerts\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(MODEL_INSTANCE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ModelID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ProtocolID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Protocol&nbsp;Error&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;DataCheckID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Data&nbsp;Check&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;BusFailedID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;No&nbsp;response&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;vParams&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(&quot;Axi4&nbsp;Parameters&quot;,&nbsp;to_integer(OPTIONS_MARKER),&nbsp;ID)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;InitAxiOptions(vParams)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Params&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;vParams&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseScoreboard&nbsp;&lt;=&nbsp;NewID(&quot;WriteResponse&nbsp;Scoreboard&quot;,&nbsp;ID,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadResponseScoreboard&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadResponse&nbsp;Scoreboard&quot;,&nbsp;&nbsp;ID,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;FIFOs&nbsp;get&nbsp;an&nbsp;AlertLogID&nbsp;with&nbsp;NewID,&nbsp;however,&nbsp;it&nbsp;does&nbsp;not&nbsp;print&nbsp;in&nbsp;ReportAlerts&nbsp;(due&nbsp;to&nbsp;DoNotReport)\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;FIFOS&nbsp;only&nbsp;generate&nbsp;usage&nbsp;type&nbsp;errors&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteAddressFIFO&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressTransactionFifo&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressTransactionFifo&quot;,&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;Initialize&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Transaction&nbsp;Dispatcher\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Dispatches&nbsp;transactions&nbsp;to\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;TransactionDispatcher&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadDataTransactionCount&nbsp;:&nbsp;integer&nbsp;:=&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;TransfersInBurst&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4Option&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4OptionsType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4OptionVal&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;AxiDefaults&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus&apos;subtype&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;LAW&nbsp;:&nbsp;AxiDefaults.WriteAddress&apos;subtype&nbsp;&nbsp;is&nbsp;AxiDefaults.WriteAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;LWD&nbsp;:&nbsp;AxiDefaults.WriteData&apos;subtype&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;AxiDefaults.WriteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;LWR&nbsp;:&nbsp;AxiDefaults.WriteResponse&apos;subtype&nbsp;is&nbsp;AxiDefaults.WriteResponse&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;LAR&nbsp;:&nbsp;AxiDefaults.ReadAddress&apos;subtype&nbsp;&nbsp;&nbsp;is&nbsp;AxiDefaults.ReadAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;LRD&nbsp;:&nbsp;AxiDefaults.ReadData&apos;subtype&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;AxiDefaults.ReadData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteByteAddr&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesToSend&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesPerTransfer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;MaxBytesInFirstTransfer&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesInTransfer&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesToReceive&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DataBitOffset&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadByteAddr&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadProt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4ProtType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ExpectedData&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(LRD.Data&apos;range)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Operation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AddressBusOperationType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteDataCount&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;AxiDefaults&nbsp;:=&nbsp;InitAxi4Rec(AxiDefaults,&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;LAW.Size&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;to_slv(AXI_BYTE_ADDR_WIDTH,&nbsp;LAW.Size&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;LAW.Burst&nbsp;&nbsp;&nbsp;:=&nbsp;&quot;01&quot;&nbsp;;&nbsp;&nbsp;--&nbsp;INCR\n&nbsp;&nbsp;&nbsp;&nbsp;LWR.Resp&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;to_Axi4RespType(OKAY);\n&nbsp;&nbsp;&nbsp;&nbsp;LAR.Size&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;to_slv(AXI_BYTE_ADDR_WIDTH,&nbsp;LAR.Size&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;LAR.Burst&nbsp;&nbsp;&nbsp;:=&nbsp;&quot;01&quot;&nbsp;;&nbsp;&nbsp;--&nbsp;INCR\n&nbsp;&nbsp;&nbsp;&nbsp;LRD.Resp&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;to_Axi4RespType(OKAY)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ModelID&nbsp;to&nbsp;become&nbsp;valid\n&nbsp;&nbsp;&nbsp;&nbsp;TransRec.Params&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Params&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;TransRec.WriteBurstFifo&nbsp;&lt;=&nbsp;NewID(&quot;WriteBurstFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;TransRec.ReadBurstFifo&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadBurstFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteAddressDelayCov&quot;,&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteDataDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseDelayCov&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteResponseDelayCov&quot;,&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadDataDelayCov&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n--!!&nbsp;AWCache,&nbsp;ARCache&nbsp;Defaults\n&nbsp;&nbsp;&nbsp;&nbsp;DispatchLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForTransaction(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rdy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Rdy,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Ack\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Operation&nbsp;:=&nbsp;TransRec.Operation&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Operation&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Execute&nbsp;Standard&nbsp;Directive&nbsp;Transactions\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Waits&nbsp;for&nbsp;All&nbsp;WRITE&nbsp;and&nbsp;READ&nbsp;Transactions&nbsp;to&nbsp;complete\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteAddressRequestCount&nbsp;=&nbsp;WriteAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteDataRequestCount&nbsp;/=&nbsp;WriteDataDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteDataRequestCount&nbsp;=&nbsp;WriteDataDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteResponseExpectCount&nbsp;/=&nbsp;WriteResponseReceiveCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;response&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteResponseExpectCount&nbsp;=&nbsp;WriteResponseReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadAddressRequestCount&nbsp;/=&nbsp;ReadAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;read&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadAddressRequestCount&nbsp;=&nbsp;ReadAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadDataExpectCount&nbsp;/=&nbsp;ReadDataReceiveCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;read&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadDataExpectCount&nbsp;=&nbsp;ReadDataReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_WRITE_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteAddressRequestCount&nbsp;=&nbsp;WriteAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteDataRequestCount&nbsp;/=&nbsp;WriteDataDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteDataRequestCount&nbsp;=&nbsp;WriteDataDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteResponseExpectCount&nbsp;/=&nbsp;WriteResponseReceiveCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;response&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteResponseExpectCount&nbsp;=&nbsp;WriteResponseReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_READ_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadAddressRequestCount&nbsp;/=&nbsp;ReadAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;read&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadAddressRequestCount&nbsp;=&nbsp;ReadAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadDataExpectCount&nbsp;/=&nbsp;ReadDataReceiveCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;read&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadDataExpectCount&nbsp;=&nbsp;ReadDataReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_CLOCK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_ALERTLOG_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(ModelID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_USE_RANDOM_DELAYS&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;TransRec.BoolToModel&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_USE_RANDOM_DELAYS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;UseCoverageDelays&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_DELAYCOV_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Options&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_ADDRESS_ID&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteAddressDelayCov&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_RESPONSE_ID&nbsp;=&gt;&nbsp;&nbsp;WriteResponseDelayCov&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_ADDRESS_ID&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadAddressDelayCov&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadDataDelayCov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;GetDelayCoverage(TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;SetDelayCoverageID,&nbsp;Invalid&nbsp;ID&nbsp;requested&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.IntToModel),&nbsp;FAILURE)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&lt;=&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_DELAYCOV_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Options&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_ADDRESS_ID&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteAddressDelayCov.ID&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteDataDelayCov.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_RESPONSE_ID&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteResponseDelayCov.ID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_ADDRESS_ID&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadAddressDelayCov.ID&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_DATA_ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadDataDelayCov.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;GetDelayCoverageID,&nbsp;Invalid&nbsp;ID&nbsp;requested&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.IntToModel),&nbsp;FAILURE)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UseCoverageDelays&nbsp;&lt;=&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_BURST_MODE&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BurstFifoMode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;TransRec.IntToModel&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BurstFifoByteMode&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(TransRec.IntToModel&nbsp;=&nbsp;ADDRESS_BUS_BURST_BYTE_MODE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;not&nbsp;IsAddressBusBurstMode(BurstFifoMode),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Invalid&nbsp;Burst&nbsp;Mode&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(BurstFifoMode),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_BURST_MODE&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;BurstFifoMode&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(TransRec.Rdy)&nbsp;;&nbsp;--&nbsp;&nbsp;WriteAddressDoneCount&nbsp;+&nbsp;ReadAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_WRITE_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_READ_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Model&nbsp;Transaction&nbsp;Dispatch\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_OP&nbsp;|&nbsp;WRITE_ADDRESS&nbsp;|&nbsp;WRITE_DATA&nbsp;|&nbsp;ASYNC_WRITE&nbsp;|&nbsp;ASYNC_WRITE_ADDRESS&nbsp;|&nbsp;ASYNC_WRITE_DATA&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;For&nbsp;All&nbsp;Write&nbsp;Operations&nbsp;-&nbsp;Write&nbsp;Address&nbsp;and&nbsp;Write&nbsp;Data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAW.Addr&nbsp;&nbsp;:=&nbsp;SafeResize(ModelID,&nbsp;TransRec.Address,&nbsp;LAW.Addr&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteByteAddr&nbsp;:=&nbsp;CalculateByteAddress(LAW.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsWriteAddress(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;Write&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAW.Len&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initiate&nbsp;Write&nbsp;Address\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteAddressFifo,&nbsp;LAW.Addr&nbsp;&nbsp;&amp;&nbsp;LAW.Len&nbsp;&amp;&nbsp;LAW.Prot&nbsp;&amp;&nbsp;LAW.ID&nbsp;&amp;&nbsp;LAW.Size&nbsp;&amp;&nbsp;LAW.Burst&nbsp;&amp;&nbsp;LAW.Lock&nbsp;&amp;&nbsp;LAW.Cache&nbsp;&amp;&nbsp;LAW.QOS&nbsp;&amp;&nbsp;LAW.Region&nbsp;&amp;&nbsp;LAW.User)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteAddressRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsWriteData(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Single&nbsp;Transfer&nbsp;Write&nbsp;Data&nbsp;Handling\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataIsBytes(ModelID,&nbsp;TransRec.DataWidth,&nbsp;&quot;Manager&nbsp;Write:&nbsp;&quot;,&nbsp;WriteDataRequestCount+1)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataWidth&nbsp;&nbsp;(ModelID,&nbsp;TransRec.DataWidth,&nbsp;WriteByteAddr,&nbsp;AXI_DATA_WIDTH,&nbsp;&quot;Manager&nbsp;Write:&nbsp;&quot;,&nbsp;WriteDataRequestCount+1)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LWD.Data&nbsp;&nbsp;:=&nbsp;AlignBytesToDataBus(SafeResize(ModelID,&nbsp;TransRec.DataToModel,&nbsp;LWD.Data&apos;length),&nbsp;TransRec.DataWidth,&nbsp;WriteByteAddr)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LWD.Strb&nbsp;&nbsp;:=&nbsp;CalculateWriteStrobe(LWD.Data)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteDataFifo,&nbsp;&apos;0&apos;&nbsp;&amp;&nbsp;&apos;1&apos;&nbsp;&amp;&nbsp;LWD.Data&nbsp;&amp;&nbsp;LWD.Strb&nbsp;&amp;&nbsp;LWD.User&nbsp;&amp;&nbsp;LWD.ID)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataCount&nbsp;:=&nbsp;WriteDataCount&nbsp;+&nbsp;1&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Allow&nbsp;RequestCounts&nbsp;to&nbsp;update\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;&nbsp;\n&nbsp;\n--!!&nbsp;If&nbsp;burst&nbsp;emulation&nbsp;is&nbsp;added,&nbsp;then&nbsp;this&nbsp;will&nbsp;need&nbsp;to&nbsp;be&nbsp;a&nbsp;while&nbsp;loop&nbsp;since\n--!!&nbsp;more&nbsp;than&nbsp;one&nbsp;transaction&nbsp;will&nbsp;be&nbsp;dispatched&nbsp;at&nbsp;a&nbsp;time.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteResponseExpectCount&nbsp;and\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/=&nbsp;WriteResponseExpectCount&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Queue&nbsp;Expected&nbsp;Write&nbsp;Response\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteResponseScoreboard,&nbsp;LWR.Resp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteResponseExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsBlockOnWriteAddress(Operation)&nbsp;and\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteAddressRequestCount&nbsp;=&nbsp;WriteAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsBlockOnWriteData(Operation)&nbsp;and\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataRequestCount&nbsp;/=&nbsp;WriteDataDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;both&nbsp;write&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteDataRequestCount&nbsp;=&nbsp;WriteDataDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Model&nbsp;Transaction&nbsp;Dispatch\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_BURST&nbsp;|&nbsp;ASYNC_WRITE_BURST&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAW.Addr&nbsp;&nbsp;:=&nbsp;SafeResize(ModelID,&nbsp;TransRec.Address,&nbsp;LAW.Addr&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteByteAddr&nbsp;:=&nbsp;CalculateByteAddress(LAW.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;:=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;:=&nbsp;2**to_integer(LAW.Size);\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;BytesPerTransfer&nbsp;/=&nbsp;AXI_DATA_BYTE_WIDTH,\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Bytes&nbsp;Per&nbsp;Transfer&nbsp;(&quot;&nbsp;&amp;&nbsp;to_string(BytesPerTransfer)&nbsp;&amp;&nbsp;&quot;)&nbsp;&quot;&nbsp;&amp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;/=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;(&quot;&nbsp;&amp;&nbsp;to_string(AXI_DATA_BYTE_WIDTH)&nbsp;&amp;&nbsp;&quot;)&quot;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsWriteAddress(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Write&nbsp;Address&nbsp;Handling\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;Write&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Burst&nbsp;transfer,&nbsp;calculate&nbsp;burst&nbsp;length\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;BurstFifoByteMode&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAW.Len&nbsp;:=&nbsp;to_slv(CalculateBurstLen(TransRec.DataWidth,&nbsp;WriteByteAddr,&nbsp;BytesPerTransfer),&nbsp;LAW.Len&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAW.Len&nbsp;:=&nbsp;to_slv(TransRec.DataWidth-1,&nbsp;LAW.Len&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initiate&nbsp;Write&nbsp;Address\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteAddressFifo,&nbsp;LAW.Addr&nbsp;&nbsp;&amp;&nbsp;LAW.Len&nbsp;&amp;&nbsp;LAW.Prot&nbsp;&amp;&nbsp;LAW.ID&nbsp;&amp;&nbsp;LAW.Size&nbsp;&amp;&nbsp;LAW.Burst&nbsp;&amp;&nbsp;LAW.Lock&nbsp;&amp;&nbsp;LAW.Cache&nbsp;&amp;&nbsp;LAW.QOS&nbsp;&amp;&nbsp;LAW.Region&nbsp;&amp;&nbsp;LAW.User)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteAddressRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsWriteData(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;BurstFifoByteMode&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesToSend&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;&nbsp;:=&nbsp;1&nbsp;+&nbsp;CalculateBurstLen(BytesToSend,&nbsp;WriteByteAddr,&nbsp;BytesPerTransfer)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PopWriteBurstData(TransRec.WriteBurstFifo,&nbsp;BurstFifoMode,&nbsp;LWD.Data,&nbsp;LWD.Strb,&nbsp;BytesToSend,&nbsp;WriteByteAddr)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;BurstLoop&nbsp;in&nbsp;TransfersInBurst&nbsp;downto&nbsp;2&nbsp;loop&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteDataFifo,&nbsp;&apos;1&apos;&nbsp;&amp;&nbsp;&apos;0&apos;&nbsp;&amp;&nbsp;LWD.Data&nbsp;&amp;&nbsp;LWD.Strb&nbsp;&amp;&nbsp;LWD.User&nbsp;&amp;&nbsp;LWD.ID)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PopWriteBurstData(TransRec.WriteBurstFifo,&nbsp;BurstFifoMode,&nbsp;LWD.Data,&nbsp;LWD.Strb,&nbsp;BytesToSend,&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Special&nbsp;handle&nbsp;last&nbsp;push\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteDataFifo,&nbsp;&apos;1&apos;&nbsp;&amp;&nbsp;&apos;1&apos;&nbsp;&amp;&nbsp;LWD.Data&nbsp;&amp;&nbsp;LWD.Strb&nbsp;&amp;&nbsp;LWD.User&nbsp;&amp;&nbsp;LWD.ID)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Increment(WriteDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataRequestCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Increment(WriteDataRequestCount,&nbsp;TransfersInBurst)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataCount&nbsp;:=&nbsp;WriteDataCount&nbsp;+&nbsp;1&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Allow&nbsp;RequestCounts&nbsp;to&nbsp;update\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;&nbsp;\n&nbsp;\n--!!&nbsp;will&nbsp;need&nbsp;to&nbsp;be&nbsp;a&nbsp;while&nbsp;loop&nbsp;if&nbsp;more&nbsp;than&nbsp;one&nbsp;transaction&nbsp;can&nbsp;be&nbsp;dispatched&nbsp;at&nbsp;a&nbsp;time.\n--!!&nbsp;only&nbsp;happens&nbsp;if&nbsp;bursts&nbsp;are&nbsp;emulated&nbsp;-&nbsp;ie&nbsp;translated&nbsp;from&nbsp;a&nbsp;burst&nbsp;cycle&nbsp;to&nbsp;a&nbsp;multiple&nbsp;individual&nbsp;cycles\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteResponseExpectCount&nbsp;and&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/=&nbsp;WriteResponseExpectCount&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Queue&nbsp;Expected&nbsp;Write&nbsp;Response\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(WriteResponseScoreboard,&nbsp;LWR.Resp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteResponseExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsBlockOnWriteAddress(Operation)&nbsp;and\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressRequestCount&nbsp;/=&nbsp;WriteAddressDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;write&nbsp;address&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteAddressRequestCount&nbsp;=&nbsp;WriteAddressDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsBlockOnWriteData(Operation)&nbsp;and\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataRequestCount&nbsp;/=&nbsp;WriteDataDoneCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Block&nbsp;until&nbsp;write&nbsp;data&nbsp;done.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteDataRequestCount&nbsp;=&nbsp;WriteDataDoneCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_OP&nbsp;|&nbsp;READ_CHECK&nbsp;|&nbsp;READ_ADDRESS&nbsp;|&nbsp;READ_DATA&nbsp;|&nbsp;READ_DATA_CHECK&nbsp;|&nbsp;ASYNC_READ_ADDRESS&nbsp;|&nbsp;ASYNC_READ_DATA&nbsp;|&nbsp;ASYNC_READ_DATA_CHECK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsReadAddress(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Send&nbsp;Read&nbsp;Address&nbsp;to&nbsp;Read&nbsp;Address&nbsp;Handler&nbsp;and&nbsp;Read&nbsp;Data&nbsp;Handler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAR.Addr&nbsp;&nbsp;&nbsp;:=&nbsp;&nbsp;SafeResize(ModelID,&nbsp;TransRec.Address,&nbsp;LAR.Addr&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;&nbsp;:=&nbsp;&nbsp;CalculateByteAddress(LAR.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;Read&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;:=&nbsp;2**to_integer(LAR.Size);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAR.Len&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadAddressFifo,&nbsp;LAR.Addr&nbsp;&amp;&nbsp;LAR.Len&nbsp;&amp;&nbsp;LAR.Prot&nbsp;&amp;&nbsp;LAR.ID&nbsp;&amp;&nbsp;LAR.Size&nbsp;&amp;&nbsp;LAR.Burst&nbsp;&amp;&nbsp;LAR.Lock&nbsp;&amp;&nbsp;LAR.Cache&nbsp;&amp;&nbsp;LAR.QOS&nbsp;&amp;&nbsp;LAR.Region&nbsp;&amp;&nbsp;LAR.User)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadAddressTransactionFifo,&nbsp;LAR.Addr&nbsp;&amp;&nbsp;LAR.Prot);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadAddressRequestCount)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Expect&nbsp;a&nbsp;Read&nbsp;Data&nbsp;Cycle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadResponseScoreboard,&nbsp;LRD.Resp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReadDataExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsTryReadData(Operation)&nbsp;and&nbsp;Empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Data&nbsp;not&nbsp;available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;ReadDataReceiveCount&nbsp;&lt;&nbsp;ReadDataTransactionCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&lt;=&nbsp;(TransRec.DataFromModel&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;IsReadData(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LAR.Addr,&nbsp;ReadProt)&nbsp;:=&nbsp;Pop(ReadAddressTransactionFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;&nbsp;:=&nbsp;&nbsp;CalculateByteAddress(LAR.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;Data&nbsp;Ready\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;TRUE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Get&nbsp;Read&nbsp;Data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LRD.Data&nbsp;:=&nbsp;Pop(ReadDataFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataIsBytes(ModelID,&nbsp;TransRec.DataWidth,&nbsp;&quot;Manager&nbsp;Read:&nbsp;&quot;,&nbsp;ReadDataExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckDataWidth&nbsp;&nbsp;(ModelID,&nbsp;TransRec.DataWidth,&nbsp;ReadByteAddr,&nbsp;AXI_DATA_WIDTH,&nbsp;&quot;Manager&nbsp;Read:&nbsp;&quot;,&nbsp;ReadDataExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LRD.Data&nbsp;:=&nbsp;AlignDataBusToBytes(LRD.Data,&nbsp;TransRec.DataWidth,&nbsp;ReadByteAddr)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AxiReadDataAlignCheck&nbsp;(ModelID,&nbsp;LRD.Data,&nbsp;TransRec.DataWidth,&nbsp;LAR.Addr,&nbsp;AXI_DATA_BYTE_WIDTH,&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;LRD.Data,&nbsp;TransRec.DataFromModel&apos;length)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Check&nbsp;or&nbsp;Log&nbsp;Read&nbsp;Data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsReadCheck(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExpectedData&nbsp;:=&nbsp;SafeResize(ModelID,&nbsp;TransRec.DataToModel,&nbsp;ExpectedData&apos;length)&nbsp;;\n&nbsp;&nbsp;--!!9&nbsp;TODO:&nbsp;&nbsp;Change&nbsp;format&nbsp;to&nbsp;Transaction&nbsp;#,&nbsp;Address,&nbsp;Prot,&nbsp;Read&nbsp;Data\n&nbsp;&nbsp;--!!&nbsp;Run&nbsp;regressions&nbsp;before&nbsp;changing\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AffirmIf(&nbsp;DataCheckID,&nbsp;MetaMatch(LRD.Data,&nbsp;ExpectedData),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Data:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(LRD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Read&nbsp;Address:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(LAR.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Prot:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(ReadProt),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Expected:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(ExpectedData),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.StatusMsgOn&nbsp;or&nbsp;IsLogEnabled(ModelID,&nbsp;INFO)&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;--!!9&nbsp;TODO:&nbsp;&nbsp;Change&nbsp;format&nbsp;to&nbsp;Transaction&nbsp;#,&nbsp;Address,&nbsp;Prot,&nbsp;Read&nbsp;Data\n&nbsp;&nbsp;--!!&nbsp;Run&nbsp;regressions&nbsp;before&nbsp;changing\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(&nbsp;ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Data:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(LRD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Read&nbsp;Address:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(LAR.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Prot:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(ReadProt),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.StatusMsgOn\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Transaction&nbsp;wait&nbsp;time\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_BURST&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsReadAddress(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Send&nbsp;Read&nbsp;Address&nbsp;to&nbsp;Read&nbsp;Address&nbsp;Handler&nbsp;and&nbsp;Read&nbsp;Data&nbsp;Handler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAR.Addr&nbsp;&nbsp;&nbsp;:=&nbsp;&nbsp;SafeResize(ModelID,&nbsp;TransRec.Address,&nbsp;LAR.Addr&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;&nbsp;:=&nbsp;&nbsp;CalculateByteAddress(LAR.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;TransRec.AddrWidth&nbsp;/=&nbsp;AXI_ADDR_WIDTH,&nbsp;&quot;Read&nbsp;Address&nbsp;length&nbsp;does&nbsp;not&nbsp;match&quot;,&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;:=&nbsp;2**to_integer(LAR.Size);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Burst&nbsp;transfer,&nbsp;calculate&nbsp;burst&nbsp;length\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;BurstFifoByteMode&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;:=&nbsp;1&nbsp;+&nbsp;CalculateBurstLen(TransRec.DataWidth,&nbsp;ReadByteAddr,&nbsp;BytesPerTransfer)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAR.Len&nbsp;:=&nbsp;to_slv(TransfersInBurst&nbsp;-&nbsp;1,&nbsp;LAR.Len&apos;length)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadAddressFifo,&nbsp;LAR.Addr&nbsp;&amp;&nbsp;LAR.Len&nbsp;&amp;&nbsp;LAR.Prot&nbsp;&amp;&nbsp;LAR.ID&nbsp;&amp;&nbsp;LAR.Size&nbsp;&amp;&nbsp;LAR.Burst&nbsp;&amp;&nbsp;LAR.Lock&nbsp;&amp;&nbsp;LAR.Cache&nbsp;&amp;&nbsp;LAR.QOS&nbsp;&amp;&nbsp;LAR.Region&nbsp;&amp;&nbsp;LAR.User)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadAddressTransactionFifo,&nbsp;LAR.Addr&nbsp;&amp;&nbsp;LAR.Prot);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadAddressRequestCount)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Expect&nbsp;a&nbsp;Read&nbsp;Data&nbsp;Cycle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;1&nbsp;to&nbsp;TransfersInBurst&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push(ReadResponseScoreboard,&nbsp;LRD.Resp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;--&nbsp;Should&nbsp;this&nbsp;be&nbsp;+&nbsp;TransfersInBurst&nbsp;;&nbsp;???\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataExpectCount&nbsp;&lt;=&nbsp;Increment(ReadDataExpectCount,&nbsp;TransfersInBurst)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--!!3&nbsp;Implies&nbsp;that&nbsp;any&nbsp;separate&nbsp;ReadDataBurst&nbsp;or&nbsp;TryReadDataBurst\n&nbsp;&nbsp;--!!3&nbsp;must&nbsp;include&nbsp;the&nbsp;transfer&nbsp;length&nbsp;and&nbsp;for&nbsp;Try\n&nbsp;&nbsp;--!!3&nbsp;if&nbsp;ReadDataFifo&nbsp;has&nbsp;that&nbsp;number&nbsp;of&nbsp;transfers.\n&nbsp;&nbsp;--!!3&nbsp;First&nbsp;Check&nbsp;IsReadData,&nbsp;then&nbsp;Calculate&nbsp;#Transfers,\n&nbsp;&nbsp;--!!3&nbsp;Then&nbsp;if&nbsp;TryRead,&nbsp;and&nbsp;ReadDataFifo.FifoCount&nbsp;&lt;&nbsp;#Transfers,&nbsp;then&nbsp;FALSE\n&nbsp;&nbsp;--!!3&nbsp;Which&nbsp;reverses&nbsp;the&nbsp;order&nbsp;of&nbsp;the&nbsp;following&nbsp;IF&nbsp;statements\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsTryReadData(Operation)&nbsp;and&nbsp;Empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Data&nbsp;not&nbsp;available\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;ReadDataReceiveCount&nbsp;&lt;&nbsp;ReadDataTransactionCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;IsReadData(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LAR.Addr,&nbsp;ReadProt)&nbsp;:=&nbsp;Pop(ReadAddressTransactionFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;:=&nbsp;CalculateByteAddress(LAR.Addr,&nbsp;AXI_BYTE_ADDR_WIDTH);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;:=&nbsp;2**to_integer(LAR.Size);\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;&nbsp;:=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;;\n&nbsp;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ModelID,&nbsp;BytesPerTransfer&nbsp;/=&nbsp;AXI_DATA_BYTE_WIDTH,\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Bytes&nbsp;Per&nbsp;Transfer&nbsp;(&quot;&nbsp;&amp;&nbsp;to_string(BytesPerTransfer)&nbsp;&amp;&nbsp;&quot;)&nbsp;&quot;&nbsp;&amp;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;/=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;(&quot;&nbsp;&amp;&nbsp;to_string(AXI_DATA_BYTE_WIDTH)&nbsp;&amp;&nbsp;&quot;)&quot;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;BurstFifoByteMode&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesToReceive&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;&nbsp;:=&nbsp;1&nbsp;+&nbsp;CalculateBurstLen(BytesToReceive,&nbsp;ReadByteAddr,&nbsp;BytesPerTransfer)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransfersInBurst&nbsp;&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;BurstLoop&nbsp;in&nbsp;1&nbsp;to&nbsp;TransfersInBurst&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LRD.Data&nbsp;:=&nbsp;Pop(ReadDataFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushReadBurstData(TransRec.ReadBurstFifo,&nbsp;BurstFifoMode,&nbsp;LRD.Data,&nbsp;BytesToReceive,&nbsp;ReadByteAddr)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadByteAddr&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Model&nbsp;Configuration&nbsp;Options\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiInterface(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetAxi4InterfaceDefault(AxiDefaults,&nbsp;Axi4Option,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set(Params,&nbsp;TransRec.Options,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiInterface(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;GetAxi4InterfaceDefault(AxiDefaults,&nbsp;Axi4Option)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;Get(Params,&nbsp;TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Covers&nbsp;messages&nbsp;for&nbsp;Multiple&nbsp;drivers&nbsp;as&nbsp;well&nbsp;as&nbsp;anything&nbsp;not&nbsp;imnplemented\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;ClassifyUnimplementedOperation(TransRec.Operation,&nbsp;TransRec.Rdy),&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;DispatchLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;TransactionDispatcher&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AW&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;is&nbsp;AxiBus.WriteAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteAddressReadyTimeOut&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DelayCycles&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initialize&nbsp;Ports\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite&nbsp;Signaling\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Valid&nbsp;&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Addr&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Prot&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full&nbsp;Signaling\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Len&apos;range&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.ID&apos;range&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Size&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Burst&nbsp;&nbsp;&lt;=&nbsp;(Local.Burst&apos;range&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Cache&nbsp;&nbsp;&lt;=&nbsp;(Local.Cache&apos;range&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.QOS&apos;range&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Region&nbsp;&lt;=&nbsp;(Local.Region&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AW.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.User&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteAddressFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initialize&nbsp;DelayCoverage&nbsp;Models\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteAddressDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteAddressDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteAddressDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Transaction&nbsp;in&nbsp;FIFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(WriteAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteAddressRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Local.Addr,&nbsp;Local.Len,&nbsp;Local.Prot,&nbsp;Local.ID,&nbsp;Local.Size,&nbsp;Local.Burst,&nbsp;Local.Lock,&nbsp;Local.Cache,&nbsp;Local.QOS,&nbsp;Local.Region,&nbsp;Local.User)&nbsp;:=&nbsp;Pop(WriteAddressFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Valid&nbsp;Delay&nbsp;between&nbsp;Transfers\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delay\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelayCycles&nbsp;:=&nbsp;GetRandDelay(WriteAddressDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;DelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Constant&nbsp;Delay\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(WRITE_ADDRESS_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Addr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_AWAddr&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Prot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWProt&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Len&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWLen&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWSize&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Burst&nbsp;&nbsp;&lt;=&nbsp;Local.Burst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWBurst&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWLock&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Cache&nbsp;&nbsp;&lt;=&nbsp;Local.Cache&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWCache&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.QOS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWQOS&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Region&nbsp;&lt;=&nbsp;Local.Region&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWRegion&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWUser&nbsp;&nbsp;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWAddr:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWProt:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(Local.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteAddressDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressReadyTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_ADDRESS_READY_TIME_OUT))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteAddress.Valid,&nbsp;&nbsp;--!GHDL\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteAddress.Ready,&nbsp;&nbsp;--!GHDL\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_AWValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Write&nbsp;Address&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteAddressDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteAddressReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Transaction&nbsp;Finalization\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Addr&nbsp;&nbsp;&nbsp;+&nbsp;4&nbsp;&nbsp;after&nbsp;tpd_Clk_AWAddr&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Prot&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWProt&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Len&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWLen&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Size&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWSize&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Burst&nbsp;&nbsp;&lt;=&nbsp;Local.Burst&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWBurst&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_AWLock&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Cache&nbsp;&nbsp;&lt;=&nbsp;Local.Cache&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWCache&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.QOS&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWQOS&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.Region&nbsp;&lt;=&nbsp;Local.Region&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWRegion&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AW.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_AWUser&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteAddressDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteAddressLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteAddressHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WD&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;is&nbsp;AxiBus.WriteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteDataReadyTimeOut&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Burst&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;NewTransfer&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;1&apos;&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DelayCycles&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Data&nbsp;&nbsp;&lt;=&nbsp;(Local.Data&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Strb&nbsp;&nbsp;&lt;=&nbsp;(Local.Strb&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Last&nbsp;&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WD.User&nbsp;&nbsp;&lt;=&nbsp;(Local.User&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;&nbsp;&nbsp;WD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.ID&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteDataFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteDataDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteDataDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteDataDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(WriteDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Burst,&nbsp;Local.Last,&nbsp;Local.Data,&nbsp;Local.Strb,&nbsp;Local.User,&nbsp;Local.ID)&nbsp;:=&nbsp;Pop(WriteDataFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelayCycles&nbsp;:=&nbsp;GetRandDelay(WriteDataDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;DelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;NewTransfer&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(WRITE_DATA_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;Burst&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(WRITE_DATA_VALID_BURST_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewTransfer&nbsp;:=&nbsp;Local.Last&nbsp;;&nbsp;--&nbsp;Last&nbsp;is&nbsp;&apos;1&apos;&nbsp;for&nbsp;burst&nbsp;end&nbsp;and&nbsp;single&nbsp;word&nbsp;transfers\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Data&nbsp;&nbsp;&lt;=&nbsp;Local.Data&nbsp;after&nbsp;tpd_clk_WStrb&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Strb&nbsp;&nbsp;&lt;=&nbsp;Local.Strb&nbsp;after&nbsp;tpd_Clk_WData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Last&nbsp;&nbsp;&lt;=&nbsp;Local.Last&nbsp;after&nbsp;tpd_Clk_WLast&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.User&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;after&nbsp;tpd_Clk_WUser&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_WID&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Data.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WData:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WStrb:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(&nbsp;Local.Strb)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteDataReadyTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_DATA_READY_TIME_OUT))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteData.Valid,&nbsp;&nbsp;--!GHDL\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteData.Ready,&nbsp;&nbsp;--!GHDL\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_WValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Write&nbsp;Data&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteDataReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Data&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_WData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Strb&nbsp;&nbsp;&lt;=&nbsp;Local.Strb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_WStrb&nbsp;;&nbsp;--&nbsp;allow&nbsp;writes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.Last&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Last&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_WLast&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.User&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_WUser&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WD.ID&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_WID&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteDataDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteDataLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteDataHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;WriteResponseHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Receive&nbsp;and&nbsp;Check&nbsp;Write&nbsp;Responses\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteResponseHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;intReadyBeforeValid&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyBeforeValid&nbsp;&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyDelayCycles&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ValidTimeOut&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;AxiBus.WriteResponse.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteResponseScoreboard&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(WriteResponseDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteResponseDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(0,1,1),&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(WriteResponseDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0),&nbsp;GenBin(0))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Expected&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseActive&nbsp;&lt;=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteResponseScoreboard)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteResponseExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseActive&nbsp;&lt;=&nbsp;TRUE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,&nbsp;&quot;Waiting&nbsp;for&nbsp;Write&nbsp;Response.&quot;,&nbsp;DEBUG)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(intReadyBeforeValid,&nbsp;ReadyDelayCycles)&nbsp;&nbsp;:=&nbsp;GetRandDelay(ReadDataDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;intReadyBeforeValid&nbsp;=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;static&nbsp;settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_RESPONSE_READY_BEFORE_VALID))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_RESPONSE_READY_DELAY_CYCLES))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValidTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(WRITE_RESPONSE_VALID_TIME_OUT))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteResponse.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteResponse.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_BReady,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&quot;Write&nbsp;Response&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ValidTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Check&nbsp;Write&nbsp;Response\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check(WriteResponseScoreboard,&nbsp;AxiBus.WriteResponse.Resp)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;Completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteResponseReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteResponseOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteResponseHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteResponseProtocolChecker\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Error&nbsp;if&nbsp;Write&nbsp;Response&nbsp;BValid&nbsp;happens&nbsp;without&nbsp;a&nbsp;Write&nbsp;cycle\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteResponseProtocolChecker&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;on&nbsp;Clk&nbsp;until&nbsp;Clk&nbsp;=&nbsp;&apos;1&apos;&nbsp;and&nbsp;AxiBus.WriteResponse.Valid&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ProtocolID,&nbsp;not&nbsp;WriteResponseActive,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Unexpected&nbsp;Write&nbsp;Response&nbsp;Cycle.&nbsp;&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;BValid:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(AxiBus.WriteResponse.Valid)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;BResp:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(AxiBus.WriteResponse.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FAILURE\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteResponseProtocolChecker&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Read&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AR&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;is&nbsp;AxiBus.ReadAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadAddressReadyTimeOut&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DelayCycles&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite&nbsp;Signaling\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Valid&nbsp;&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Addr&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Prot&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full&nbsp;Signaling\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Len&apos;range&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.ID&apos;range&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.Size&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Burst&nbsp;&nbsp;&lt;=&nbsp;(Local.Burst&apos;range&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Cache&nbsp;&nbsp;&lt;=&nbsp;(Local.Cache&apos;range&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.QOS&apos;range&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Region&nbsp;&lt;=&nbsp;(Local.Region&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AR.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;(Local.User&apos;range&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ReadAddressFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadAddressDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadAddressDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadAddressDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddressReadLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReadAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadAddressRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Local.Addr,&nbsp;Local.Len,&nbsp;Local.Prot,&nbsp;Local.ID,&nbsp;Local.Size,&nbsp;Local.Burst,&nbsp;Local.Lock,&nbsp;Local.Cache,&nbsp;Local.QOS,&nbsp;Local.Region,&nbsp;Local.User)&nbsp;:=&nbsp;Pop(ReadAddressFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelayCycles&nbsp;:=&nbsp;GetRandDelay(ReadAddressDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;DelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Get(Params,&nbsp;to_integer(READ_ADDRESS_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Addr&nbsp;&nbsp;&nbsp;after&nbsp;tpd_Clk_ARAddr&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Prot&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARProt&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Len&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARLen&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Size&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARSize&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Burst&nbsp;&nbsp;&lt;=&nbsp;Local.Burst&nbsp;&nbsp;after&nbsp;tpd_clk_ARBurst&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Lock&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARLock&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Cache&nbsp;&nbsp;&lt;=&nbsp;Local.Cache&nbsp;&nbsp;after&nbsp;tpd_clk_ARCache&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.QOS&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARQOS&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Region&nbsp;&lt;=&nbsp;Local.Region&nbsp;after&nbsp;tpd_clk_ARRegion&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARUser&nbsp;&nbsp;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARAddr:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARProt:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(&nbsp;Local.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadAddressDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressReadyTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_ADDRESS_READY_TIME_OUT))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadAddress.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadAddress.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_ARValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Read&nbsp;Address&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadAddressDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadAddressReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Addr&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Addr&nbsp;&nbsp;&nbsp;+&nbsp;4&nbsp;&nbsp;after&nbsp;tpd_Clk_ARAddr&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Prot&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Prot&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARProt&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Len&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Len&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARLen&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Size&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Size&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARSize&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Burst&nbsp;&nbsp;&lt;=&nbsp;Local.Burst&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARBurst&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Lock&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.Lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after&nbsp;tpd_clk_ARLock&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Cache&nbsp;&nbsp;&lt;=&nbsp;Local.Cache&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARCache&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.QOS&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.QOS&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARQOS&nbsp;&nbsp;&nbsp;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.Region&nbsp;&lt;=&nbsp;Local.Region&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARRegion&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AR.User&nbsp;&nbsp;&nbsp;&lt;=&nbsp;Local.User&nbsp;&nbsp;&nbsp;+&nbsp;1&nbsp;&nbsp;after&nbsp;tpd_clk_ARUser&nbsp;&nbsp;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadAddressDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;AddressReadLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadAddressHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Receive&nbsp;Read&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyBeforeValid&nbsp;:&nbsp;boolean&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;intReadyBeforeValid&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadyDelayCycles&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadDataValidTimeOut&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;AxiBus.ReadData.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;Cov&nbsp;models&nbsp;to&nbsp;initialize&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;AddBins&nbsp;(ReadDataDelayCov.BurstLengthCov,&nbsp;&nbsp;GenBin(2,10,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(ReadDataDelayCov.BurstDelayCov,&nbsp;&nbsp;&nbsp;GenBin(0,1,1),&nbsp;GenBin(2,5,1))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AddCross(ReadDataDelayCov.BeatDelayCov,&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GenBin(0))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Expected&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataActive&nbsp;&lt;=&nbsp;FALSE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ReadDataReceiveCount&nbsp;&gt;=&nbsp;ReadDataExpectCount&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadDataExpectCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataActive&nbsp;&lt;=&nbsp;TRUE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Delay&nbsp;between&nbsp;consecutive&nbsp;signaling&nbsp;of&nbsp;Ready\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;UseCoverageDelays&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstCoverage&nbsp;Delays\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(intReadyBeforeValid,&nbsp;ReadyDelayCycles)&nbsp;&nbsp;:=&nbsp;GetRandDelay(ReadDataDelayCov)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;intReadyBeforeValid&nbsp;=&nbsp;0&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Deprecated&nbsp;static&nbsp;settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_DATA_READY_BEFORE_VALID))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_DATA_READY_DELAY_CYCLES))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadDataValidTimeOut&nbsp;:=&nbsp;Get(Params,&nbsp;to_integer(READ_DATA_VALID_TIME_OUT))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadData.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadData.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_RReady,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&quot;Read&nbsp;Data&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadDataValidTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;capture&nbsp;data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadDataFifo,&nbsp;AxiBus.ReadData.Data)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check(ReadResponseScoreboard,&nbsp;AxiBus.ReadData.Resp)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReadDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ReadDataReceiveCount&nbsp;to&nbsp;update\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadDataOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadDataHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadDataProtocolChecker\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Receive&nbsp;Read&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadDataProtocolChecker&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;on&nbsp;Clk&nbsp;until&nbsp;Clk&nbsp;=&nbsp;&apos;1&apos;&nbsp;and&nbsp;AxiBus.ReadData.Valid&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;AlertIf(ProtocolID,&nbsp;not&nbsp;ReadDataActive,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Unexpected&nbsp;Read&nbsp;Data&nbsp;Cycle.&nbsp;&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;RValid:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string&nbsp;(AxiBus.ReadData.Valid)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;RData:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(AxiBus.ReadData.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;RResp:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(AxiBus.ReadData.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FAILURE\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadDataProtocolChecker&nbsp;;\nend&nbsp;architecture&nbsp;AxiFull&nbsp;;\n';
Report.brushes['./../../../OsvvmLibraries/AXI4/Axi4/src/Axi4Manager.vhd'] = 'vhdl'
