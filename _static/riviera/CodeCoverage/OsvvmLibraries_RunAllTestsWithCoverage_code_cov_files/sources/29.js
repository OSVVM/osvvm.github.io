Report.sources['./../../../OsvvmLibraries/AXI4/common/src/Axi4InterfacePkg.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4InterfacePkg.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;Axi4InterfacePkg\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines&nbsp;types,&nbsp;constants,&nbsp;and&nbsp;subprograms&nbsp;to&nbsp;support&nbsp;the&nbsp;Axi4&nbsp;interface&nbsp;to&nbsp;DUT\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;currently&nbsp;only&nbsp;intended&nbsp;for&nbsp;testbench&nbsp;models.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When&nbsp;VHDL-2018&nbsp;intefaces&nbsp;gain&nbsp;popular&nbsp;support,&nbsp;these&nbsp;will&nbsp;be&nbsp;changed&nbsp;to&nbsp;support&nbsp;them.&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n--\n--&nbsp;&nbsp;Developed&nbsp;by:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2022&nbsp;&nbsp;&nbsp;2022.03&nbsp;&nbsp;&nbsp;&nbsp;Factored&nbsp;out&nbsp;of&nbsp;Axi4InterfaceCommonPkg\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2020&nbsp;&nbsp;&nbsp;2020.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;license&nbsp;notice\n--&nbsp;&nbsp;&nbsp;&nbsp;09/2017&nbsp;&nbsp;&nbsp;2017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initial&nbsp;revision\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2017&nbsp;-&nbsp;2022&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.&nbsp;&nbsp;\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--&nbsp;&nbsp;\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;&nbsp;\n&nbsp;&nbsp;use&nbsp;ieee.std_logic_1164.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std_unsigned.all&nbsp;;\n&nbsp;&nbsp;\nuse&nbsp;work.Axi4InterfaceCommonPkg.all&nbsp;;\n&nbsp;\npackage&nbsp;Axi4InterfacePkg&nbsp;is&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Write&nbsp;Address&nbsp;Channel\n&nbsp;&nbsp;type&nbsp;Axi4WriteAddressRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;Addr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Prot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4ProtType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;User&nbsp;Config&nbsp;-&nbsp;AXI&nbsp;recommended&nbsp;3:0&nbsp;for&nbsp;master,&nbsp;7:0&nbsp;at&nbsp;slave\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstLength&nbsp;=&nbsp;AxLen+1.&nbsp;&nbsp;AXI4:&nbsp;7:0,&nbsp;&nbsp;AXI3:&nbsp;3:0\n&nbsp;&nbsp;&nbsp;&nbsp;Len&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;#Bytes&nbsp;in&nbsp;transfer&nbsp;=&nbsp;2**AxSize\n&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(2&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AxBurst&nbsp;Binary&nbsp;Encoded&nbsp;(Fixed,&nbsp;Incr,&nbsp;Wrap,&nbsp;NotDefined)\n&nbsp;&nbsp;&nbsp;&nbsp;Burst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(1&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AxCache&nbsp;One-hot&nbsp;(Write-Allocate,&nbsp;Read-Allocate,&nbsp;Modifiable,&nbsp;Bufferable)\n&nbsp;&nbsp;&nbsp;&nbsp;Cache&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;QOS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Region&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;--&nbsp;User&nbsp;Config\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4WriteAddressRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteAddressRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;&nbsp;:&nbsp;in&nbsp;Axi4WriteAddressRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteAddressRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n--\n--!TODO&nbsp;Add&nbsp;VHDL-2018&nbsp;mode&nbsp;declarations&nbsp;here\n--&nbsp;Comment&nbsp;out&nbsp;for&nbsp;now,&nbsp;also&nbsp;include&nbsp;`ifdef&nbsp;for&nbsp;language&nbsp;revision\n--\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Write&nbsp;Data&nbsp;Channel\n&nbsp;&nbsp;type&nbsp;Axi4WriteDataRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Strb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;Last&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4WriteDataRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteDataRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteData&nbsp;:&nbsp;Axi4WriteDataRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteDataRecType&nbsp;;\n&nbsp;\n--&nbsp;Add&nbsp;VHDL-2018&nbsp;modes&nbsp;here\n&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Write&nbsp;Response&nbsp;Channel\n&nbsp;&nbsp;type&nbsp;Axi4WriteResponseRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Resp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4WriteResponseRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteResponseRec(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponse&nbsp;:&nbsp;Axi4WriteResponseRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteResponseRecType&nbsp;;\n&nbsp;&nbsp;\n--&nbsp;Add&nbsp;VHDL-2018&nbsp;modes&nbsp;here\n&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Read&nbsp;Address&nbsp;Channel\n&nbsp;&nbsp;type&nbsp;Axi4ReadAddressRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;Addr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Prot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4ProtType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;User&nbsp;Config&nbsp;-&nbsp;AXI&nbsp;recommended&nbsp;3:0&nbsp;for&nbsp;master,&nbsp;7:0&nbsp;at&nbsp;slave\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;BurstLength&nbsp;=&nbsp;AxLen+1.&nbsp;&nbsp;AXI4:&nbsp;7:0,&nbsp;&nbsp;AXI3:&nbsp;3:0\n&nbsp;&nbsp;&nbsp;&nbsp;Len&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;#Bytes&nbsp;in&nbsp;transfer&nbsp;=&nbsp;2**AxSize\n&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(2&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AxBurst&nbsp;Binary&nbsp;Encoded&nbsp;(Fixed,&nbsp;Incr,&nbsp;Wrap,&nbsp;NotDefined)\n&nbsp;&nbsp;&nbsp;&nbsp;Burst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(1&nbsp;downto&nbsp;0)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AxCache&nbsp;One-hot&nbsp;(Write-Allocate,&nbsp;Read-Allocate,&nbsp;Modifiable,&nbsp;Bufferable)\n&nbsp;&nbsp;&nbsp;&nbsp;Cache&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;QOS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Region&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(3&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;--&nbsp;User&nbsp;Config\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4ReadAddressRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4ReadAddressRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;:&nbsp;Axi4ReadAddressRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4ReadAddressRecType&nbsp;;\n&nbsp;\n--&nbsp;Add&nbsp;VHDL-2018&nbsp;modes&nbsp;here\n&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Read&nbsp;Data&nbsp;Channel\n&nbsp;&nbsp;type&nbsp;Axi4ReadDataRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Resp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;Last&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector&nbsp;;\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4ReadDataRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4ReadDataRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;ReadData&nbsp;:&nbsp;Axi4ReadDataRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4ReadDataRecType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;\n--&nbsp;Add&nbsp;VHDL-2018&nbsp;modes&nbsp;here\n&nbsp;&nbsp;\n&nbsp;&nbsp;type&nbsp;Axi4BaseRecType&nbsp;is&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;&nbsp;&nbsp;:&nbsp;Axi4WriteAddressRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4WriteDataRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponse&nbsp;&nbsp;:&nbsp;Axi4WriteResponseRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4ReadAddressRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4ReadDataRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;record&nbsp;Axi4BaseRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;Axi4RecType&nbsp;with&nbsp;sized&nbsp;elements\n&nbsp;&nbsp;--&nbsp;Get&nbsp;From&nbsp;Above\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Axi4&nbsp;Record,&nbsp;Axi4&nbsp;full&nbsp;elements&nbsp;are&nbsp;null&nbsp;arrays&nbsp;&nbsp;\n--&nbsp;&nbsp;subtype&nbsp;Axi4LiteRecType&nbsp;is&nbsp;Axi4BaseRecType(&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;(&nbsp;Addr(open),&nbsp;ID(0&nbsp;downto&nbsp;1),&nbsp;User(0&nbsp;downto&nbsp;1)&nbsp;),\n--&nbsp;&nbsp;&nbsp;&nbsp;WriteData&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;Data(open),&nbsp;Strb(open),&nbsp;User(0&nbsp;downto&nbsp;1),&nbsp;ID(0&nbsp;downto&nbsp;1)&nbsp;),&nbsp;&nbsp;--&nbsp;ID&nbsp;only&nbsp;AXI3\n--&nbsp;&nbsp;&nbsp;&nbsp;WriteResponse(&nbsp;ID(0&nbsp;downto&nbsp;1),&nbsp;User(0&nbsp;downto&nbsp;1)&nbsp;),\n--&nbsp;&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;&nbsp;(&nbsp;Addr(open),&nbsp;ID(0&nbsp;downto&nbsp;1),&nbsp;User(0&nbsp;downto&nbsp;1)&nbsp;),\n--&nbsp;&nbsp;&nbsp;&nbsp;ReadData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;Data(open),&nbsp;ID(0&nbsp;downto&nbsp;1),&nbsp;User(0&nbsp;downto&nbsp;1)&nbsp;)\n--&nbsp;&nbsp;)&nbsp;;\n--&nbsp;&nbsp;&nbsp;alias&nbsp;Axi4LiteRecType&nbsp;is&nbsp;Axi4BaseRecType&nbsp;;&nbsp;\n&nbsp;\n--&nbsp;--&nbsp;Axi4&nbsp;Record,&nbsp;Axi4&nbsp;full&nbsp;elements&nbsp;are&nbsp;null&nbsp;arrays&nbsp;&nbsp;\n--&nbsp;subtype&nbsp;Axi4RecType&nbsp;is&nbsp;Axi4BaseRecType(&nbsp;\n--&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;(&nbsp;Addr(open),&nbsp;ID(7&nbsp;downto&nbsp;0),&nbsp;User(7&nbsp;downto&nbsp;0)&nbsp;),\n--&nbsp;&nbsp;&nbsp;WriteData&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;Data(open),&nbsp;Strb(open),&nbsp;User(7&nbsp;downto&nbsp;0),&nbsp;ID(7&nbsp;downto&nbsp;0)&nbsp;),&nbsp;&nbsp;--&nbsp;ID&nbsp;only&nbsp;AXI3\n--&nbsp;&nbsp;&nbsp;WriteResponse(&nbsp;ID(7&nbsp;downto&nbsp;0),&nbsp;User(7&nbsp;downto&nbsp;0)&nbsp;),\n--&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;&nbsp;(&nbsp;Addr(open),&nbsp;ID(7&nbsp;downto&nbsp;0),&nbsp;User(7&nbsp;downto&nbsp;0)&nbsp;),\n--&nbsp;&nbsp;&nbsp;ReadData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;Data(open),&nbsp;ID(7&nbsp;downto&nbsp;0),&nbsp;User(7&nbsp;downto&nbsp;0)&nbsp;)\n--&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;alias&nbsp;Axi4RecType&nbsp;is&nbsp;Axi4BaseRecType&nbsp;;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4Rec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;AxiBusRec&nbsp;:&nbsp;in&nbsp;Axi4RecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4RecType&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;procedure&nbsp;InitAxi4Rec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;signal&nbsp;AxiBusRec&nbsp;:&nbsp;inout&nbsp;Axi4RecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;\nend&nbsp;package&nbsp;Axi4InterfacePkg&nbsp;;\npackage&nbsp;body&nbsp;Axi4InterfacePkg&nbsp;is&nbsp;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteAddressRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;&nbsp;:&nbsp;in&nbsp;Axi4WriteAddressRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteAddressRecType&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Addr&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Addr&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prot&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Prot&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;=&gt;&nbsp;InitVal,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;=&gt;&nbsp;InitVal,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.ID&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Len&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Len&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Size&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Burst&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Burst&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Lock&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cache&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.Cache&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QOS&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.QOS&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region&nbsp;=&gt;&nbsp;(WriteAddress.Region&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteAddress.User&apos;range&nbsp;=&gt;&nbsp;InitVal)\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4WriteAddressRec&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteDataRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteData&nbsp;:&nbsp;Axi4WriteDataRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteDataRecType&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;constant&nbsp;DataWidth&nbsp;:&nbsp;integer&nbsp;:=&nbsp;WriteData.Data&apos;length&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(DataWidth-1&nbsp;downto&nbsp;0&nbsp;=&gt;&nbsp;InitVal),&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Strb&nbsp;&nbsp;&nbsp;=&gt;&nbsp;((DataWidth/8)-1&nbsp;downto&nbsp;0&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteData.User&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteData.ID&apos;range&nbsp;=&gt;&nbsp;InitVal)\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4WriteDataRec&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4WriteResponseRec(\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponse&nbsp;:&nbsp;Axi4WriteResponseRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4WriteResponseRecType&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resp&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteResponse.Resp&apos;range&nbsp;=&gt;InitVal),&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteResponse.ID&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(WriteResponse.User&apos;range&nbsp;=&gt;&nbsp;InitVal)\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4WriteResponseRec&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4ReadAddressRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;:&nbsp;Axi4ReadAddressRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4ReadAddressRecType&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Addr&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Addr&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prot&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Prot&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;=&gt;&nbsp;InitVal,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;=&gt;&nbsp;InitVal,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.ID&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Len&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Len&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Size&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Burst&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Burst&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Lock&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cache&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.Cache&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QOS&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.QOS&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region&nbsp;=&gt;&nbsp;(ReadAddress.Region&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadAddress.User&apos;range&nbsp;=&gt;&nbsp;InitVal)\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4ReadAddressRec&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4ReadDataRec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;ReadData&nbsp;:&nbsp;Axi4ReadDataRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4ReadDataRecType&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI4&nbsp;Lite\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadData.Data&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resp&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadData.Resp&apos;range&nbsp;=&gt;&nbsp;InitVal),&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;AXI&nbsp;4&nbsp;Full\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadData.ID&apos;range&nbsp;=&gt;&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitVal,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;&nbsp;&nbsp;=&gt;&nbsp;(ReadData.User&apos;range&nbsp;=&gt;&nbsp;InitVal)\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4ReadDataRec&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;function&nbsp;InitAxi4Rec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;AxiBusRec&nbsp;:&nbsp;in&nbsp;Axi4RecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;return&nbsp;Axi4RecType&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteAddress&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitAxi4WriteAddressRec(AxiBusRec.WriteAddress,&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitAxi4WriteDataRec(AxiBusRec.WriteData,&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteResponse&nbsp;&nbsp;=&gt;&nbsp;InitAxi4WriteResponseRec(AxiBusRec.WriteResponse,&nbsp;InitVal),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadAddress&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitAxi4ReadAddressRec(AxiBusRec.ReadAddress,&nbsp;InitVal),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;InitAxi4ReadDataRec(AxiBusRec.ReadData,&nbsp;InitVal)\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;end&nbsp;function&nbsp;InitAxi4Rec&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;procedure&nbsp;InitAxi4Rec&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;signal&nbsp;AxiBusRec&nbsp;:&nbsp;inout&nbsp;Axi4RecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;InitVal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;Z&apos;\n&nbsp;&nbsp;)&nbsp;is\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;AxiBusRec&nbsp;&lt;=&nbsp;InitAxi4Rec(AxiBusRec,&nbsp;InitVal)&nbsp;;\n&nbsp;&nbsp;end&nbsp;procedure&nbsp;InitAxi4Rec&nbsp;;\n&nbsp;\nend&nbsp;package&nbsp;body&nbsp;Axi4InterfacePkg&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;\n&nbsp;\n';
Report.brushes['./../../../OsvvmLibraries/AXI4/common/src/Axi4InterfacePkg.vhd'] = 'vhdl'
