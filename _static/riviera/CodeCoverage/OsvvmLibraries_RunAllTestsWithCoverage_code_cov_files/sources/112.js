Report.sources['./../../../OsvvmLibraries/UART/src/UartRx.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UartRx.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;UartRx\n--&nbsp;&nbsp;OSVVM&nbsp;Release:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UART&nbsp;Receiver&nbsp;Model&nbsp;-&nbsp;16X&nbsp;Clock&nbsp;based&nbsp;sampling\n--\n--\n--&nbsp;&nbsp;Developed&nbsp;by:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2024&nbsp;&nbsp;&nbsp;2024.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;SafeResize&nbsp;to&nbsp;use&nbsp;ModelID\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2022&nbsp;&nbsp;&nbsp;2022.10&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;enum&nbsp;value&nbsp;PRIVATE&nbsp;to&nbsp;PRIVATE_NAME&nbsp;due&nbsp;to&nbsp;VHDL-2019&nbsp;keyword&nbsp;conflict.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2022&nbsp;&nbsp;&nbsp;2022.05&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;FIFOs&nbsp;so&nbsp;they&nbsp;are&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Added&nbsp;MODEL_ID_NAME&nbsp;generic\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2022&nbsp;&nbsp;&nbsp;2022.03&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;to&nbsp;use&nbsp;singleton&nbsp;based&nbsp;FIFOs.&nbsp;&nbsp;Updated&nbsp;calls&nbsp;for&nbsp;AlertLogIDs\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2022&nbsp;&nbsp;&nbsp;2022.02&nbsp;&nbsp;&nbsp;&nbsp;Replaced&nbsp;to_hstring&nbsp;with&nbsp;to_hxstring\n--&nbsp;&nbsp;&nbsp;&nbsp;08/2021&nbsp;&nbsp;&nbsp;2021.08&nbsp;&nbsp;&nbsp;&nbsp;Initialized&nbsp;NumDataBits,&nbsp;ParityMode,&nbsp;and&nbsp;NumStopBits\n--&nbsp;&nbsp;&nbsp;&nbsp;02/2021&nbsp;&nbsp;&nbsp;2021.02&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;for&nbsp;resizing&nbsp;Data&nbsp;and&nbsp;Param&nbsp;to/from&nbsp;TransRec\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2020&nbsp;&nbsp;&nbsp;2020.10&nbsp;&nbsp;&nbsp;&nbsp;Update&nbsp;for&nbsp;updates&nbsp;to&nbsp;stream&nbsp;MIT\n--&nbsp;&nbsp;&nbsp;&nbsp;07/2020&nbsp;&nbsp;&nbsp;2020.07&nbsp;&nbsp;&nbsp;&nbsp;Converted&nbsp;transactions&nbsp;to&nbsp;stream&nbsp;MIT&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;01/2020&nbsp;&nbsp;&nbsp;2020.01&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;license&nbsp;notice\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2019&nbsp;&nbsp;&nbsp;2019.05&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;for&nbsp;OSVVM&nbsp;public&nbsp;release\n--&nbsp;&nbsp;&nbsp;&nbsp;1999&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1999.00&nbsp;&nbsp;&nbsp;&nbsp;Developed&nbsp;for&nbsp;SynthWorks&apos;&nbsp;Advanced&nbsp;VHDL&nbsp;Testbenches&nbsp;and&nbsp;Verification&nbsp;Class\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;1999&nbsp;-&nbsp;2021&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.std_logic_1164.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std_unsigned.all&nbsp;;\n&nbsp;\n&nbsp;&nbsp;use&nbsp;std.textio.all&nbsp;;\n&nbsp;\nlibrary&nbsp;OSVVM&nbsp;;\n&nbsp;&nbsp;context&nbsp;OSVVM.OsvvmContext&nbsp;;&nbsp;\n--&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.all&nbsp;;\n--!!&nbsp;GHDL\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.NewID&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.Empty&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.Push&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.Pop&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm_common&nbsp;;&nbsp;\n&nbsp;&nbsp;context&nbsp;osvvm_common.OsvvmCommonContext&nbsp;;&nbsp;&nbsp;\n&nbsp;\n&nbsp;&nbsp;use&nbsp;work.UartTbPkg.all&nbsp;;\n&nbsp;\nentity&nbsp;UartRx&nbsp;is\n&nbsp;&nbsp;generic&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;MODEL_ID_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&quot;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_BAUD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;UART_BAUD_PERIOD_125K&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_NUM_DATA_BITS&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_DATA_BITS_8&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_PARITY_MODE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_PARITY_EVEN&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_NUM_STOP_BITS&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_STOP_BITS_1&nbsp;&nbsp;\n&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;port&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;TransRec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;InOut&nbsp;UartRecType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;SerialDataIn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;In&nbsp;&nbsp;&nbsp;&nbsp;std_logic\n&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;--&nbsp;Use&nbsp;MODEL_ID_NAME&nbsp;Generic&nbsp;if&nbsp;set,&nbsp;otherwise,\n&nbsp;&nbsp;--&nbsp;use&nbsp;model&nbsp;instance&nbsp;label&nbsp;(preferred&nbsp;if&nbsp;set&nbsp;as&nbsp;entityname_1)\n&nbsp;&nbsp;constant&nbsp;MODEL_INSTANCE_NAME&nbsp;:&nbsp;string&nbsp;:=\n&nbsp;&nbsp;&nbsp;&nbsp;IfElse(MODEL_ID_NAME&apos;length&nbsp;&gt;&nbsp;0,&nbsp;MODEL_ID_NAME,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to_lower(PathTail(UartRx&apos;PATH_NAME)))&nbsp;;\n&nbsp;\nend&nbsp;UartRx&nbsp;;\narchitecture&nbsp;model&nbsp;of&nbsp;UartRx&nbsp;is\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Clock&nbsp;Generation\n&nbsp;&nbsp;signal&nbsp;Uart16XClk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;SerialDataIn&nbsp;preprocessing\n&nbsp;&nbsp;signal&nbsp;iSerialDataIn&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Sample&nbsp;Bit&nbsp;Signaling\n&nbsp;&nbsp;signal&nbsp;SampleBitCount&nbsp;&nbsp;:&nbsp;unsigned(3&nbsp;downto&nbsp;0)&nbsp;:=&nbsp;&quot;0110&quot;&nbsp;;\n&nbsp;&nbsp;signal&nbsp;SampleBit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Statemachine&nbsp;Type&nbsp;and&nbsp;State&nbsp;Signal&nbsp;declarations\n&nbsp;&nbsp;type&nbsp;RxStateType&nbsp;is&nbsp;(RX_IDLE,&nbsp;RX_HUNT,&nbsp;RX_DATA,&nbsp;RX_PARITY,&nbsp;RX_STOP,&nbsp;RX_BREAK)&nbsp;;\n&nbsp;&nbsp;signal&nbsp;RxState&nbsp;:&nbsp;RxStateType&nbsp;:=&nbsp;RX_IDLE&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;DataBitCount&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0;\n&nbsp;&nbsp;signal&nbsp;LastDataBit&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelID&nbsp;&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReceiveFifo&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReceiveCount&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;Set&nbsp;initial&nbsp;values&nbsp;for&nbsp;configurable&nbsp;modes\n&nbsp;&nbsp;signal&nbsp;ParityMode&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_PARITY_EVEN;\n&nbsp;&nbsp;signal&nbsp;NumStopBits&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_STOP_BITS_1&nbsp;;\n&nbsp;&nbsp;signal&nbsp;NumDataBits&nbsp;:&nbsp;integer&nbsp;:=&nbsp;UARTTB_DATA_BITS_8&nbsp;;\n&nbsp;&nbsp;signal&nbsp;Baud&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;UART_BAUD_PERIOD_125K&nbsp;;&nbsp;--&nbsp;init&nbsp;for&nbsp;clock&nbsp;start\n&nbsp;\nbegin\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Initialize&nbsp;alerts\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitializeAlerts&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(MODEL_INSTANCE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ModelID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ID&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReceiveFifo&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReceiveFifo&quot;,&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;InitializeAlerts&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Transaction&nbsp;Dispatcher\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Dispatches&nbsp;transactions&nbsp;to\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;TransactionDispatcher&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;Operation&nbsp;:&nbsp;StreamOperationType&nbsp;is&nbsp;TransRec.Operation&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WaitCycles&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;RxStim,&nbsp;ExpectedStim&nbsp;:&nbsp;UartStimType&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Let&nbsp;ModelID&nbsp;get&nbsp;set\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initialize&nbsp;defaults\n&nbsp;&nbsp;&nbsp;&nbsp;ParityMode&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckParityMode&nbsp;(ModelID,&nbsp;DEFAULT_PARITY_MODE,&nbsp;&nbsp;&nbsp;FALSE)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;NumStopBits&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckNumStopBits(ModelID,&nbsp;DEFAULT_NUM_STOP_BITS,&nbsp;FALSE)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;NumDataBits&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckNumDataBits(ModelID,&nbsp;DEFAULT_NUM_DATA_BITS,&nbsp;FALSE)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;Baud&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckBaud(ModelID,&nbsp;DEFAULT_BAUD,&nbsp;FALSE)&nbsp;;&nbsp;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;TransactionDispatcherLoop&nbsp;:&nbsp;loop&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForTransaction(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Uart16XClk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rdy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Rdy,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Ack\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n--**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Operation&nbsp;:=&nbsp;TransRec.Operation&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Operation&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET&nbsp;|&nbsp;TRY_GET&nbsp;|&nbsp;CHECK&nbsp;|&nbsp;TRY_CHECK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReceiveFifo)&nbsp;and&nbsp;IsTry(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Return&nbsp;if&nbsp;no&nbsp;data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;FALSE&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Get&nbsp;data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolFromModel&nbsp;&lt;=&nbsp;TRUE&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReceiveFifo)&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Settling&nbsp;for&nbsp;when&nbsp;not&nbsp;Empty&nbsp;at&nbsp;current&nbsp;time,&nbsp;but&nbsp;ReceiveCount&nbsp;not&nbsp;updated&nbsp;yet\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;ReceiveCount&nbsp;used&nbsp;in&nbsp;reporting&nbsp;below.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Put&nbsp;Data&nbsp;and&nbsp;Parameters&nbsp;into&nbsp;record\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(RxStim.Data,&nbsp;RxStim.Error)&nbsp;:=&nbsp;pop(ReceiveFifo)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&nbsp;&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;RxStim.Data,&nbsp;&nbsp;TransRec.DataFromModel&apos;length)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.ParamFromModel&nbsp;&nbsp;&lt;=&nbsp;SafeResize(ModelID,&nbsp;RxStim.Error,&nbsp;TransRec.ParamFromModel&apos;length);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsCheck(Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExpectedStim&nbsp;:=&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Data&nbsp;&nbsp;=&gt;&nbsp;SafeResize(ModelID,&nbsp;TransRec.DataToModel,&nbsp;ExpectedStim.Data&apos;length),&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Error&nbsp;=&gt;&nbsp;to_01(SafeResize(ModelID,&nbsp;TransRec.ParamToModel,&nbsp;ExpectedStim.Error&apos;length)))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Match(RxStim,&nbsp;ExpectedStim)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AffirmPassed(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Received:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(RxStim)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.&nbsp;&nbsp;Operation&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReceiveCount),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.BoolToModel&nbsp;or&nbsp;IsLogEnabled(ModelID,&nbsp;INFO)&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AffirmError(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Received:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(RxStim)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.&nbsp;&nbsp;Expected:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ExpectedStim)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.&nbsp;&nbsp;Operation&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReceiveCount)&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Received:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(RxStim)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.&nbsp;&nbsp;Operation&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReceiveCount),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO,&nbsp;Enable&nbsp;=&gt;&nbsp;TransRec.BoolToModel\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Empty(ReceiveFifo)&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_CLOCK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitCycles&nbsp;:=&nbsp;TransRec.IntToModel&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Log(ModelID,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&quot;WaitForClock:&nbsp;&nbsp;WaitCycles&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WaitCycles),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;(WaitCycles&nbsp;*&nbsp;Baud)&nbsp;-&nbsp;1&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;Uart16XClk&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_ALERTLOG_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ModelID&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReceiveCount&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Options&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;UartOptionType&apos;pos(SET_PARITY_MODE)&nbsp;=&gt;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParityMode&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckParityMode(ModelID,&nbsp;TransRec.IntToModel,&nbsp;TransRec.BoolToModel)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;UartOptionType&apos;pos(SET_STOP_BITS)&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NumStopBits&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckNumStopBits(ModelID,&nbsp;TransRec.IntToModel,&nbsp;TransRec.BoolToModel)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;UartOptionType&apos;pos(SET_DATA_BITS)&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NumDataBits&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckNumDataBits(ModelID,&nbsp;TransRec.IntToModel,&nbsp;TransRec.BoolToModel)&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;UartOptionType&apos;pos(SET_BAUD)&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Baud&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;CheckBaud(ModelID,&nbsp;TransRec.TimeToModel,&nbsp;TransRec.BoolToModel)&nbsp;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;SetOptions,&nbsp;Unimplemented&nbsp;Option:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(UartOptionType&apos;val(TransRec.Options)),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;MULTIPLE_DRIVER_DETECT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;Multiple&nbsp;Drivers&nbsp;on&nbsp;Transaction&nbsp;Record.&quot;&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Transaction&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.Rdy),&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;Unimplemented&nbsp;Transaction:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(Operation),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;TransactionDispatcherLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;TransactionDispatcher&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Generate&nbsp;16X&nbsp;Baud&nbsp;Clock\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;Uart16XClkProc&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;Baud&nbsp;/&nbsp;16&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;Uart16XClk&nbsp;&lt;=&nbsp;&apos;0&apos;,&nbsp;&apos;1&apos;&nbsp;after&nbsp;Baud&nbsp;/&nbsp;32&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Pre-Process&nbsp;Inputs\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;iSerialDataIn&nbsp;&lt;=&nbsp;to_X01(SerialDataIn)&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;UART&nbsp;Receiver&nbsp;Statemachine\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Note&nbsp;for&nbsp;testbench,&nbsp;no&nbsp;reset&nbsp;needed,&nbsp;initial&nbsp;value&nbsp;=&nbsp;power&nbsp;on&nbsp;reset&nbsp;value\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;UartRxStateProc&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Aldec&nbsp;enum&nbsp;RxStateType&nbsp;CURRENT=RxState\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Aldec&nbsp;enum&nbsp;RxStateType&nbsp;STATES=RX_IDLE,RX_HUNT,RX_DATA,RX_PARITY,RX_STOP,RX_BREAK\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;Uart16XClk&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;RxState&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_IDLE&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iSerialDataIn&nbsp;=&nbsp;&apos;0&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_HUNT&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_HUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iSerialDataIn&nbsp;/=&nbsp;&apos;0&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_IDLE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elsif&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_DATA&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_DATA&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;and&nbsp;LastDataBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ParityMode&nbsp;=&nbsp;UARTTB_PARITY_NONE&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_STOP&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_PARITY&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_PARITY&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_STOP&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_STOP&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iSerialDataIn&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_IDLE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_BREAK&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_BREAK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;iSerialDataIn&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_IDLE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxState&nbsp;&lt;=&nbsp;RX_BREAK&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Data&nbsp;Capture&nbsp;Logic\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Separate&nbsp;from&nbsp;statemachine&nbsp;for&nbsp;readability\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;a&nbsp;one&nbsp;process&nbsp;statemachine,&nbsp;this&nbsp;can&nbsp;be&nbsp;coded&nbsp;with&nbsp;the&nbsp;statemachine\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;UartDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;RxData&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;RxParity&nbsp;&nbsp;:&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ErrorMode&nbsp;:&nbsp;std_logic_vector(TransRec.ParamFromModel&apos;range)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;on&nbsp;Uart16XClk&nbsp;until&nbsp;Uart16XClk&nbsp;=&nbsp;&apos;1&apos;&nbsp;and&nbsp;SampleBit&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;RxState&nbsp;is\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_DATA&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxData(DataBitCount)&nbsp;:=&nbsp;iSerialDataIn&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataBitCount&nbsp;&lt;=&nbsp;DataBitCount&nbsp;+&nbsp;1&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_PARITY&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxParity&nbsp;:=&nbsp;iSerialDataIn&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RX_STOP&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMode(UARTTB_PARITY_INDEX)&nbsp;:=&nbsp;CalcParity(RxData,&nbsp;ParityMode)&nbsp;?/=&nbsp;RxParity&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMode(UARTTB_STOP_INDEX)&nbsp;&nbsp;&nbsp;:=&nbsp;not&nbsp;to_01(iSerialDataIn)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ParityMode&nbsp;/=&nbsp;UARTTB_PARITY_NONE&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMode(UARTTB_BREAK_INDEX)&nbsp;&nbsp;:=&nbsp;not&nbsp;(iSerialDataIn&nbsp;or&nbsp;RxParity&nbsp;or&nbsp;(or&nbsp;RxData))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMode(UARTTB_BREAK_INDEX)&nbsp;&nbsp;:=&nbsp;not&nbsp;(iSerialDataIn&nbsp;or&nbsp;(or&nbsp;RxData))&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;ErrorMode(UARTTB_BREAK_INDEX)&nbsp;=&nbsp;&apos;1&apos;&nbsp;then&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,&nbsp;&quot;UartRx&nbsp;&nbsp;Break&nbsp;Detected&quot;,&nbsp;INFO)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Hand&nbsp;off&nbsp;values&nbsp;to&nbsp;Transaction&nbsp;Handler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReceiveFifo,&nbsp;RxData&nbsp;&amp;&nbsp;ErrorMode)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Log&nbsp;at&nbsp;interface&nbsp;at&nbsp;DEBUG&nbsp;level\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Received:&quot;&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;Data&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(RxData)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;Parity&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(RxParity)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;Stop&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(iSerialDataIn)&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;Parity&nbsp;Error&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ErrorMode(UARTTB_PARITY_INDEX))&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;Stop&nbsp;Error&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ErrorMode(UARTTB_STOP_INDEX))&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;Break&nbsp;Error&nbsp;=&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ErrorMode(UARTTB_BREAK_INDEX))&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,&nbsp;&nbsp;Operation&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReceiveCount),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataBitCount&nbsp;&lt;=&nbsp;0&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;&nbsp;&nbsp;&nbsp;--&nbsp;%%&nbsp;Tb2&nbsp;Lab&nbsp;10.1.5\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RxParity&nbsp;:=&nbsp;&apos;-&apos;&nbsp;&nbsp;;&nbsp;--&nbsp;No&nbsp;Parity\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMode&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;UartDataHandler&nbsp;;\n&nbsp;\n&nbsp;&nbsp;LastDataBit&nbsp;&lt;=&nbsp;&apos;1&apos;&nbsp;when&nbsp;DataBitCount&nbsp;=&nbsp;(NumDataBits&nbsp;-&nbsp;1)&nbsp;else&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Sample&nbsp;Bit&nbsp;Signaling\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;SampleBitCntProc&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;Uart16XClk&nbsp;=&nbsp;&apos;1&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;RxState&nbsp;=&nbsp;RX_IDLE&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SampleBitCount&nbsp;&lt;=&nbsp;&quot;0110&quot;&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SampleBitCount&nbsp;&lt;=&nbsp;SampleBitCount&nbsp;-&nbsp;1&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;;\n&nbsp;\n&nbsp;&nbsp;SampleBit&nbsp;&lt;=&nbsp;&apos;1&apos;&nbsp;when&nbsp;SampleBitCount&nbsp;=&nbsp;0&nbsp;else&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;\n&nbsp;\nend&nbsp;model&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;\n';
Report.brushes['./../../../OsvvmLibraries/UART/src/UartRx.vhd'] = 'vhdl'
