Report.sources['./../../../SynthWorks/Dev/_osvvm/OsvvmLibraries/AXI4/Axi4Lite/src/Axi4LiteMemory.vhd'] = '--\n--&nbsp;&nbsp;File&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4LiteMemory.vhd\n--&nbsp;&nbsp;Design&nbsp;Unit&nbsp;Name:&nbsp;&nbsp;Axi4LiteMemory\n--&nbsp;&nbsp;Revision:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OSVVM&nbsp;MODELS&nbsp;STANDARD&nbsp;VERSION\n--\n--&nbsp;&nbsp;Maintainer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&nbsp;jim@synthworks.com\n--&nbsp;&nbsp;Contributor(s):\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jim&nbsp;Lewis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jim@synthworks.com\n--\n--\n--&nbsp;&nbsp;Description:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simple&nbsp;AXI&nbsp;Full&nbsp;Memory&nbsp;Subordinate&nbsp;Model\n--\n--\n--&nbsp;&nbsp;Developed&nbsp;by:\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VHDL&nbsp;Training&nbsp;Classes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.SynthWorks.com\n--\n--&nbsp;&nbsp;Revision&nbsp;History:\n--&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;&nbsp;&nbsp;&nbsp;Description\n--&nbsp;&nbsp;&nbsp;&nbsp;10/2022&nbsp;&nbsp;&nbsp;2022.10&nbsp;&nbsp;&nbsp;&nbsp;Changed&nbsp;enum&nbsp;value&nbsp;PRIVATE&nbsp;to&nbsp;PRIVATE_NAME&nbsp;due&nbsp;to&nbsp;VHDL-2019&nbsp;keyword&nbsp;conflict.&nbsp;&nbsp;&nbsp;\n--&nbsp;&nbsp;&nbsp;&nbsp;05/2022&nbsp;&nbsp;&nbsp;2022.05&nbsp;&nbsp;&nbsp;&nbsp;Updated&nbsp;FIFOs&nbsp;so&nbsp;they&nbsp;are&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE\n--&nbsp;&nbsp;&nbsp;&nbsp;03/2022&nbsp;&nbsp;&nbsp;2022.03&nbsp;&nbsp;&nbsp;&nbsp;Rederived&nbsp;from&nbsp;the&nbsp;2022.02&nbsp;version&nbsp;of&nbsp;Axi4&nbsp;Full&nbsp;Memory\n--\n--\n--&nbsp;&nbsp;This&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;OSVVM.\n--\n--&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2020&nbsp;-&nbsp;2021&nbsp;by&nbsp;SynthWorks&nbsp;Design&nbsp;Inc.\n--\n--&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\n--&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.\n--&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at\n--\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.apache.org/licenses/LICENSE-2.0\n--\n--&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software\n--&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&quot;AS&nbsp;IS&quot;&nbsp;BASIS,\n--&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.\n--&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and\n--&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.\n--\n&nbsp;\nlibrary&nbsp;ieee&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.std_logic_1164.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.numeric_std_unsigned.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;ieee.math_real.all&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm&nbsp;;\n&nbsp;&nbsp;context&nbsp;osvvm.OsvvmContext&nbsp;;\n&nbsp;&nbsp;use&nbsp;osvvm.ScoreboardPkg_slv.all&nbsp;;\n&nbsp;\nlibrary&nbsp;osvvm_common&nbsp;;\n&nbsp;&nbsp;context&nbsp;osvvm_common.OsvvmCommonContext&nbsp;;\n&nbsp;\n&nbsp;&nbsp;use&nbsp;work.Axi4OptionsPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4InterfaceCommonPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4LiteInterfacePkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4CommonPkg.all&nbsp;;\n&nbsp;&nbsp;use&nbsp;work.Axi4ModelPkg.all&nbsp;;\n&nbsp;\nentity&nbsp;Axi4LiteMemory&nbsp;is\ngeneric&nbsp;(\n&nbsp;&nbsp;MODEL_ID_NAME&nbsp;&nbsp;&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&quot;&nbsp;;\n&nbsp;&nbsp;MEMORY_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;&quot;&nbsp;;\n&nbsp;&nbsp;tperiod_Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;10&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;DEFAULT_DELAY&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;1&nbsp;ns&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_AWReady&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_WReady&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_BValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_BResp&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_ARReady&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;\n&nbsp;&nbsp;tpd_Clk_RValid&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RData&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;;\n&nbsp;&nbsp;tpd_Clk_RResp&nbsp;&nbsp;&nbsp;:&nbsp;time&nbsp;&nbsp;&nbsp;:=&nbsp;DEFAULT_DELAY&nbsp;\n)&nbsp;;\nport&nbsp;(\n&nbsp;&nbsp;--&nbsp;Globals\n&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;&nbsp;nReset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;in&nbsp;&nbsp;&nbsp;std_logic&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;AXI&nbsp;Subordinate&nbsp;Interface\n&nbsp;&nbsp;AxiBus&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;Axi4LiteRecType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Testbench&nbsp;Transaction&nbsp;Interface\n&nbsp;&nbsp;TransRec&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;inout&nbsp;AddressBusRecType\n)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Model&nbsp;Configuration\n&nbsp;&nbsp;--&nbsp;Access&nbsp;via&nbsp;transactions&nbsp;or&nbsp;external&nbsp;name\n&nbsp;&nbsp;shared&nbsp;variable&nbsp;Params&nbsp;:&nbsp;ModelParametersPType&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;AXI&nbsp;interface&nbsp;properties&nbsp;from&nbsp;the&nbsp;AxiBus\n&nbsp;&nbsp;constant&nbsp;AXI_ADDR_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteAddress.Addr&apos;length&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_WIDTH&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AxiBus.WriteData.Data&apos;length&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;--&nbsp;Derive&nbsp;ModelInstance&nbsp;label&nbsp;from&nbsp;path_name\n&nbsp;&nbsp;constant&nbsp;MODEL_INSTANCE_NAME&nbsp;:&nbsp;string&nbsp;:=\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;use&nbsp;MODEL_ID_NAME&nbsp;Generic&nbsp;if&nbsp;set,&nbsp;otherwise&nbsp;use&nbsp;instance&nbsp;label&nbsp;(preferred&nbsp;if&nbsp;set&nbsp;as&nbsp;entityname_1)\n&nbsp;&nbsp;&nbsp;&nbsp;IfElse(MODEL_ID_NAME&nbsp;/=&nbsp;&quot;&quot;,&nbsp;MODEL_ID_NAME,&nbsp;PathTail(to_lower(Axi4LiteMemory&apos;PATH_NAME)))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Memory&nbsp;Data&nbsp;Structure,&nbsp;Access&nbsp;via&nbsp;MemoryName\n&nbsp;&nbsp;constant&nbsp;LOCAL_MEMORY_NAME&nbsp;:&nbsp;string&nbsp;:=&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;IfElse(MEMORY_NAME&nbsp;/=&nbsp;&quot;&quot;,&nbsp;MEMORY_NAME,&nbsp;to_lower(Axi4LiteMemory&apos;PATH_NAME)&nbsp;&amp;&nbsp;&quot;:memory&quot;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;constant&nbsp;MODEL_NAME&nbsp;:&nbsp;string&nbsp;:=&nbsp;&quot;Axi4LiteMemory&quot;&nbsp;;\n&nbsp;\nend&nbsp;entity&nbsp;Axi4LiteMemory&nbsp;;\n&nbsp;\narchitecture&nbsp;MemorySubordinate&nbsp;of&nbsp;Axi4LiteMemory&nbsp;is\n&nbsp;&nbsp;constant&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;AXI_DATA_WIDTH&nbsp;/&nbsp;8&nbsp;;\n&nbsp;&nbsp;constant&nbsp;AXI_BYTE_ADDR_WIDTH&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;integer(ceil(log2(real(AXI_DATA_BYTE_WIDTH))))&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ModelID,&nbsp;BusFailedID,&nbsp;DataCheckID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;constant&nbsp;MemoryID&nbsp;:&nbsp;MemoryIDType&nbsp;:=&nbsp;NewID(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;LOCAL_MEMORY_NAME,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddrWidth&nbsp;&nbsp;=&gt;&nbsp;AXI_ADDR_WIDTH,&nbsp;&nbsp;--&nbsp;Address&nbsp;is&nbsp;byte&nbsp;address\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataWidth&nbsp;&nbsp;=&gt;&nbsp;8,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Memory&nbsp;is&nbsp;byte&nbsp;oriented\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Search&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;NAME\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteResponseFifo&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;osvvm.ScoreboardPkg_slv.ScoreboardIDType&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;Setup&nbsp;so&nbsp;that&nbsp;if&nbsp;no&nbsp;configuration&nbsp;is&nbsp;done,&nbsp;accept&nbsp;transactions\n&nbsp;&nbsp;signal&nbsp;WriteAddressExpectCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataExpectCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;WriteAddressReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteDataReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;WriteResponseDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadAddressReceiveCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;signal&nbsp;ReadDataRequestCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ReadDataDoneCount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--&nbsp;A&nbsp;hack&nbsp;of&nbsp;a&nbsp;way&nbsp;to&nbsp;set&nbsp;the&nbsp;parameters&nbsp;for&nbsp;now.\n&nbsp;&nbsp;signal&nbsp;ModelBResp&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;:=&nbsp;to_Axi4RespType(OKAY)&nbsp;;\n&nbsp;&nbsp;signal&nbsp;ModelRResp&nbsp;&nbsp;:&nbsp;Axi4RespType&nbsp;:=&nbsp;to_Axi4RespType(OKAY)&nbsp;;\n&nbsp;&nbsp;\nbegin\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;Turn&nbsp;off&nbsp;drivers&nbsp;not&nbsp;being&nbsp;driven&nbsp;by&nbsp;this&nbsp;model\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitAxi4LiteRec&nbsp;(AxiBusRec&nbsp;=&gt;&nbsp;AxiBus&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Initialize&nbsp;AlertLogIDs\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitalizeAlertLogIDs&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ID&nbsp;:&nbsp;AlertLogIDType&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Alerts\n&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;NewID(MODEL_INSTANCE_NAME)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;ModelID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;ID&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;BusFailedID&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;No&nbsp;response&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;DataCheckID&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;Data&nbsp;Check&quot;,&nbsp;ID&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;FIFOs&nbsp;get&nbsp;an&nbsp;AlertLogID&nbsp;with&nbsp;NewID,&nbsp;however,&nbsp;it&nbsp;does&nbsp;not&nbsp;print&nbsp;in&nbsp;ReportAlerts&nbsp;(due&nbsp;to&nbsp;DoNotReport)\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;FIFOS&nbsp;only&nbsp;generate&nbsp;usage&nbsp;type&nbsp;errors&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteAddressFIFO&quot;,&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseFifo&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;WriteResponseFifo&quot;,&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadAddressFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataFifo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;NewID(&quot;ReadDataFifo&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID,&nbsp;ReportMode&nbsp;=&gt;&nbsp;DISABLED,&nbsp;Search&nbsp;=&gt;&nbsp;PRIVATE_NAME);\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;InitalizeAlertLogIDs&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Initialize&nbsp;Model&nbsp;Options\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;InitalizeOptions&nbsp;:&nbsp;process\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;InitAxiOptions&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Params&nbsp;=&gt;&nbsp;Params\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;InitalizeOptions&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;Transaction&nbsp;Dispatcher\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Handles&nbsp;transactions&nbsp;between&nbsp;TestCtrl&nbsp;and&nbsp;Model\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;TransactionDispatcher&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.WriteAddress.Addr&apos;range)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.WriteData.Data&apos;range)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ExpectedData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(AxiBus.WriteData.Data&apos;range)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;DataWidth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;NumBytes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Count&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4Option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Axi4OptionsType&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Axi4OptionVal&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForTransaction(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rdy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Rdy,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TransRec.Ack\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TransRec.Operation&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;either&nbsp;next&nbsp;write&nbsp;or&nbsp;read&nbsp;access&nbsp;of&nbsp;memory&nbsp;to&nbsp;complete\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count&nbsp;:=&nbsp;WriteAddressReceiveCount&nbsp;+&nbsp;ReadAddressReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;(WriteAddressReceiveCount&nbsp;+&nbsp;ReadAddressReceiveCount)&nbsp;=&nbsp;Count&nbsp;+&nbsp;1&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_WRITE_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;next&nbsp;write&nbsp;to&nbsp;memory&nbsp;to&nbsp;complete\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count&nbsp;:=&nbsp;WriteAddressReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;WriteAddressReceiveCount&nbsp;=&nbsp;Count&nbsp;+&nbsp;1&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_READ_TRANSACTION&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;next&nbsp;read&nbsp;from&nbsp;memory&nbsp;to&nbsp;complete\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count&nbsp;:=&nbsp;ReadAddressReceiveCount&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;until&nbsp;ReadAddressReceiveCount&nbsp;=&nbsp;Count&nbsp;+&nbsp;1&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WAIT_FOR_CLOCK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_ALERTLOG_ID&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(ModelID)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;integer(TransRec.Rdy)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_WRITE_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;WriteAddressReceiveCount&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_READ_TRANSACTION_COUNT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;ReadAddressReceiveCount&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;WRITE_OP&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Back&nbsp;door&nbsp;Write&nbsp;access&nbsp;to&nbsp;memory.&nbsp;&nbsp;Completes&nbsp;without&nbsp;time&nbsp;passing.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;SafeResize(TransRec.Address,&nbsp;Address&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;SafeResize(TransRec.DataToModel,&nbsp;Data&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataWidth&nbsp;&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NumBytes&nbsp;&nbsp;&nbsp;:=&nbsp;DataWidth&nbsp;/&nbsp;8&nbsp;;\n&nbsp;\n--!9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;checks&nbsp;&nbsp;Is&nbsp;address&nbsp;appropriate&nbsp;for&nbsp;NumBytes\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlignCheckWriteData&nbsp;(ModelID,&nbsp;Data,&nbsp;Strb,&nbsp;TransRec.DataWidth,&nbsp;ByteAddr)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Memory&nbsp;is&nbsp;byte&nbsp;oriented.&nbsp;&nbsp;Access&nbsp;as&nbsp;Bytes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;0&nbsp;to&nbsp;NumBytes-1&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteData&nbsp;:=&nbsp;Data((8*i&nbsp;+&nbsp;7)&nbsp;&nbsp;downto&nbsp;8*i)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemWrite(MemoryID,&nbsp;Address&nbsp;+&nbsp;i,&nbsp;ByteData)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;READ_OP&nbsp;|&nbsp;READ_CHECK&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Back&nbsp;door&nbsp;Read&nbsp;access&nbsp;to&nbsp;memory.&nbsp;&nbsp;Completes&nbsp;without&nbsp;time&nbsp;passing.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;SafeResize(TransRec.Address,&nbsp;Address&apos;length)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteAddr&nbsp;&nbsp;&nbsp;:=&nbsp;CalculateByteAddress(Address,&nbsp;AXI_BYTE_ADDR_WIDTH);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;(others&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataWidth&nbsp;&nbsp;:=&nbsp;TransRec.DataWidth&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NumBytes&nbsp;&nbsp;&nbsp;:=&nbsp;DataWidth&nbsp;/&nbsp;8&nbsp;;\n&nbsp;\n--!9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;checks&nbsp;&nbsp;Is&nbsp;address&nbsp;appropriate&nbsp;for&nbsp;NumBytes\n--??&nbsp;&nbsp;What&nbsp;if&nbsp;32&nbsp;bit&nbsp;read,&nbsp;but&nbsp;address&nbsp;is&nbsp;byte&nbsp;oriented??\n--??&nbsp;&nbsp;ERROR,&nbsp;or&nbsp;OK&nbsp;&amp;&nbsp;return&nbsp;unaddressed&nbsp;bytes&nbsp;as&nbsp;X?\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Memory&nbsp;is&nbsp;byte&nbsp;oriented.&nbsp;&nbsp;Access&nbsp;as&nbsp;Bytes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;0&nbsp;to&nbsp;NumBytes-1&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemRead(MemoryID,&nbsp;Address&nbsp;+&nbsp;i,&nbsp;ByteData)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data((8*i&nbsp;+&nbsp;7)&nbsp;&nbsp;downto&nbsp;8*i)&nbsp;:=&nbsp;ByteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.DataFromModel&nbsp;&lt;=&nbsp;SafeResize(Data,&nbsp;TransRec.DataFromModel&apos;length)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsReadCheck(TransRec.Operation)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExpectedData&nbsp;:=&nbsp;SafeResize(TransRec.DataToModel,&nbsp;ExpectedData&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AffirmIf(&nbsp;DataCheckID,&nbsp;Data&nbsp;=&nbsp;ExpectedData,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Address:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(Address)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Data:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Expected:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(ExpectedData),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsLogEnabled(ModelID,&nbsp;INFO)&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n--!!&nbsp;TODO:&nbsp;&nbsp;Change&nbsp;format&nbsp;to&nbsp;Address,&nbsp;Data&nbsp;Transaction&nbsp;#,&nbsp;Read&nbsp;Data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(&nbsp;ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Address:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(Address)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Data:&nbsp;&quot;&nbsp;&amp;&nbsp;to_hxstring(Data),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;SET_MODEL_OPTIONS&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiParameter(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetAxi4Parameter(Params,&nbsp;Axi4Option,&nbsp;TransRec.IntToModel)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Axi4Option&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;RESP&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelBResp&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelBResp&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelRResp&nbsp;&lt;=&nbsp;to_slv(TransRec.IntToModel,&nbsp;ModelRResp&apos;length)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;SetOptions,&nbsp;Unimplemented&nbsp;Option:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(Axi4OptionsType&apos;val(TransRec.Options)),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;GET_MODEL_OPTIONS&nbsp;=&gt;\n--!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;Params.Get(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axi4Option&nbsp;:=&nbsp;Axi4OptionsType&apos;val(TransRec.Options)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;IsAxiParameter(Axi4Option)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;Axi4Option,&nbsp;Axi4OptionVal)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;Axi4OptionVal&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;Axi4Option&nbsp;is\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;RESP&nbsp;Settings\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;BRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelBResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;RRESP&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransRec.IntFromModel&nbsp;&lt;=&nbsp;to_integer(ModelRResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;The&nbsp;End&nbsp;--&nbsp;Done\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;GetOptions,&nbsp;Unimplemented&nbsp;Option:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(Axi4OptionsType&apos;val(TransRec.Options)),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;MULTIPLE_DRIVER_DETECT&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;Multiple&nbsp;Drivers&nbsp;on&nbsp;Transaction&nbsp;Record.&quot;&nbsp;&amp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Transaction&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.Rdy),&nbsp;FAILURE)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;others&nbsp;=&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alert(ModelID,&nbsp;&quot;Unimplemented&nbsp;Transaction:&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(TransRec.Operation),&nbsp;FAILURE)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;case&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;1&nbsp;delta&nbsp;cycle,&nbsp;required&nbsp;if&nbsp;a&nbsp;wait&nbsp;is&nbsp;not&nbsp;in&nbsp;all&nbsp;case&nbsp;branches&nbsp;above\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;end&nbsp;process&nbsp;TransactionDispatcher&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AW&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;is&nbsp;AxiBus.WriteAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteAddressReadyBeforeValid&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteAddressReadyDelayCycles&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;AW.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteAddressOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_ADDRESS_READY_BEFORE_VALID,&nbsp;WriteAddressReadyBeforeValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_ADDRESS_READY_DELAY_CYCLES,&nbsp;WriteAddressReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteAddress.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteAddress.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;WriteAddressReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;WriteAddressReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_AWReady\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWAddr:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(AW.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWProt:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(AW.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string&nbsp;(WriteAddressReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Send&nbsp;Address&nbsp;Information&nbsp;to&nbsp;WriteHandler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteAddressFifo,&nbsp;AW.Addr&nbsp;&amp;&nbsp;AW.Prot)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteAddressOperation&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteAddressHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Write&nbsp;Data&nbsp;Transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WD&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;is&nbsp;AxiBus.WriteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteDataReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteDataReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;WD.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteDataOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_READY_BEFORE_VALID,&nbsp;WriteDataReadyBeforeValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_DATA_READY_DELAY_CYCLES,&nbsp;WriteDataReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteData.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.WriteData.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;WriteDataReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;WriteDataReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_WReady\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Send&nbsp;to&nbsp;WriteHandler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteDataFifo,&nbsp;WD.Data&nbsp;&amp;&nbsp;WD.Strb)&nbsp;;\n&nbsp;\n--!!&nbsp;Add&nbsp;AXI&nbsp;Full&nbsp;Information\n--!9&nbsp;Resolve&nbsp;Level\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Data.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WData:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(WD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WStrb:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_string(WD.Strb)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteDataReceiveCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteDataReceiveCount)&nbsp;;\n&nbsp;\n--!9&nbsp;Delay&nbsp;between&nbsp;accepting&nbsp;words&nbsp;determined&nbsp;by&nbsp;type&nbsp;of&nbsp;write&nbsp;address:&nbsp;Single&nbsp;Word,&nbsp;First&nbsp;Burst,&nbsp;Burst,&nbsp;Last&nbsp;Burst\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteDataOperation&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;&nbsp;--&nbsp;remove&nbsp;&quot;no&nbsp;wait&quot;&nbsp;warning\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteDataHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;WriteHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Collect&nbsp;Write&nbsp;Address&nbsp;and&nbsp;Data&nbsp;transactions\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LAW&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;AW&nbsp;:&nbsp;AxiBus.WriteAddress&apos;subtype&nbsp;is&nbsp;AxiBus.WriteAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LWD&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WD&nbsp;&nbsp;:&nbsp;AxiBus.WriteData&apos;subtype&nbsp;is&nbsp;AxiBus.WriteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BurstLen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteAddressBits&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesPerTransfer&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;TransferAddress,&nbsp;MemoryAddress&nbsp;:&nbsp;std_logic_vector(LAW.Addr&apos;range)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteAddressFifo&nbsp;to&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteHandlerLoop&nbsp;:&nbsp;loop&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Write&nbsp;Address&nbsp;and&nbsp;Data&nbsp;transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LAW.Addr,&nbsp;LAW.Prot)&nbsp;:=&nbsp;pop(WriteAddressFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BurstLen&nbsp;:=&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteAddressBits&nbsp;&nbsp;&nbsp;:=&nbsp;AXI_BYTE_ADDR_WIDTH&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;&nbsp;:=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;first&nbsp;word&nbsp;in&nbsp;a&nbsp;burst&nbsp;or&nbsp;single&nbsp;word&nbsp;transfer\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransferAddress&nbsp;&nbsp;:=&nbsp;LAW.Addr(LAW.Addr&apos;left&nbsp;downto&nbsp;ByteAddressBits)&nbsp;&amp;&nbsp;(ByteAddressBits&nbsp;downto&nbsp;1&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;GetWordAddr(Addr,&nbsp;BytesPerTransfer)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemoryAddress&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TransferAddress(LAW.Addr&apos;left&nbsp;downto&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;&amp;&nbsp;(AXI_BYTE_ADDR_WIDTH&nbsp;downto&nbsp;1&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;GetWordAddr(TransferAddress,&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--!3&nbsp;Delay&nbsp;before&nbsp;first&nbsp;word&nbsp;-&nbsp;burst&nbsp;vs.&nbsp;single&nbsp;word\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Wait&nbsp;for&nbsp;Data\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteDataReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LWD.Data,&nbsp;LWD.Strb)&nbsp;:=&nbsp;pop(WriteDataFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Memory&nbsp;Write.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWAddr:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LAW.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;AWProt:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(LAW.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WData:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LWD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;WStrb:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(LWD.Strb)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string&nbsp;(WriteReceiveCount),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Memory&nbsp;is&nbsp;byte&nbsp;oriented.&nbsp;&nbsp;Access&nbsp;as&nbsp;Bytes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;j&nbsp;in&nbsp;0&nbsp;to&nbsp;AXI_DATA_BYTE_WIDTH-1&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;LWD.Strb(j)&nbsp;=&nbsp;&apos;1&apos;&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteData&nbsp;:=&nbsp;LWD.Data((8*j&nbsp;+&nbsp;7)&nbsp;&nbsp;downto&nbsp;8*j)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemWrite(MemoryID,&nbsp;MemoryAddress&nbsp;+&nbsp;j,&nbsp;ByteData)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--!9&nbsp;Get&nbsp;response&nbsp;from&nbsp;Params\n&nbsp;&nbsp;--!9&nbsp;Does&nbsp;response&nbsp;vary&nbsp;with&nbsp;Address?\n&nbsp;&nbsp;--!!&nbsp;Only&nbsp;one&nbsp;response&nbsp;per&nbsp;burst&nbsp;cycle.&nbsp;&nbsp;Last&nbsp;cycle&nbsp;of&nbsp;a&nbsp;burst&nbsp;only\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(WriteResponseFifo,&nbsp;ModelBResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(WriteReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteHandlerLoop&nbsp;;&nbsp;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;WriteResponseHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;Receive&nbsp;and&nbsp;Check&nbsp;Write&nbsp;Responses\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;WriteResponseHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;WR&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus.WriteResponse&apos;subtype&nbsp;is&nbsp;AxiBus.WriteResponse&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.WriteResponse&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;WriteResponseReadyTimeOut&nbsp;:&nbsp;integer&nbsp;:=&nbsp;25&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;WR.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;(Local.Resp&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;WriteResponseFifo&nbsp;to&nbsp;initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;WriteResponseLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Find&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(WriteResponseFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(WriteReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Local.Resp&nbsp;:=&nbsp;pop(WriteResponseFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Params.Get(Axi4OptionsType&apos;POS(WRITE_RESPONSE_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Do&nbsp;Transaction\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_BResp&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Write&nbsp;Response.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;BResp:&nbsp;&quot;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;WRITE_RESPONSE_READY_TIME_OUT,&nbsp;WriteResponseReadyTimeOut)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteResponse.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.WriteResponse.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_BValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Write&nbsp;Response&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(WriteResponseDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;WriteResponseReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WR.Resp&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_BResp&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(WriteResponseDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n--!9&nbsp;response&nbsp;delay&nbsp;based&nbsp;on&nbsp;type&nbsp;of&nbsp;write&nbsp;address:&nbsp;Single&nbsp;Word,&nbsp;First&nbsp;Burst,&nbsp;Burst,&nbsp;Last&nbsp;Burst\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;WriteResponseLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;WriteResponseHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadAddressHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Execute&nbsp;Read&nbsp;Address&nbsp;Transactions\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Handles&nbsp;addresses&nbsp;as&nbsp;received,&nbsp;adds&nbsp;appropriate&nbsp;interface&nbsp;characterists\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadAddressHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AR&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;is&nbsp;AxiBus.ReadAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadAddressReadyBeforeValid&nbsp;&nbsp;&nbsp;:&nbsp;boolean&nbsp;:=&nbsp;TRUE&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadAddressReadyDelayCycles&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;:=&nbsp;0&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;&nbsp;&nbsp;&nbsp;AR.Ready&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;2)&nbsp;;&nbsp;&nbsp;--&nbsp;Initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressOperation&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_ADDRESS_READY_BEFORE_VALID,&nbsp;ReadAddressReadyBeforeValid)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_ADDRESS_READY_DELAY_CYCLES,&nbsp;ReadAddressReadyDelayCycles)&nbsp;;\n&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiReadyHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadAddress.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;AxiBus.ReadAddress.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyBeforeValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadAddressReadyBeforeValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadyDelayCycles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;ReadAddressReadyDelayCycles&nbsp;*&nbsp;tperiod_Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;tpd_Clk_ARReady\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n--!9&nbsp;Resolve&nbsp;Level\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Address.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARAddr:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(AR.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARProt:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(AR.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string&nbsp;(ReadAddressReceiveCount+1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Send&nbsp;Address&nbsp;Information&nbsp;to&nbsp;ReadHandler\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadAddressFifo,&nbsp;AR.Addr&nbsp;&amp;&nbsp;AR.Prot)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReadAddressReceiveCount)&nbsp;;\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadAddressReceiveCount&nbsp;&lt;=&nbsp;ReadAddressReceiveCount&nbsp;+&nbsp;BurstCount&nbsp;;\n&nbsp;\n--?6&nbsp;Add&nbsp;delay&nbsp;between&nbsp;accepting&nbsp;addresses&nbsp;determined&nbsp;by&nbsp;type&nbsp;of&nbsp;address:&nbsp;Single&nbsp;Word,&nbsp;First&nbsp;Burst,&nbsp;Burst,&nbsp;Last&nbsp;Burst\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadAddressOperation&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;;&nbsp;--&nbsp;remove&nbsp;&quot;no&nbsp;wait&quot;&nbsp;warning\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadAddressHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Accesses&nbsp;Memory\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Introduces&nbsp;cycle&nbsp;delays&nbsp;due&nbsp;to&nbsp;accessing&nbsp;memory\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LAR&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;AR&nbsp;&nbsp;:&nbsp;AxiBus.ReadAddress&apos;subtype&nbsp;is&nbsp;AxiBus.ReadAddress&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;LRD&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;RD&nbsp;&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;is&nbsp;AxiBus.ReadData&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BurstLen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteAddressBits&nbsp;&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;BytesPerTransfer&nbsp;:&nbsp;integer&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;MemoryAddress,&nbsp;TransferAddress&nbsp;:&nbsp;std_logic_vector(LAR.Addr&apos;length-1&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ByteData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;std_logic_vector(7&nbsp;downto&nbsp;0)&nbsp;;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ReadAddressFifo&nbsp;to&nbsp;initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadHandlerLoop&nbsp;:&nbsp;loop&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(ReadAddressFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadAddressReceiveCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LAR.Addr,&nbsp;LAR.Prot)&nbsp;:=&nbsp;pop(ReadAddressFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;--!6&nbsp;Add&nbsp;delay&nbsp;to&nbsp;access&nbsp;memory&nbsp;by&nbsp;type&nbsp;of&nbsp;address:&nbsp;Single&nbsp;Word,&nbsp;First&nbsp;Burst,&nbsp;Burst,&nbsp;Last&nbsp;Burst\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BurstLen&nbsp;:=&nbsp;1&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByteAddressBits&nbsp;&nbsp;&nbsp;:=&nbsp;AXI_BYTE_ADDR_WIDTH&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BytesPerTransfer&nbsp;&nbsp;:=&nbsp;AXI_DATA_BYTE_WIDTH&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;first&nbsp;word&nbsp;in&nbsp;a&nbsp;burst&nbsp;or&nbsp;single&nbsp;word&nbsp;transfer\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TransferAddress&nbsp;&nbsp;:=&nbsp;LAR.Addr(LAR.Addr&apos;left&nbsp;downto&nbsp;ByteAddressBits)&nbsp;&amp;&nbsp;(ByteAddressBits&nbsp;downto&nbsp;1&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemoryAddress&nbsp;&nbsp;&nbsp;&nbsp;:=&nbsp;TransferAddress(LAR.Addr&apos;left&nbsp;downto&nbsp;AXI_BYTE_ADDR_WIDTH)&nbsp;&amp;&nbsp;(AXI_BYTE_ADDR_WIDTH&nbsp;downto&nbsp;1&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Memory&nbsp;is&nbsp;byte&nbsp;oriented.&nbsp;&nbsp;Access&nbsp;as&nbsp;Bytes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;0&nbsp;to&nbsp;AXI_DATA_BYTE_WIDTH-1&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemRead(MemoryID,&nbsp;MemoryAddress&nbsp;+&nbsp;i,&nbsp;ByteData)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LRD.Data((8*i&nbsp;+&nbsp;7)&nbsp;&nbsp;downto&nbsp;8*i)&nbsp;:=&nbsp;ByteData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Memory&nbsp;Read.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARAddr:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LAR.Addr)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;ARProt:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_string&nbsp;(LAR.Prot)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;RData:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(LRD.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string&nbsp;(ReadDataRequestCount),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFO\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(ReadDataFifo,&nbsp;LRD.Data&nbsp;&amp;&nbsp;ModelRResp)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;increment(ReadDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadHandlerLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadHandler&nbsp;;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;--&nbsp;&nbsp;ReadDataHandler\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;Create&nbsp;Read&nbsp;Data&nbsp;Response&nbsp;Transactions\n&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;delays&nbsp;at&nbsp;this&nbsp;point&nbsp;are&nbsp;due&nbsp;to&nbsp;AXI&nbsp;Read&nbsp;Data&nbsp;interface&nbsp;operations\n&nbsp;&nbsp;------------------------------------------------------------\n&nbsp;&nbsp;ReadDataHandler&nbsp;:&nbsp;process\n&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;&nbsp;&nbsp;&nbsp;RD&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;is&nbsp;AxiBus.ReadData&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;Local&nbsp;:&nbsp;AxiBus.ReadData&apos;subtype&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;ReadDataReadyTimeOut&nbsp;:&nbsp;integer&nbsp;:=&nbsp;25&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;variable&nbsp;NewTransfer&nbsp;:&nbsp;std_logic&nbsp;:=&nbsp;&apos;1&apos;&nbsp;;&nbsp;\n&nbsp;&nbsp;begin\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;initialize\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Valid&nbsp;&lt;=&nbsp;&apos;0&apos;&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;(Local.Data&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;(Local.Resp&apos;range&nbsp;=&gt;&nbsp;&apos;0&apos;)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;&nbsp;--&nbsp;Allow&nbsp;ReadDataFifo&nbsp;to&nbsp;initialize\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ReadDataLoop&nbsp;:&nbsp;loop\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;empty(ReadDataFifo)&nbsp;then\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForToggle(ReadDataRequestCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;if&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Local.Data,&nbsp;Local.Resp)&nbsp;:=&nbsp;pop(ReadDataFifo)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForClock(Clk,&nbsp;integer&apos;(Params.Get(Axi4OptionsType&apos;POS(READ_DATA_VALID_DELAY_CYCLES))))&nbsp;;&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Transaction&nbsp;Values\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;Local.Data&nbsp;&nbsp;after&nbsp;tpd_Clk_RDATA&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_RResp&nbsp;;\n&nbsp;\n--!9&nbsp;Resolve&nbsp;Level\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log(ModelID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Read&nbsp;Data.&quot;&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;RData:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Data)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;RResp:&nbsp;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;to_hxstring(Local.Resp)&nbsp;&amp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;&nbsp;Operation#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DEBUG\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetAxi4Parameter(Params,&nbsp;READ_DATA_READY_TIME_OUT,&nbsp;ReadDataReadyTimeOut)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoAxiValidHandshake&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---------------------\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;Clk,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadData.Valid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ready&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;AxiBus.ReadData.Ready,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tpd_Clk_Valid&nbsp;&nbsp;=&gt;&nbsp;&nbsp;tpd_Clk_RValid,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertLogID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;BusFailedID,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutMessage&nbsp;=&gt;&nbsp;&nbsp;&quot;Read&nbsp;Data&nbsp;#&nbsp;&quot;&nbsp;&amp;&nbsp;to_string(ReadDataDoneCount&nbsp;+&nbsp;1),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeOutPeriod&nbsp;&nbsp;=&gt;&nbsp;&nbsp;ReadDataReadyTimeOut&nbsp;*&nbsp;tperiod_Clk\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;State&nbsp;after&nbsp;operation\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Data&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Data&nbsp;&nbsp;after&nbsp;tpd_Clk_RDATA&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RD.Resp&nbsp;&nbsp;&lt;=&nbsp;not&nbsp;Local.Resp&nbsp;&nbsp;after&nbsp;tpd_Clk_RResp&nbsp;;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;Signal&nbsp;completion\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment(ReadDataDoneCount)&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait&nbsp;for&nbsp;0&nbsp;ns&nbsp;;\n&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;loop&nbsp;ReadDataLoop&nbsp;;\n&nbsp;&nbsp;end&nbsp;process&nbsp;ReadDataHandler&nbsp;;\n&nbsp;\nend&nbsp;architecture&nbsp;MemorySubordinate&nbsp;;\n';
Report.brushes['./../../../SynthWorks/Dev/_osvvm/OsvvmLibraries/AXI4/Axi4Lite/src/Axi4LiteMemory.vhd'] = 'vhdl'
