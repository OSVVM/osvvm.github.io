var g_data = {"name":"C:/OsvvmLibraries/Ethernet/src/xMiiPhy.vhd","src":"--\n--  File Name:         xMiiPhy.vhd\n--  Design Unit Name:  xMiiPhy\n--  Revision:          OSVVM MODELS STANDARD VERSION\n--\n--  Maintainer:        Jim Lewis      email:  jim@synthworks.com\n--  Contributor(s):\n--     Jim Lewis      jim@synthworks.com\n--\n--\n--  Description:\n--      Ethernet GMII/RGMII/MII/RMII VC\n--      First target is to support PHY\n--      Later on need basis consider supporting MAC\n--\n--\n--  Developed by:\n--        SynthWorks Design Inc.\n--        VHDL Training Classes\n--        http://www.SynthWorks.com\n--\n--  Revision History:\n--    Date      Version    Description\n--    10/2022   2022.10    Initial Release\n--\n--\n--  This file is part of OSVVM.\n--\n--  Copyright (c) 2022 by SynthWorks Design Inc.\n--\n--  Licensed under the Apache License, Version 2.0 (the \"License\");\n--  you may not use this file except in compliance with the License.\n--  You may obtain a copy of the License at\n--\n--      https://www.apache.org/licenses/LICENSE-2.0\n--\n--  Unless required by applicable law or agreed to in writing, software\n--  distributed under the License is distributed on an \"AS IS\" BASIS,\n--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n--  See the License for the specific language governing permissions and\n--  limitations under the License.\n--\n\nlibrary ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.numeric_std.all ;\n  use ieee.numeric_std_unsigned.all ;\n  use ieee.math_real.all ;\n\nlibrary osvvm ;\n  context osvvm.OsvvmContext ;\n  use osvvm.ScoreboardPkg_slv.all ;\n\nlibrary osvvm_common ;\n  context osvvm_common.OsvvmCommonContext ;\n\n  use work.xMiiComponentPkg.all ;\n  use work.xMiiTbPkg.all ;\n\nentity xMiiPhy is\n  generic (\n    MODEL_ID_NAME  : string := \"\" ;\n    MII_INTERFACE  : xMiiInterfaceType := GMII ;\n    MII_BPS        : xMiiBpsType       := BPS_1G ;\n    DEFAULT_DELAY  : time := 1 ns ;\n    tpd            : time := DEFAULT_DELAY \n  ) ;\n  port (\n    -- xMii Transmitter Functional Interface\n    GTx_Clk   : in  std_logic ;  -- GMII, RGMII\n    Tx_Clk    : out std_logic ;  -- MII\n    TxD       : in  std_logic_vector(0 to 7) ; \n    Tx_En     : in  std_logic ; \n    Tx_Er     : in  std_logic ; \n    Tx_Ctl    : in  std_logic ; \n    \n    -- xMii Receiver Interface\n    Rx_Clk    : out std_logic ; \n    RxD       : out std_logic_vector(0 to 7) ; \n    Rx_Dv     : out std_logic ; \n    Rx_Er     : out std_logic ; \n    Rx_Ctl    : out std_logic ; \n    Crs       : out std_logic ; \n    Col       : out std_logic ; \n    \n    -- Testbench Transaction Interface\n    PhyTxRec     : inout StreamRecType ;  -- Information inbound to this VC\n    PhyRxRec     : inout StreamRecType    -- Information outbound of this VC\n  ) ;\n\n  -- Use MODEL_ID_NAME Generic if set, otherwise,\n  -- use model instance label (preferred if set as entityname_1)\n  constant MODEL_INSTANCE_NAME : string :=\n    IfElse(MODEL_ID_NAME'length > 0, MODEL_ID_NAME, \n      to_lower(PathTail(xMiiPhy'PATH_NAME))) ;\n\nend entity xMiiPhy ;\narchitecture behavioral of xMiiPhy is\n\n  -- MDIO settings\n  signal xMiiInterface : xMiiInterfaceType := MII_INTERFACE ;\n  signal xMiiBps       : xMiiBpsType       := MII_BPS ;\n\nbegin\n\n\n--!! TODO - Add MDIO interface to drive \n--!!      xMiiInterface : in xMiiInterfaceType := GMII ;\n--!!      xMiiBps       : in xMiiBpsType       := BPS_1G ;\n\n\n\n  xMiiPhyRxTransmitter_1 : xMiiPhyRxTransmitter \n    generic map (\n      MODEL_ID_NAME  => MODEL_INSTANCE_NAME & \".Rx\",\n      DEFAULT_DELAY  => DEFAULT_DELAY,\n      Tpd            => Tpd\n    ) \n    port map (\n      -- Configured by MDIO - it can change during operation based on PHY negotiation\n      xMiiInterface => xMiiInterface,\n      xMiiBps       => xMiiBps      ,\n      \n      -- xMiiPhyRxTransmitter Receiver Interface\n      Rx_Clk        => Rx_Clk       ,\n      RxD           => RxD          ,\n      Rx_Dv         => Rx_Dv        ,\n      Rx_Er         => Rx_Er        ,\n      Rx_Ctl        => Rx_Ctl       ,\n      Crs           => Crs          ,\n      Col           => Col          ,\n      \n      -- Testbench Transaction Interface\n      TransRec      => PhyRxRec\n    ) ;\n\n  xMiiPhyTxReceiver_1 : xMiiPhyTxReceiver \n    generic map (\n      MODEL_ID_NAME  => MODEL_INSTANCE_NAME & \".Tx\",\n      DEFAULT_DELAY  => DEFAULT_DELAY,\n      Tpd            => Tpd\n    ) \n    port map (\n      -- Configured by MDIO - it can change during operation based on PHY negotiation\n      xMiiInterface => xMiiInterface,\n      xMiiBps       => xMiiBps      ,\n      \n      -- xMiiPhyTxReceiver Transmitter Functional Interface\n      GTx_Clk       => GTx_Clk      ,\n      Tx_Clk        => Tx_Clk       ,\n      TxD           => TxD          ,\n      Tx_En         => Tx_En        ,\n      Tx_Er         => Tx_Er        ,\n      Tx_Ctl        => Tx_Ctl       ,\n      \n      -- Testbench Transaction Interface\n      TransRec      => PhyTxRec\n    ) ;\nend architecture behavioral ;\n","lang":"vhdl"};
processSrcData(g_data);