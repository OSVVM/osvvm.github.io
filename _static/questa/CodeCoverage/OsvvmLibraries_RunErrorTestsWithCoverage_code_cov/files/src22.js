var g_data = {"name":"C:/OsvvmLibraries/osvvm/ResizePkg.vhd","src":"--\n--  File Name:         ResizePkg.vhd\n--  Design Unit Name:  ResizePkg\n--  Revision:          STANDARD VERSION\n--\n--  Maintainer:        Jim Lewis      email:  jim@SynthWorks.com \n--  Contributor(s):            \n--     Jim Lewis      email:  jim@SynthWorks.com   \n--\n--  Package Defines\n--      Resizing for transaction records\n--    \n--  Developed for: \n--        SynthWorks Design Inc. \n--        VHDL Training Classes\n--        11898 SW 128th Ave.  Tigard, Or  97223\n--        http://www.SynthWorks.com\n--\n--  Revision History:\n--    Date      Version    Description\n--    03/2024   2024.03    Added AlertLogID to SafeResize\n--    06/2021   2021.06    Refactored from ResolutionPkg\n--\n--\n--  This file is part of OSVVM.\n--  \n--  Copyright (c) 2005 - 2024 by SynthWorks Design Inc.  \n--  \n--  Licensed under the Apache License, Version 2.0 (the \"License\");\n--  you may not use this file except in compliance with the License.\n--  You may obtain a copy of the License at\n--  \n--      https://www.apache.org/licenses/LICENSE-2.0\n--  \n--  Unless required by applicable law or agreed to in writing, software\n--  distributed under the License is distributed on an \"AS IS\" BASIS,\n--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n--  See the License for the specific language governing permissions and\n--  limitations under the License.\n--  \n\n\nlibrary ieee ; \nuse ieee.std_logic_1164.all ; \nuse ieee.numeric_std.all ; \n\nuse work.AlertLogPkg.all ; \nuse work.ResolutionPkg.all ; \n\npackage ResizePkg is \n  ------------------------------------------------------------\n  -- SafeResize\n  -- Convert and resize to/from std_logic_vector and std_logic_vector_max_c\n  -- Generate an error if the value changes on downsize (for unsigned, throw away a 1)\n  --\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector; Size : natural) return std_logic_vector ;\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector; Size : natural) return std_logic_vector_max_c ;\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector_max_c; Size : natural) return std_logic_vector ;\n\n  impure function SafeResize(A : std_logic_vector; Size : natural) return std_logic_vector ;\n  impure function SafeResize(A : std_logic_vector; Size : natural) return std_logic_vector_max_c ;\n  impure function SafeResize(A : std_logic_vector_max_c; Size : natural) return std_logic_vector ;\n\n  ------------------------------------------------------------\n  -- Extend (upsize) and Reduce (downsize)\n  function Extend(A: std_logic_vector; Size : natural) return std_logic_vector ;\n  function Reduce(A: std_logic_vector; Size : natural) return std_logic_vector ;\n\n  ------------------------------------------------------------\n  -- Deprecated:  ToTransaction/FromTransaction - Deprecated by SafeResize\n  function        ToTransaction(A : std_logic_vector) return std_logic_vector_max_c ;\n  impure function ToTransaction(A : std_logic_vector ; Size : natural) return std_logic_vector_max_c ;\n  function        ToTransaction(A : integer; Size : natural) return std_logic_vector_max_c ;\n  \n  function        FromTransaction (A: std_logic_vector_max_c) return std_logic_vector ;\n  impure function FromTransaction (A: std_logic_vector_max_c ; Size : natural) return std_logic_vector ;\n  function        FromTransaction (A: std_logic_vector_max_c) return integer ;\n  \n  ------------------------------------------------------------\n  -- Deprecated:  ToTransaction/FromTransaction - Provided for symmetry - Deprecated by SafeResize\n  function        ToTransaction(A : std_logic_vector) return std_logic_vector ;  -- Symmetry\n  impure function ToTransaction(A : std_logic_vector ; Size : natural) return std_logic_vector ;\n  function        ToTransaction(A : integer; Size : natural) return std_logic_vector ;\n  \n  function        FromTransaction (A: std_logic_vector) return std_logic_vector ; -- Symmetry\n  impure function FromTransaction (A: std_logic_vector ; Size : natural) return std_logic_vector ;\n  function        FromTransaction (A: std_logic_vector) return integer ;    \n  \nend package ResizePkg ;\npackage body ResizePkg is \n\n  ------------------------------------------------------------\n  -- SafeResize\n  -- Convert and resize to/from std_logic_vector and std_logic_vector_max_c\n  -- Generate an error if the value changes on downsize (for unsigned, throw away a 1)\n  --\n  ------------------------------------------------------------\n  impure function LocalSafeResize(A : std_logic_vector; Size : natural; ID : AlertLogIDType := ALERT_DEFAULT_ID) return std_logic_vector is\n  ------------------------------------------------------------\n    variable Result : std_logic_vector(Size-1 downto 0) := (others => '0') ;\n    alias aA : std_logic_vector(A'length-1 downto 0) is A ;\n  begin\n    if A'length <= Size then\n      -- Extend A with '0' (see initialization)\n      Result(A'length-1 downto 0) := aA ;\n    else\n      -- Reduce A and Error if any extra bits of A are a '1'\n      Result := aA(Size-1 downto 0) ;\n      AlertIf(ID, (OR aA(A'length-1 downto Size) = '1'), \n        \"SafeResize: value changed on resize.  Original value: \" & to_hstring(A) & \n        \",  Resized value: \" & to_hstring(Result) ) ;\n    end if ;    \n    return Result ;\n  end function LocalSafeResize ;\n \n  ------------------------------------------------------------\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n  begin\n    return LocalSafeResize(A, Size, ID) ;\n  end function SafeResize ;\n\n  ------------------------------------------------------------\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector; Size : natural) return std_logic_vector_max_c is\n  ------------------------------------------------------------\n  begin\n    return std_logic_vector_max_c(LocalSafeResize(A, Size, ID)) ;\n  end function SafeResize ;\n\n  ------------------------------------------------------------\n  impure function SafeResize(ID : AlertLogIDType ; A : std_logic_vector_max_c; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n  begin\n    return LocalSafeResize(std_logic_vector(A), Size, ID) ;\n  end function SafeResize ;\n\n  ------------------------------------------------------------\n  impure function SafeResize(A : std_logic_vector; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n  begin\n    return LocalSafeResize(A, Size) ;\n  end function SafeResize ;\n\n  ------------------------------------------------------------\n  impure function SafeResize(A : std_logic_vector; Size : natural) return std_logic_vector_max_c is\n  ------------------------------------------------------------\n  begin\n    return std_logic_vector_max_c(LocalSafeResize(A, Size)) ;\n  end function SafeResize ;\n\n  ------------------------------------------------------------\n  impure function SafeResize(A : std_logic_vector_max_c; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n  begin\n    return LocalSafeResize(std_logic_vector(A), Size) ;\n  end function SafeResize ;\n\n\n  ------------------------------------------------------------\n  -- Extend (upsize) and Reduce (downsize)\n  function Extend(A: std_logic_vector; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n    variable extA : std_logic_vector(Size downto 1) := (others => '0') ;\n  begin\n    extA(A'length downto 1) := A ;\n    return extA ;\n  end function Extend ;\n\n  ------------------------------------------------------------\n  function Reduce(A: std_logic_vector; Size : natural) return std_logic_vector is\n  ------------------------------------------------------------\n    alias aA : std_logic_vector(A'length-1 downto 0) is A ;\n  begin\n    return aA(Size-1 downto 0) ;\n  end function Reduce ;\n  \n\n  ------------------------------------------------------------\n  -- Deprecated:  ToTransaction/FromTransaction - Deprecated by SafeResize\n  function ToTransaction(A : std_logic_vector) return std_logic_vector_max_c is\n  begin\n    return std_logic_vector_max_c(A) ;\n  end function ToTransaction ;\n\n  impure function ToTransaction(A : std_logic_vector ; Size : natural) return std_logic_vector_max_c is\n  begin\n    return std_logic_vector_max_c(LocalSafeResize(A, Size)) ;\n  end function ToTransaction ;\n\n  function ToTransaction(A : integer; Size : natural) return std_logic_vector_max_c is\n  begin\n    return std_logic_vector_max_c(to_signed(A, Size)) ;\n  end function ToTransaction ;\n\n  function FromTransaction (A: std_logic_vector_max_c) return std_logic_vector is\n  begin\n    return std_logic_vector(A) ;\n  end function FromTransaction ;\n\n  impure function FromTransaction (A: std_logic_vector_max_c ; Size : natural) return std_logic_vector is\n  begin\n    return LocalSafeResize(std_logic_vector(A), Size) ;\n  end function FromTransaction ;\n\n  function FromTransaction (A: std_logic_vector_max_c) return integer is\n  begin\n    return to_integer(signed(A)) ;\n  end function FromTransaction ;\n  \n  ------------------------------------------------------------\n  -- Deprecated:  ToTransaction/FromTransaction - Provided for symmetry - Deprecated by SafeResize\n  function ToTransaction(A : std_logic_vector) return std_logic_vector is\n  begin\n    return A ;\n  end function ToTransaction ;\n\n  impure function ToTransaction(A : std_logic_vector ; Size : natural) return std_logic_vector is\n  begin\n    return LocalSafeResize(A, Size) ;\n  end function ToTransaction ;\n\n  function ToTransaction(A : integer; Size : natural) return std_logic_vector is\n  begin\n    return std_logic_vector(to_signed(A, Size)) ;\n  end function ToTransaction ;\n\n  function FromTransaction (A: std_logic_vector) return std_logic_vector is\n  begin\n    return A ;\n  end function FromTransaction ;\n\n  impure function FromTransaction (A: std_logic_vector ; Size : natural) return std_logic_vector is\n  begin\n    return LocalSafeResize(A, Size) ;\n  end function FromTransaction ;\n\n  function FromTransaction (A: std_logic_vector) return integer is\n  begin\n    return to_integer(signed(A)) ;\n  end function FromTransaction ;  \n  \nend package body ResizePkg ;\n","lang":"vhdl"};
processSrcData(g_data);