var g_data = {"name":"C:/SynthWorks/Dev/_osvvm/OsvvmLibraries/AXI4/common/src/Axi4OptionsArrayPkg.vhd","src":"--\n--  File Name:         Axi4OptionsArrayPkg.vhd\n--  Design Unit Name:  Axi4OptionsArrayPkg\n--  Revision:          OSVVM MODELS STANDARD VERSION\n--\n--  Maintainer:        Jim Lewis      email:  jim@synthworks.com\n--  Contributor(s):\n--     Jim Lewis      jim@synthworks.com\n--\n--\n--  Description:\n--      Defines types, constants, and subprograms used by\n--      OSVVM Address Bus Transaction Based Models (aka: TBM, TLM, VVC)\n--\n--\n--  Developed by:\n--        SynthWorks Design Inc.\n--        VHDL Training Classes\n--        http://www.SynthWorks.com\n--\n--  Revision History:\n--    Date      Version    Description\n--    11/2022   2022.11    Initial.  Derived from Axi4OptionsPkg\n--\n--\n--  This file is part of OSVVM.\n--\n--  Copyright (c) 2022 by SynthWorks Design Inc.\n--\n--  Licensed under the Apache License, Version 2.0 (the \"License\");\n--  you may not use this file except in compliance with the License.\n--  You may obtain a copy of the License at\n--\n--      https://www.apache.org/licenses/LICENSE-2.0\n--\n--  Unless required by applicable law or agreed to in writing, software\n--  distributed under the License is distributed on an \"AS IS\" BASIS,\n--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n--  See the License for the specific language governing permissions and\n--  limitations under the License.\n--\nlibrary ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.numeric_std.all ;\n  use ieee.numeric_std_unsigned.all ;\n  use ieee.math_real.all ;\n\nlibrary osvvm ;\n    context osvvm.OsvvmContext ;\n\nlibrary OSVVM_Common ;\n    context OSVVM_Common.OsvvmCommonContext ;\n\nuse work.Axi4InterfaceCommonPkg.all ;\nuse work.Axi4InterfacePkg.all ;\nuse work.Axi4LiteInterfacePkg.all ; \n\nuse work.Axi4OptionsPkg.all ; \n\n\npackage Axi4OptionsArrayPkg is\n\n  --\n  --  Abstraction Layer to support SetModelOptions using enumerated values\n  --\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    boolean\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    std_logic\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    integer\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    std_logic_vector\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    Axi4RespEnumType\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   boolean\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   std_logic\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   integer\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   std_logic_vector\n  ) ;\n  \n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   Axi4RespEnumType\n  ) ;\n\nend package Axi4OptionsArrayPkg ;\n\n-- /////////////////////////////////////////////////////////////////////////////////////////\n-- /////////////////////////////////////////////////////////////////////////////////////////\n\npackage body Axi4OptionsArrayPkg is\n\n  --\n  --  Abstraction Layer to support SetModelOptions using enumerated values\n  --\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    boolean\n  ) is\n  begin\n    SetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), boolean'pos(OptVal)) ;\n  end procedure SetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    std_logic\n  ) is\n  begin\n    SetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), std_logic'pos(OptVal)) ;\n  end procedure SetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    integer\n  ) is\n  begin\n    SetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), OptVal) ;\n  end procedure SetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    std_logic_vector\n  ) is\n  begin\n    SetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), OptVal) ;\n  end procedure SetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure SetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    constant OptVal         : In    Axi4RespEnumType\n  ) is\n  begin\n    SetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), Axi4RespEnumType'pos(OptVal)) ;\n  end procedure SetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   boolean\n  ) is\n    variable IntOptVal : integer ;\n  begin\n    GetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), IntOptVal) ;\n    OptVal := IntOptVal >= 1 ;\n  end procedure GetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   std_logic\n  ) is\n    variable IntOptVal : integer ;\n  begin\n    GetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), IntOptVal) ;\n    OptVal := std_logic'val(IntOptVal) ;\n  end procedure GetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   integer\n  ) is\n  begin\n    GetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), OptVal) ;\n  end procedure GetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   std_logic_vector\n  ) is\n  begin\n    GetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), OptVal) ;\n  end procedure GetAxi4Options ;\n\n  ------------------------------------------------------------\n  procedure GetAxi4Options (\n  ------------------------------------------------------------\n    signal   TransactionRec : InOut AddressBusRecArrayType ;\n    constant Index          : In    integer ;\n    constant Option         : In    Axi4OptionsType ;\n    variable OptVal         : Out   Axi4RespEnumType\n  ) is\n    variable IntOptVal : integer ;\n  begin\n    GetModelOptions(TransactionRec, Index, Axi4OptionsType'POS(Option), IntOptVal) ;\n    OptVal := Axi4RespEnumType'val(IntOptVal) ;\n  end procedure GetAxi4Options ;\n\n\nend package body Axi4OptionsArrayPkg ;","lang":"vhdl"};
processSrcData(g_data);