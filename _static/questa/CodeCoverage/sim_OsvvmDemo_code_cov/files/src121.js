var g_data = {"name":"C:/SynthWorks/Dev/_osvvm/OsvvmLibraries/AXI4/AxiStream/src/AxiStreamTbPkg.vhd","src":"--\n--  File Name:         AxiStreamTbPkg.vhd\n--  Design Unit Name:  AxiStreamTbPkg\n--  OSVVM Release:     OSVVM MODELS STANDARD VERSION\n--\n--  Maintainer:        Jim Lewis      email:  jim@synthworks.com\n--  Contributor(s):\n--     Jim Lewis      jim@synthworks.com\n--\n--\n--  Description:\n--      Defines types, constants, and subprograms used by\n--      OSVVM Axi4 Transaction Based Models (aka: TBM, TLM, VVC)\n--\n--\n--  Developed by:\n--        SynthWorks Design Inc.\n--        VHDL Training Classes\n--        http://www.SynthWorks.com\n--\n--  Revision History:\n--    Date      Version    Description\n--    2018.05   2018.05    Initial revision released as AxiStreamTransactionPkg\n--    01/2020   2020.01    Updated license notice\n--\n--\n--  This file is part of OSVVM.\n--  \n--  Copyright (c) 2018 - 2020 by SynthWorks Design Inc.  \n--  \n--  Licensed under the Apache License, Version 2.0 (the \"License\");\n--  you may not use this file except in compliance with the License.\n--  You may obtain a copy of the License at\n--  \n--      https://www.apache.org/licenses/LICENSE-2.0\n--  \n--  Unless required by applicable law or agreed to in writing, software\n--  distributed under the License is distributed on an \"AS IS\" BASIS,\n--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n--  See the License for the specific language governing permissions and\n--  limitations under the License.\n--  \n\nlibrary ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.numeric_std.all ;\n  use ieee.numeric_std_unsigned.all ;\n  use ieee.math_real.all ;\n\n  use std.textio.all ;\n\nlibrary OSVVM ; \n  context OSVVM.OsvvmContext ;  \n\n  \npackage AxiStreamTbPkg is \n  ------------------------------------------------------------\n  function UpdateOptions (\n  ------------------------------------------------------------\n    Param     : std_logic_vector ;\n    ParamID   : std_logic_vector ; \n    ParamDest : std_logic_vector ; \n    ParamUser : std_logic_vector ;\n    ParamLast : integer ;\n    Count     : integer \n  ) return std_logic_vector ;\n\n\nend AxiStreamTbPkg ;\n\npackage body AxiStreamTbPkg is \n\n  ------------------------------------------------------------\n  function UpdateOptions (\n  ------------------------------------------------------------\n    Param     : std_logic_vector ;\n    ParamID   : std_logic_vector ; \n    ParamDest : std_logic_vector ; \n    ParamUser : std_logic_vector ;\n    ParamLast : integer ;\n    Count     : integer \n  ) return std_logic_vector is\n    constant PARAM_LEN : integer := Param'length ; \n    constant ID_LEN    : integer := ParamID'length ; \n    constant DEST_LEN  : integer := ParamDest'length ; \n    constant USER_LEN  : integer := ParamUser'length ; \n    variable ResultParam : std_logic_vector(PARAM_LEN -1 downto 0) ; \n    \n    constant ID_RIGHT    : integer := DEST_LEN + USER_LEN + 1 ; \n    constant DEST_RIGHT  : integer := USER_LEN + 1 ;\n    constant USER_RIGHT  : integer := 1 ; \n    alias Last  : std_logic is ResultParam(0) ;\n  begin    \n    ResultParam := Param ;\n    \n    if ID_LEN > 0 and ResultParam(ID_RIGHT) = '-' then\n      ResultParam(PARAM_LEN-1 downto ID_RIGHT) := ParamID ; \n    end if ; \n    \n    if DEST_LEN > 0 and ResultParam(DEST_RIGHT) = '-' then \n      ResultParam(ID_RIGHT-1 downto DEST_RIGHT) := ParamDest ; \n    end if ; \n    \n    if USER_LEN > 0 and ResultParam(USER_RIGHT) = '-' then \n      ResultParam(DEST_RIGHT-1 downto USER_RIGHT) := ParamUser ; \n    end if ; \n    \n    -- Calculate Last.  \n    if Last = '-' then  -- use defaults\n      if ParamLast <= 1 then \n        Last := '1' when ParamLast = 1 else '0' ; \n      else \n        -- generate last once every ParamLast cycles\n        Last := '1' when (Count mod ParamLast) = 0 else '0' ; \n      end if ; \n    end if ; \n    return ResultParam ; \n  end function UpdateOptions ; \n    \nend AxiStreamTbPkg ;\n","lang":"vhdl"};
processSrcData(g_data);