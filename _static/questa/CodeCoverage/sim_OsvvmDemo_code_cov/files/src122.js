var g_data = {"name":"C:/SynthWorks/Dev/_osvvm/OsvvmLibraries/AXI4/AxiStream/src/AxiStreamOptionsArrayPkg.vhd","src":"--\n--  File Name:         AxiStreamOptionsArrayPkg.vhd\n--  Design Unit Name:  AxiStreamOptionsArrayPkg\n--  Revision:          OSVVM MODELS STANDARD VERSION\n--\n--  Maintainer:        Jim Lewis      email:  jim@synthworks.com\n--  Contributor(s):\n--     Jim Lewis      jim@synthworks.com\n--\n--\n--  Description:\n--      Defines an abstraction layer to define options settings\n--      for AxiStream.\n--\n--\n--  Developed by:\n--        SynthWorks Design Inc.\n--        VHDL Training Classes\n--        http://www.SynthWorks.com\n--\n--  Revision History:\n--    Date      Version    Description\n--    11/2022   2022.11    Initial revision.  Derrived from AxiStreamOptionsPkg\n--\n--\n--  This file is part of OSVVM.\n--\n--  Copyright (c) 2022 by SynthWorks Design Inc.\n--\n--  Licensed under the Apache License, Version 2.0 (the \"License\");\n--  you may not use this file except in compliance with the License.\n--  You may obtain a copy of the License at\n--\n--      https://www.apache.org/licenses/LICENSE-2.0\n--\n--  Unless required by applicable law or agreed to in writing, software\n--  distributed under the License is distributed on an \"AS IS\" BASIS,\n--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n--  See the License for the specific language governing permissions and\n--  limitations under the License.\n--\nlibrary ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.numeric_std.all ;\n  use ieee.numeric_std_unsigned.all ;\n  use ieee.math_real.all ;\n\nlibrary osvvm ;\n    context osvvm.OsvvmContext ;\n\nlibrary OSVVM_Common ;\n    context OSVVM_Common.OsvvmCommonContext ;\n    \n  use work.AxiStreamOptionsPkg.all ; \n\npackage AxiStreamOptionsArrayPkg is\n\n\n  -- ========================================================\n  --  SetAxiStreamOptions / GetAxiStreamOptions\n  --  Abstraction layer to SetAxiStreamOptions / GetAxiStreamOptions\n  --  from StreamTransactionPkg.\n  --  Allows calls to have enumerated values rather than constants.\n  --  This way we do not need to manage constant values.\n  --  Places std_logic_vector options in ParamToModel since\n  --  they can be larger than DataToModel\n  -- ========================================================\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    integer\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    boolean\n  ) ;\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    std_logic_vector\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   integer\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   boolean\n  ) ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   std_logic_vector\n  ) ;\n\n\nend package AxiStreamOptionsArrayPkg ;\n\n-- /////////////////////////////////////////////////////////////////////////////////////////\n-- /////////////////////////////////////////////////////////////////////////////////////////\n\npackage body AxiStreamOptionsArrayPkg is\n\n  -- ========================================================\n  --  SetAxiStreamOptions / GetAxiStreamOptions\n  --  For integer uses normal connections\n  --  For std_logic_vector, uses ParamToModel/ParamFromModel\n  -- ========================================================\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    integer\n  ) is\n  begin\n    SetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option), OptVal) ;\n  end procedure SetAxiStreamOptions ;\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    boolean\n  ) is\n  begin\n    SetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option), OptVal) ;\n  end procedure SetAxiStreamOptions ;\n\n  ------------------------------------------------------------\n  procedure SetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    constant OptVal      : In    std_logic_vector\n  ) is\n  begin\n    TransRec(Index).ParamToModel <= ToTransaction(OptVal, TransRec(Index).ParamToModel'length) ;\n    SetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option)) ;\n  end procedure SetAxiStreamOptions ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   integer\n  ) is\n  begin\n    GetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option), OptVal) ;\n  end procedure GetAxiStreamOptions ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   boolean\n  ) is\n  begin\n    GetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option), OptVal) ;\n  end procedure GetAxiStreamOptions ;\n\n  ------------------------------------------------------------\n  procedure GetAxiStreamOptions (\n  ------------------------------------------------------------\n    signal   TransRec    : InOut StreamRecArrayType ;\n    constant Index       : In    integer ;\n    constant Option      : In    AxiStreamOptionsType ;\n    variable OptVal      : Out   std_logic_vector\n  ) is\n  begin\n    GetModelOptions(TransRec, Index, AxiStreamOptionsType'POS(Option)) ;\n    OptVal := FromTransaction(TransRec(Index).ParamFromModel, OptVal'length) ;\n  end procedure GetAxiStreamOptions ;\n\nend package body AxiStreamOptionsArrayPkg ;","lang":"vhdl"};
processSrcData(g_data);